[{"E:\\work\\firebase\\ProRMS\\src\\index.js":"1","E:\\work\\firebase\\ProRMS\\src\\serviceWorker.js":"2","E:\\work\\firebase\\ProRMS\\src\\components\\Firebase\\context.js":"3","E:\\work\\firebase\\ProRMS\\src\\components\\App.js":"4","E:\\work\\firebase\\ProRMS\\src\\themes\\index.js":"5","E:\\work\\firebase\\ProRMS\\src\\themes\\default.js":"6","E:\\work\\firebase\\ProRMS\\src\\pages\\login\\Login.js":"7","E:\\work\\firebase\\ProRMS\\src\\components\\Layout\\Layout.js":"8","E:\\work\\firebase\\ProRMS\\src\\pages\\login\\styles.js":"9","E:\\work\\firebase\\ProRMS\\src\\components\\Widget\\Widget.js":"10","E:\\work\\firebase\\ProRMS\\src\\components\\PageTitle\\PageTitle.js":"11","E:\\work\\firebase\\ProRMS\\src\\components\\Widget\\styles.js":"12","E:\\work\\firebase\\ProRMS\\src\\components\\PageTitle\\styles.js":"13","E:\\work\\firebase\\ProRMS\\src\\components\\Wrappers\\Wrappers.js":"14","E:\\work\\firebase\\ProRMS\\src\\components\\Layout\\styles.js":"15","E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\Dashboard.js":"16","E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\Sidebar.js":"17","E:\\work\\firebase\\ProRMS\\src\\components\\Header\\Header.js":"18","E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\mock.js":"19","E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\styles.js":"20","E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\styles.js":"21","E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\components\\Dot.js":"22","E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"23","E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"24","E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\components\\Table\\Table.js":"25","E:\\work\\firebase\\ProRMS\\src\\components\\Header\\styles.js":"26","E:\\work\\firebase\\ProRMS\\src\\components\\Notification\\Notification.js":"27","E:\\work\\firebase\\ProRMS\\src\\components\\UserAvatar\\UserAvatar.js":"28","E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"29","E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"30","E:\\work\\firebase\\ProRMS\\src\\components\\UserAvatar\\styles.js":"31","E:\\work\\firebase\\ProRMS\\src\\components\\Notification\\styles.js":"32","E:\\work\\firebase\\ProRMS\\src\\components\\CircularProgressWithLabel\\index.js":"33","E:\\work\\firebase\\ProRMS\\src\\redux\\store\\index.js":"34","E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\authreducer.js":"35","E:\\work\\firebase\\ProRMS\\src\\redux\\store\\types.js":"36","E:\\work\\firebase\\ProRMS\\src\\redux\\index.js":"37","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\authactions.js":"38","E:\\work\\firebase\\ProRMS\\src\\config.js":"39","E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\calculatorreducer.js":"40","E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\cashreducer.js":"41","E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\feereducer.js":"42","E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\batteryreducer.js":"43","E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\addersreducer.js":"44","E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\selfgenreducer.js":"45","E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\guidereducer.js":"46","E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\usersreducer.js":"47","E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\modulesreducer.js":"48","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\calculatoractions.js":"49","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\addersactions.js":"50","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\batteryactions.js":"51","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\cashactions.js":"52","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\guideactions.js":"53","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\selfgenactions.js":"54","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\feeactions.js":"55","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\modulesactions.js":"56","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\usersactions.js":"57","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\layoutactions.js":"58","E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\layoutreducer.js":"59","E:\\work\\firebase\\ProRMS\\src\\pages\\error\\Error.js":"60","E:\\work\\firebase\\ProRMS\\src\\pages\\error\\styles.js":"61","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\authenticateactions.js":"62","E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\authenticatereducer.js":"63","E:\\work\\firebase\\ProRMS\\src\\pages\\cash\\index.js":"64","E:\\work\\firebase\\ProRMS\\src\\pages\\cash\\styles.js":"65","E:\\work\\firebase\\ProRMS\\src\\pages\\cash\\myCommandCell.js":"66","E:\\work\\firebase\\ProRMS\\src\\pages\\fee\\index.js":"67","E:\\work\\firebase\\ProRMS\\src\\pages\\fee\\styles.js":"68","E:\\work\\firebase\\ProRMS\\src\\pages\\fee\\myCommandCell.js":"69","E:\\work\\firebase\\ProRMS\\src\\pages\\battery\\index.js":"70","E:\\work\\firebase\\ProRMS\\src\\pages\\battery\\myCommandCell.js":"71","E:\\work\\firebase\\ProRMS\\src\\pages\\battery\\styles.js":"72","E:\\work\\firebase\\ProRMS\\src\\pages\\selfgen\\index.js":"73","E:\\work\\firebase\\ProRMS\\src\\pages\\module\\index.js":"74","E:\\work\\firebase\\ProRMS\\src\\pages\\selfgen\\myCommandCell.js":"75","E:\\work\\firebase\\ProRMS\\src\\pages\\selfgen\\styles.js":"76","E:\\work\\firebase\\ProRMS\\src\\pages\\module\\styles.js":"77","E:\\work\\firebase\\ProRMS\\src\\pages\\module\\myCommandCell.js":"78","E:\\work\\firebase\\ProRMS\\src\\pages\\guide\\index.js":"79","E:\\work\\firebase\\ProRMS\\src\\pages\\guide\\renderers.js":"80","E:\\work\\firebase\\ProRMS\\src\\pages\\adders\\index.js":"81","E:\\work\\firebase\\ProRMS\\src\\pages\\adders\\renderers.js":"82","E:\\work\\firebase\\ProRMS\\src\\pages\\adders\\styles.js":"83","E:\\work\\firebase\\ProRMS\\src\\pages\\adders\\customCell.js":"84","E:\\work\\firebase\\ProRMS\\src\\pages\\formulas\\index.js":"85","E:\\work\\firebase\\ProRMS\\src\\pages\\formulas\\renderers.js":"86","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\formulasactions.js":"87","E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\formulasreducer.js":"88","E:\\work\\firebase\\ProRMS\\src\\pages\\core.js":"89","E:\\work\\firebase\\ProRMS\\src\\pages\\calculator\\index.js":"90","E:\\work\\firebase\\ProRMS\\src\\pages\\calculator\\styles.js":"91","E:\\work\\firebase\\ProRMS\\src\\pages\\users\\index.js":"92","E:\\work\\firebase\\ProRMS\\src\\pages\\users\\components\\userCard.js":"93","E:\\work\\firebase\\ProRMS\\src\\components\\CircularLoading.js":"94"},{"size":1012,"mtime":1623304687983,"results":"95","hashOfConfig":"96"},{"size":5083,"mtime":1617806107463,"results":"97","hashOfConfig":"96"},{"size":824,"mtime":1617818424189,"results":"98","hashOfConfig":"96"},{"size":1963,"mtime":1623430080193,"results":"99","hashOfConfig":"96"},{"size":534,"mtime":1617806107523,"results":"100","hashOfConfig":"96"},{"size":3127,"mtime":1621287151058,"results":"101","hashOfConfig":"96"},{"size":4081,"mtime":1623441318818,"results":"102","hashOfConfig":"96"},{"size":3120,"mtime":1623430047927,"results":"103","hashOfConfig":"96"},{"size":3243,"mtime":1621287151057,"results":"104","hashOfConfig":"96"},{"size":2567,"mtime":1618144423692,"results":"105","hashOfConfig":"96"},{"size":447,"mtime":1617806107263,"results":"106","hashOfConfig":"96"},{"size":1015,"mtime":1617806107388,"results":"107","hashOfConfig":"96"},{"size":482,"mtime":1617806107263,"results":"108","hashOfConfig":"96"},{"size":3971,"mtime":1617806107388,"results":"109","hashOfConfig":"96"},{"size":710,"mtime":1621287150808,"results":"110","hashOfConfig":"96"},{"size":16155,"mtime":1623309503505,"results":"111","hashOfConfig":"96"},{"size":5210,"mtime":1623432927601,"results":"112","hashOfConfig":"96"},{"size":10837,"mtime":1623439234102,"results":"113","hashOfConfig":"96"},{"size":4288,"mtime":1617806107435,"results":"114","hashOfConfig":"96"},{"size":3000,"mtime":1617806107435,"results":"115","hashOfConfig":"96"},{"size":1363,"mtime":1617806107263,"results":"116","hashOfConfig":"96"},{"size":902,"mtime":1617806107263,"results":"117","hashOfConfig":"96"},{"size":4160,"mtime":1617806107435,"results":"118","hashOfConfig":"96"},{"size":3604,"mtime":1617806107263,"results":"119","hashOfConfig":"96"},{"size":1323,"mtime":1617806107435,"results":"120","hashOfConfig":"96"},{"size":4043,"mtime":1621286077284,"results":"121","hashOfConfig":"96"},{"size":3413,"mtime":1617806107248,"results":"122","hashOfConfig":"96"},{"size":620,"mtime":1617806107263,"results":"123","hashOfConfig":"96"},{"size":1341,"mtime":1617806107263,"results":"124","hashOfConfig":"96"},{"size":1075,"mtime":1617806107435,"results":"125","hashOfConfig":"96"},{"size":291,"mtime":1617806107263,"results":"126","hashOfConfig":"96"},{"size":1040,"mtime":1617806107263,"results":"127","hashOfConfig":"96"},{"size":940,"mtime":1621352194530,"results":"128","hashOfConfig":"96"},{"size":1421,"mtime":1623361602088,"results":"129","hashOfConfig":"96"},{"size":2547,"mtime":1623307022533,"results":"130","hashOfConfig":"96"},{"size":3209,"mtime":1623361119895,"results":"131","hashOfConfig":"96"},{"size":7200,"mtime":1623429729248,"results":"132","hashOfConfig":"96"},{"size":6206,"mtime":1623441638376,"results":"133","hashOfConfig":"96"},{"size":359,"mtime":1622675071123,"results":"134","hashOfConfig":"96"},{"size":1420,"mtime":1623274280177,"results":"135","hashOfConfig":"96"},{"size":1366,"mtime":1623274291679,"results":"136","hashOfConfig":"96"},{"size":1357,"mtime":1623274303974,"results":"137","hashOfConfig":"96"},{"size":1395,"mtime":1623274269806,"results":"138","hashOfConfig":"96"},{"size":1384,"mtime":1623274258566,"results":"139","hashOfConfig":"96"},{"size":1393,"mtime":1623274339505,"results":"140","hashOfConfig":"96"},{"size":1375,"mtime":1623274316688,"results":"141","hashOfConfig":"96"},{"size":1375,"mtime":1623274353463,"results":"142","hashOfConfig":"96"},{"size":1385,"mtime":1623274447794,"results":"143","hashOfConfig":"96"},{"size":1281,"mtime":1623432804737,"results":"144","hashOfConfig":"96"},{"size":1019,"mtime":1623360556054,"results":"145","hashOfConfig":"96"},{"size":1800,"mtime":1623354659782,"results":"146","hashOfConfig":"96"},{"size":1709,"mtime":1623351244688,"results":"147","hashOfConfig":"96"},{"size":1144,"mtime":1623358157698,"results":"148","hashOfConfig":"96"},{"size":1805,"mtime":1623354890988,"results":"149","hashOfConfig":"96"},{"size":1692,"mtime":1623431087048,"results":"150","hashOfConfig":"96"},{"size":1593,"mtime":1623354780723,"results":"151","hashOfConfig":"96"},{"size":2313,"mtime":1623429891378,"results":"152","hashOfConfig":"96"},{"size":313,"mtime":1623305394173,"results":"153","hashOfConfig":"96"},{"size":733,"mtime":1623307695997,"results":"154","hashOfConfig":"96"},{"size":1626,"mtime":1617806107435,"results":"155","hashOfConfig":"96"},{"size":1395,"mtime":1617806107435,"results":"156","hashOfConfig":"96"},{"size":442,"mtime":1623436092019,"results":"157","hashOfConfig":"96"},{"size":555,"mtime":1623307351957,"results":"158","hashOfConfig":"96"},{"size":11719,"mtime":1623436050345,"results":"159","hashOfConfig":"96"},{"size":1943,"mtime":1620806418137,"results":"160","hashOfConfig":"96"},{"size":1375,"mtime":1621352862126,"results":"161","hashOfConfig":"96"},{"size":12707,"mtime":1623436062764,"results":"162","hashOfConfig":"96"},{"size":1943,"mtime":1620204199925,"results":"163","hashOfConfig":"96"},{"size":1363,"mtime":1621351874451,"results":"164","hashOfConfig":"96"},{"size":9457,"mtime":1623436008372,"results":"165","hashOfConfig":"96"},{"size":1375,"mtime":1621352862126,"results":"166","hashOfConfig":"96"},{"size":1943,"mtime":1620806418137,"results":"167","hashOfConfig":"96"},{"size":9527,"mtime":1623436086531,"results":"168","hashOfConfig":"96"},{"size":9493,"mtime":1623436075503,"results":"169","hashOfConfig":"96"},{"size":1375,"mtime":1621352862126,"results":"170","hashOfConfig":"96"},{"size":1943,"mtime":1620806418137,"results":"171","hashOfConfig":"96"},{"size":1943,"mtime":1620806418137,"results":"172","hashOfConfig":"96"},{"size":1375,"mtime":1621352862126,"results":"173","hashOfConfig":"96"},{"size":4350,"mtime":1623358108488,"results":"174","hashOfConfig":"96"},{"size":2400,"mtime":1617900557352,"results":"175","hashOfConfig":"96"},{"size":13323,"mtime":1623435992103,"results":"176","hashOfConfig":"96"},{"size":2534,"mtime":1619346943148,"results":"177","hashOfConfig":"96"},{"size":1943,"mtime":1617806107460,"results":"178","hashOfConfig":"96"},{"size":1387,"mtime":1620337983480,"results":"179","hashOfConfig":"96"},{"size":8486,"mtime":1623368228814,"results":"180","hashOfConfig":"96"},{"size":2400,"mtime":1617904076902,"results":"181","hashOfConfig":"96"},{"size":1186,"mtime":1623364922262,"results":"182","hashOfConfig":"96"},{"size":1402,"mtime":1623361456945,"results":"183","hashOfConfig":"96"},{"size":17776,"mtime":1623376673625,"results":"184","hashOfConfig":"96"},{"size":36741,"mtime":1623439113437,"results":"185","hashOfConfig":"96"},{"size":1943,"mtime":1617806107460,"results":"186","hashOfConfig":"96"},{"size":21949,"mtime":1623429679074,"results":"187","hashOfConfig":"96"},{"size":2517,"mtime":1623429236659,"results":"188","hashOfConfig":"96"},{"size":409,"mtime":1623439434568,"results":"189","hashOfConfig":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e7fq2r",{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"194"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"194"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"194"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"194"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"194"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"194"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"194"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"194"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"194"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"194"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"407"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\work\\firebase\\ProRMS\\src\\index.js",[],"E:\\work\\firebase\\ProRMS\\src\\serviceWorker.js",[],["412","413"],"E:\\work\\firebase\\ProRMS\\src\\components\\Firebase\\context.js",["414"],"\r\nimport React, { createContext } from 'react'\r\nimport app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/firestore';\r\nconst FirebaseContext = createContext(null)\r\nexport { FirebaseContext }\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  };\r\nexport default ({ children }) => {\r\n    if (!app.apps.length) {\r\n      app.initializeApp(config);\r\n    }\r\n    return (\r\n      <FirebaseContext.Provider value={ app }>\r\n        { children }\r\n      </FirebaseContext.Provider>\r\n    )\r\n  }\r\n","E:\\work\\firebase\\ProRMS\\src\\components\\App.js",["415","416"],"import React from \"react\";\r\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\n// components\r\nimport Layout from \"./Layout\";\r\n// pages\r\nimport Error from \"../pages/error\";\r\nimport Login from \"../pages/login\";\r\n// context\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FirebaseContext } from '../redux';\r\n\r\nexport default function App() {\r\n  // global\r\n  const authenticated = useSelector(state => state.authenticated);\r\n  const isAuthenticated = authenticated.status;\r\n  // console.log(\"app isAuthenticated\",authenticated.status)\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app/calculator\" />} />\r\n        <Route\r\n          exact\r\n          path=\"/app\"\r\n          render={() => <Redirect to=\"/app/calculator\" />}\r\n        />\r\n        <PrivateRoute path=\"/app\" component={Layout} />\r\n        <PublicRoute path=\"/login\" component={Login} />\r\n        <Route component={Error} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n\r\n  // #######################################################################\r\n\r\n  function PrivateRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          isAuthenticated ? (\r\n            React.createElement(component, props)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  function PublicRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          isAuthenticated ? (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          ) : (\r\n            React.createElement(component, props)\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","E:\\work\\firebase\\ProRMS\\src\\themes\\index.js",[],"E:\\work\\firebase\\ProRMS\\src\\themes\\default.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\login\\Login.js",["417","418","419","420","421","422","423","424","425","426","427","428","429"],"import React, { useContext,useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport CircularLoading from \"../../components/CircularLoading\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FirebaseContext } from '../../redux';\r\n\r\nfunction Login(props) {\r\n  const { api } = useContext(FirebaseContext);\r\n  const {\r\n    signIn,\r\n    checkUser,\r\n    fetchUser,\r\n    fetchCalculator,\r\n    fetchAdders,\r\n    fetchFormulas,\r\n    fetchBattery,\r\n    fetchCash,\r\n    fetchFee,\r\n    fetchGuide,\r\n    fetchModule,\r\n    fetchSelfGen,\r\n    fetchUsers,\r\n    authenticate,\r\n    checkStatus\r\n  } = api;\r\n  const auth = useSelector(state => state.auth);\r\n  const adders = useSelector(state => state.adders);\r\n  const calculator = useSelector(state => state.calculator);\r\n  const battery = useSelector(state => state.battery);\r\n  const cash = useSelector(state => state.cash);\r\n  const fee = useSelector(state => state.fee);\r\n  const guide = useSelector(state => state.guide);\r\n  const modules = useSelector(state => state.modules);\r\n  const selfgen = useSelector(state => state.selfgen);\r\n  const users = useSelector(state => state.users);\r\n  const authenticated = useSelector(state => state.authenticated);\r\n  const dispatch = useDispatch();\r\n  var classes = useStyles();\r\n  useEffect(() => {\r\n    dispatch(checkStatus());\r\n  }, [])\r\n  useEffect(() => {\r\n    if(auth.refinfo){\r\n      let uid = auth.refinfo.uid\r\n      dispatch(checkUser(uid));\r\n    }\r\n  }, [auth.refinfo])\r\n  useEffect(() => {\r\n    if(auth.check){\r\n      dispatch(fetchUser());\r\n    }\r\n  }, [auth.check])\r\n  const getData = async (role) =>  {\r\n    let uid = auth.refinfo.uid\r\n    if(role === \"seller\"){\r\n      await dispatch(fetchCalculator(uid));\r\n      await dispatch(fetchAdders(uid));\r\n      await dispatch(fetchFormulas());\r\n      await dispatch(fetchBattery());\r\n      await dispatch(fetchCash());\r\n      await dispatch(fetchFee());\r\n      await dispatch(fetchModule());\r\n      await dispatch(fetchSelfGen());\r\n    }else{\r\n      await dispatch(fetchCalculator(uid));\r\n      await dispatch(fetchAdders(uid));\r\n      await dispatch(fetchFormulas());\r\n      await dispatch(fetchBattery());\r\n      await dispatch(fetchCash());\r\n      await dispatch(fetchFee());\r\n      await dispatch(fetchModule());\r\n      await dispatch(fetchSelfGen());\r\n      await dispatch(fetchGuide());\r\n      await dispatch(fetchUsers());\r\n    }\r\n    if(selfgen.info){\r\n      await dispatch(authenticate(true));\r\n      props.history.push('/app/calculator')\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if(auth.info){\r\n      getData(auth.info.profile.role)\r\n    }\r\n  }, [auth.info,selfgen.info,dispatch,fetchCalculator,fetchAdders,fetchFormulas,fetchBattery,fetchCash,fetchFee,fetchModule,fetchSelfGen,fetchGuide,fetchUsers,authenticate])\r\n  const login = () => {\r\n    dispatch(signIn());\r\n  }\r\n  return (\r\n    <>\r\n    {\r\n      // auth.refinfo && !authenticated.status ?\r\n      localStorage.getItem(\"Id\") ?\r\n      <CircularLoading />\r\n      :\r\n      <Grid container className={classes.container} >\r\n        {/* <div className={classes.logotypeContainer} style={{background:`url(\"https://www.kindpng.com/picc/m/459-4597522_banking-and-finance-hd-png-download.png\")`,\r\n          backgroundRepeat: `no-repeat`,\r\n          backgroundSize: `cover`,\r\n          backgroundPosition: `center`,backgroundSize: `100% 100%`}}> */}\r\n        <div className={classes.logotypeContainer} >\r\n          <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n          <Typography className={classes.logotypeText}>RMS Commission</Typography>\r\n          <Button\r\n              onClick={login\r\n              }\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"large\"\r\n            >\r\n              Login\r\n        </Button>\r\n        </div>\r\n      </Grid>\r\n    }\r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","E:\\work\\firebase\\ProRMS\\src\\components\\Layout\\Layout.js",["430","431","432"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\n// import Dashboard from \"../../pages/dashboard\";\r\nimport Calculator from \"../../pages/calculator\";\r\nimport Adder from \"../../pages/adders\";\r\nimport Formulas from \"../../pages/formulas\";\r\nimport Users from \"../../pages/users\";\r\nimport Guide from \"../../pages/guide\";\r\nimport Fee from \"../../pages/fee\";\r\nimport Cash from \"../../pages/cash\";\r\nimport Battery from \"../../pages/battery\";\r\nimport Selfgen from \"../../pages/selfgen\";\r\nimport Module from \"../../pages/module\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FirebaseContext } from '../../redux';\r\nfunction Layout(props) {\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const layout = useSelector(state => state.layout);\r\n  var classes = useStyles();\r\n  // global\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layout.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n              <Switch>\r\n                <Route path=\"/app/calculator\" component={Calculator} />\r\n                <Route path=\"/app/adders\" component={Adder} />\r\n                {/* <PrivateRoute path=\"/app/dashboard\" role={auth.info?auth.info.profile.role:null} component={Dashboard} /> */}\r\n                <PrivateRoute path=\"/app/formulas\" role={auth.info?auth.info.profile.role:null} component={Formulas} />\r\n                <PrivateRoute path=\"/app/users\" role={auth.info?auth.info.profile.role:null} component={Users} />\r\n                <PrivateRoute path=\"/app/guide\" role={auth.info?auth.info.profile.role:null} component={Guide} />\r\n                <PrivateRoute path=\"/app/fee\" role={auth.info?auth.info.profile.role:null} component={Fee} />\r\n                <PrivateRoute path=\"/app/cash\" role={auth.info?auth.info.profile.role:null} component={Cash} />\r\n                <PrivateRoute path=\"/app/battery_type\" role={auth.info?auth.info.profile.role:null} component={Battery} />\r\n                <PrivateRoute path=\"/app/selfgen_lead\" role={auth.info?auth.info.profile.role:null} component={Selfgen} />\r\n                <PrivateRoute path=\"/app/module\" role={auth.info?auth.info.profile.role:null} component={Module} />\r\n              </Switch>\r\n            </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\nconst PrivateRoute = ({ component: Component,role:role, ...rest }) => (\r\n  <Route {...rest} render={(props) => \r\n    {\r\n      return (\r\n        role === \"admin\"\r\n          ? <Component {...props} />\r\n          : \r\n          <Redirect to={{\r\n              pathname: '/app/calculator',\r\n              state: { from: props.location }\r\n            }} />\r\n      )\r\n    }} />\r\n)\r\n\r\nexport default withRouter(Layout);\r\n","E:\\work\\firebase\\ProRMS\\src\\pages\\login\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Widget\\Widget.js",["433","434"],"import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\nexport default function Widget({\r\n  children,\r\n  title,\r\n  noBodyPadding,\r\n  bodyClass,\r\n  disableWidgetMenu,\r\n  header,\r\n  noHeaderPadding,\r\n  headerClass,\r\n  style,\r\n  noWidgetShadow,\r\n  ...props\r\n}) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [moreButtonRef, setMoreButtonRef] = useState(null);\r\n  var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.widgetWrapper} style={style && {...style}}>\r\n      <Paper className={classes.paper} classes={{ root: classnames(classes.widgetRoot, {\r\n        [classes.noWidgetShadow]: noWidgetShadow\r\n        }) }}>\r\n        <div className={classnames(classes.widgetHeader, {\r\n          [classes.noPadding]: noHeaderPadding,\r\n          [headerClass]: headerClass\r\n        })}>\r\n          {header ? (\r\n            header\r\n          ) : (\r\n            <React.Fragment>\r\n              <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\r\n                {title}\r\n              </Typography>\r\n              {!disableWidgetMenu && (\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  classes={{ root: classes.moreButton }}\r\n                  aria-owns=\"widget-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={() => setMoreMenuOpen(true)}\r\n                  buttonRef={setMoreButtonRef}\r\n                >\r\n                  <MoreIcon />\r\n                </IconButton>\r\n              )}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={classnames(classes.widgetBody, {\r\n            [classes.noPadding]: noBodyPadding,\r\n            [bodyClass]: bodyClass,\r\n          })}\r\n        >\r\n          {children}\r\n        </div>\r\n      </Paper>\r\n      {/* <Menu\r\n        id=\"widget-menu\"\r\n        open={isMoreMenuOpen}\r\n        anchorEl={moreButtonRef}\r\n        onClose={() => setMoreMenuOpen(false)}\r\n        disableAutoFocusItem\r\n      >\r\n        <MenuItem>\r\n          <Typography>Edit</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Copy</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Delete</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Print</Typography>\r\n        </MenuItem>\r\n      </Menu> */}\r\n    </div>\r\n  );\r\n}\r\n","E:\\work\\firebase\\ProRMS\\src\\components\\PageTitle\\PageTitle.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Widget\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\PageTitle\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Wrappers\\Wrappers.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Layout\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\Dashboard.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\Sidebar.js",["435","436","437"],"import React, { useState, useEffect, useContext} from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  AttachMoney as AttachMoneyIcon,\r\n  PlaylistAdd as PlaylistAddIcon,\r\n  LibraryBooks as LibraryBooksIcon,\r\n  People as PeopleIcon,\r\n  MenuBook as MenuBookIcon,\r\n} from \"@material-ui/icons\";\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport TextsmsIcon from '@material-ui/icons/Textsms';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport TollIcon from '@material-ui/icons/Toll';\r\nimport BatteryCharging80Icon from '@material-ui/icons/BatteryCharging80';\r\nimport LocalAtmSharpIcon from '@material-ui/icons/LocalAtmSharp';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FirebaseContext } from '../../redux';\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\n\r\n//firebase\r\n\r\n\r\nconst admin_structure = [\r\n  // { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  { id: 1, label: \"Calculator\", link: \"/app/calculator\", icon: <AttachMoneyIcon /> },\r\n  { id: 2, label: \"Adders\", link: \"/app/adders\", icon: <PlaylistAddIcon /> },\r\n  { id: 3, type: \"divider\" },\r\n  // { id: 9, label: \"Message\", link: \"/app/message\", icon: <TextsmsIcon /> },\r\n  { id: 10, label: \"Selfgen Lead\", link: \"/app/selfgen_lead\", icon: <BusinessIcon /> },\r\n  { id: 11, label: \"Module\", link: \"/app/module\", icon: <TollIcon /> },\r\n  { id: 12, label: \"Battery Type\", link: \"/app/battery_type\", icon: <BatteryCharging80Icon /> },\r\n  { id: 8, label: \"Cash\", link: \"/app/cash\", icon: <LocalAtmSharpIcon /> },\r\n  { id: 7, label: \"Dealer Fee\", link: \"/app/fee\", icon: <ReceiptIcon /> },\r\n  { id: 4, label: \"Formulas\", link: \"/app/formulas\", icon: <LibraryBooksIcon /> },\r\n  { id: 5, label: \"Users\", link: \"/app/users\", icon: <PeopleIcon /> },\r\n  { id: 6, label: \"Guide\", link: \"/app/guide\", icon: <MenuBookIcon /> },\r\n];\r\nconst seller_structure = [\r\n  { id: 0, label: \"Calculator\", link: \"/app/calculator\", icon: <AttachMoneyIcon /> },\r\n  { id: 1, label: \"Adders\", link: \"/app/adders\", icon: <PlaylistAddIcon /> },\r\n  // { id: 2, label: \"Message\", link: \"/app/message\", icon: <TextsmsIcon /> },\r\n];\r\n  \r\n\r\nfunction Sidebar({ location }) {\r\n  const { api } = useContext(FirebaseContext);\r\n  const {\r\n    toggleSidebar,\r\n  } = api;\r\n  const dispatch = useDispatch();\r\n  //\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n  const [structure,setStructure] = useState(seller_structure);\r\n  const auth = useSelector(state => state.auth);\r\n  const layout = useSelector(state => state.layout);\r\n\r\n  useEffect(function() {\r\n    if(auth.info){\r\n      if(auth.info.profile.role === \"admin\"){\r\n        setStructure(admin_structure)\r\n      }else{\r\n        setStructure(seller_structure)\r\n      }\r\n      window.addEventListener(\"resize\", handleWindowWidthChange);\r\n      handleWindowWidthChange();\r\n    }else{\r\n      return function cleanup() {\r\n        window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n      };\r\n    }\r\n  },[auth.info]);\r\n      return (\r\n        <Drawer\r\n          variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n          className={classNames(classes.drawer, {\r\n            [classes.drawerOpen]: layout.isSidebarOpened,\r\n            [classes.drawerClose]: !layout.isSidebarOpened,\r\n          })}\r\n          classes={{\r\n            paper: classNames({\r\n              [classes.drawerOpen]: layout.isSidebarOpened,\r\n              [classes.drawerClose]: !layout.isSidebarOpened,\r\n            }),\r\n          }}\r\n          open={layout.isSidebarOpened}\r\n        >\r\n          <div className={classes.toolbar} />\r\n          <div className={classes.mobileBackButton}>\r\n            <IconButton onClick={() => dispatch(toggleSidebar())}>\r\n              <ArrowBackIcon\r\n                classes={{\r\n                  root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n                }}\r\n              />\r\n            </IconButton>\r\n          </div>\r\n          <List className={classes.sidebarList}>\r\n            {structure.map(link => (\r\n              <SidebarLink\r\n                key={link.id}\r\n                location={location}\r\n                isSidebarOpened={layout.isSidebarOpened}\r\n                {...link}\r\n              />\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      );\r\n\r\n    // })\r\n  // })\r\n      // return null;\r\n      // ##################################################################\r\n      function handleWindowWidthChange() {\r\n        var windowWidth = window.innerWidth;\r\n        var breakpointWidth = theme.breakpoints.values.md;\r\n        var isSmallScreen = windowWidth < breakpointWidth;\r\n    \r\n        if (isSmallScreen && isPermanent) {\r\n          setPermanent(false);\r\n        } else if (!isSmallScreen && !isPermanent) {\r\n          setPermanent(true);\r\n        }\r\n      }\r\n  \r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","E:\\work\\firebase\\ProRMS\\src\\components\\Header\\Header.js",["438","439","440","441","442","443","444","445","446","447","448"],"import React, { useState,useContext } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FirebaseContext } from '../../redux';\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  const { api } = useContext(FirebaseContext);\r\n  const {\r\n    signOut,\r\n    toggleSidebar,\r\n    authenticate\r\n  } = api;\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const authenticated = useSelector(state => state.authenticated);\r\n  const isAuthenticated = authenticated.status;\r\n  const layout = useSelector(state => state.layout);\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n  const userSignOut = () => {\r\n      dispatch(signOut())\r\n      dispatch(authenticate(false))\r\n      props.history.push(\"/login\");\r\n  }\r\n  const addSizeToGoogleProfilePic = (url) => {\r\n    if (url.indexOf('googleusercontent.com') !== -1 && url.indexOf('?') === -1) {\r\n      return url + '?sz=150';\r\n    }\r\n    return url;\r\n  }\r\n  // console.log(\"header isAuthenticated\",isAuthenticated)\r\n  return (\r\n    isAuthenticated?\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => dispatch(toggleSidebar())}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layout.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          RMS Commission Management\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        {/* <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div> */}\r\n        {/* <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton> */}\r\n        {/* <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton> */}\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          style={{background:'url('+addSizeToGoogleProfilePic(auth.info.photoURL)+')',width:50,height:50,backgroundSize:\"100% 100%\"}}\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          {/* style={{background:'url('+addSizeToGoogleProfilePic(localStorage.getItem(\"photoURL\"))+')'}} */}\r\n\r\n          {/* <AccountIcon classes={{ root: classes.headerIcon }} /> */}\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n         \r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              {localStorage.getItem(\"name\")}\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={userSignOut}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n    :\r\n    null\r\n  );\r\n}\r\n","E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\mock.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\components\\Dot.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Header\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Notification\\Notification.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\UserAvatar\\UserAvatar.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\UserAvatar\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Notification\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\CircularProgressWithLabel\\index.js",[],"E:\\work\\firebase\\ProRMS\\src\\redux\\store\\index.js",["449"],"import { configureStore } from '@reduxjs/toolkit'\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { authreducer as auth } from \"../reducers/authreducer\";\r\nimport { addersreducer as adders } from \"../reducers/addersreducer\";\r\nimport { formulasreducer as formulas } from \"../reducers/formulasreducer\";\r\nimport { batteryreducer as battery } from \"../reducers/batteryreducer\";\r\nimport { calculatorreducer as calculator } from \"../reducers/calculatorreducer\";\r\nimport { cashreducer as cash } from \"../reducers/cashreducer\";\r\nimport { feereducer as fee } from \"../reducers/feereducer\";\r\nimport { guidereducer as guide } from \"../reducers/guidereducer\";\r\nimport { modulesreducer as modules } from \"../reducers/modulesreducer\";\r\nimport { selfgenreducer as selfgen } from \"../reducers/selfgenreducer\";\r\nimport { usersreducer as users } from \"../reducers/usersreducer\";\r\nimport { layoutreducer as layout } from \"../reducers/layoutreducer\";\r\nimport { authenticatereducer as authenticated} from \"../reducers/authenticatereducer\";\r\nconst reducers = combineReducers({\r\n    auth,\r\n    adders,\r\n    formulas,\r\n    battery,\r\n    calculator,\r\n    cash,\r\n    fee,\r\n    guide,\r\n    modules,\r\n    selfgen,\r\n    users,\r\n    layout,\r\n    authenticated\r\n  });\r\n  \r\n  let middleware = [thunk];\r\n  \r\n  export const store = createStore(reducers, {}, applyMiddleware(...middleware));","E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\authreducer.js",[],"E:\\work\\firebase\\ProRMS\\src\\redux\\store\\types.js",[],"E:\\work\\firebase\\ProRMS\\src\\redux\\index.js",[],"E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\authactions.js",["450","451","452","453"],"import {\r\n    FETCH_USER,\r\n    USER_SIGN_IN,\r\n    USER_SIGN_IN_SUCCESS,\r\n    USER_SIGN_IN_FAILED,\r\n    USER_DELETED,\r\n    UPDATE_USER_PROFILE,\r\n    USER_SIGN_OUT,\r\n    FETCH_USER_SUCCESS,\r\n    USER_CHECK,\r\n    USER_CHECKED,\r\n  } from \"../store/types\";\r\n  import data from \"./data.json\";\r\n  import { store } from '../store';\r\n  export const fetchUser = () => (dispatch) => (firebase) => {\r\n    const {\r\n      auth,\r\n      singleUserRef,\r\n      settingsRef,\r\n    } = firebase;\r\n  \r\n    dispatch({\r\n      type: FETCH_USER,\r\n      payload: null\r\n    });\r\n    auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        console.log(\"auto call\")\r\n        singleUserRef(user.uid).on(\"value\", snapshot => {\r\n          if (snapshot.val()) {\r\n            localStorage.setItem(\"Id\",user.uid)\r\n            user.profile = snapshot.val();\r\n              dispatch({\r\n              type: FETCH_USER_SUCCESS,\r\n              payload: user\r\n            });        \r\n            // if (user.profile.allow) {\r\n            //   // dispatch({\r\n            //   //   type: FETCH_USER_SUCCESS,\r\n            //   //   payload: user\r\n            //   // });\r\n            // } else {\r\n            //   // auth.signOut();\r\n            //   // dispatch({\r\n            //   //   type: USER_SIGN_IN_FAILED,\r\n            //   //   payload: { code: \"Auth error\", message: \"Server error\" }\r\n            //   // });\r\n            // }\r\n          }\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  export const signIn = () => (dispatch) => (firebase) => {\r\n    const {\r\n      auth,\r\n      googleProvider,\r\n    } = firebase;\r\n  \r\n    dispatch({\r\n      type: USER_SIGN_IN,\r\n      payload: null\r\n    });\r\n    // console.log(\"beforesign\",auth.currentUser.email)\r\n    auth.signInWithPopup(googleProvider).then(result => {\r\n      if(!!result){\r\n        let data = {};\r\n        data.email = auth.currentUser.email;\r\n        data.displayName = auth.currentUser.displayName;\r\n        data.photoURL = auth.currentUser.photoURL;\r\n        data.uid = auth.currentUser.uid\r\n        dispatch({\r\n          type: USER_SIGN_IN_SUCCESS,\r\n          payload: data\r\n        });\r\n      }else{\r\n        dispatch({\r\n          type: USER_SIGN_IN_FAILED,\r\n          payload: \"User dosen't exist\"\r\n        });\r\n      }\r\n    });\r\n}\r\nexport const checkStatus = () => (dispatch) => (firebase) => {\r\n  const {\r\n    usersRef,\r\n  } = firebase;\r\n  if(localStorage.getItem(\"Id\")){\r\n    let uid = localStorage.getItem(\"Id\");\r\n    console.log(\"check user\")\r\n    try{\r\n      usersRef.child(uid).get().then(async (docSnapshot) => {\r\n        if(docSnapshot.val()){\r\n          let data = {};\r\n          data.email = docSnapshot.val().email;\r\n          data.displayName = docSnapshot.val().name;\r\n          data.photoURL = docSnapshot.val().photoURL;\r\n          data.uid = uid\r\n          dispatch({\r\n            type: USER_SIGN_IN_SUCCESS,\r\n            payload: data\r\n          });\r\n        }\r\n      })\r\n    }catch{\r\n      console.log(\"no check error\")\r\n    }\r\n    \r\n  }\r\n}\r\nexport const checkUser = (uid) => (dispatch) => async (firebase) => {\r\n  const {\r\n    usersRef,\r\n    singleUserRef,\r\n    singleCalculatorsRef,\r\n    singleAddersRef,\r\n    auth\r\n  } = firebase;\r\n  dispatch({\r\n    type: USER_CHECK,\r\n    payload: false\r\n  });\r\n  usersRef.child(uid).get().then(async (docSnapshot) => {\r\n    if(docSnapshot.val()){\r\n      dispatch({\r\n        type: USER_CHECKED,\r\n        payload: true\r\n      });\r\n    }else{\r\n      const role = \"seller\";\r\n      var date = new Date();\r\n      let userData = {name: store.getState().auth.refinfo.displayName,\r\n                        email: store.getState().auth.refinfo.email,\r\n                        role:role,\r\n                        photoURL:store.getState().auth.refinfo.photoURL,\r\n                        allow:false,\r\n                        club:\"Pending\",\r\n                        evaluationDate: date.toLocaleDateString(),\r\n                        lastQtrlySales:\"\",\r\n                        nextEvaluationDate:date.toLocaleDateString(),\r\n                        other:\"\",\r\n                        systemNumber:\"\",\r\n                        teamName:\"Pending\",\r\n                        photoURL:store.getState().auth.refinfo.photoURL\r\n                      };\r\n      if(store.getState().auth.refinfo.email === \"rsefrioui40@gmail.com\") {userData.role = \"admin\";\r\n                                                                            userData.club = \"Silver\";\r\n                                                                            userData.teamName = \"Arizona\";\r\n                                                                            userData.systemNumber = \"TX\";\r\n                                                                            userData.allow = true;\r\n                                                                          };\r\n      let uid = store.getState().auth.refinfo.uid;\r\n      await singleUserRef(uid).set(userData);\r\n      data.calc.C3 = \"\";\r\n      data.calc.C4 = \"\";\r\n      data.calc.allow = false;\r\n      await singleCalculatorsRef(uid).set(data.calc);\r\n      await singleAddersRef(uid).set(data.adder);\r\n      dispatch({\r\n        type: USER_CHECKED,\r\n        payload: true\r\n      });\r\n    }\r\n  });\r\n}\r\n  export const signOut = () => (dispatch) => async (firebase) => {\r\n\r\n    const {\r\n      auth,\r\n    } = firebase;\r\n    localStorage.removeItem(\"Id\");\r\n    dispatch({\r\n      type: USER_SIGN_OUT,\r\n      payload: null\r\n    });\r\n    auth.signOut();\r\n  };\r\n  export const deleteUser = (uid) => (dispatch) => (firebase) => {\r\n    const {\r\n      singleUserRef,\r\n      auth\r\n    } = firebase;\r\n  \r\n    singleUserRef(uid).remove().then(() => {\r\n      if (auth.currentUser.uid == uid) {\r\n        auth.signOut();\r\n        dispatch({\r\n          type: USER_DELETED,\r\n          payload: null\r\n        });\r\n      }\r\n    });\r\n  };\r\n  \r\n  export const updateProfile = (userAuthData, updateData) => (dispatch) => (firebase) => {\r\n  \r\n    const {\r\n      singleUserRef,\r\n    } = firebase;\r\n  \r\n    let profile = userAuthData.profile;\r\n    profile = { ...profile, ...updateData }\r\n    dispatch({\r\n      type: UPDATE_USER_PROFILE,\r\n      payload: profile\r\n    });\r\n    singleUserRef(userAuthData.uid).update(updateData);\r\n  };","E:\\work\\firebase\\ProRMS\\src\\config.js",[],"E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\calculatorreducer.js",[],"E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\cashreducer.js",[],"E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\feereducer.js",[],"E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\batteryreducer.js",[],"E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\addersreducer.js",[],"E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\selfgenreducer.js",[],"E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\guidereducer.js",[],"E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\usersreducer.js",[],"E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\modulesreducer.js",[],"E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\calculatoractions.js",["454"],"import {\r\n    FETCH_CALCULATOR,\r\n    FETCH_CALCULATOR_UPDATE,\r\n    FETCH_CALCULATOR_SUCCESS,\r\n    FETCH_CALCULATOR_FAILED,\r\n  } from \"../store/types\";\r\n\r\nexport const fetchCalculator = (uid) => (dispatch) => async (firebase) => {\r\n    const {\r\n        singleCalculatorsRef \r\n    } = firebase;\r\n  \r\n    dispatch({\r\n        type: FETCH_CALCULATOR,\r\n        payload: null,\r\n    });\r\n    await singleCalculatorsRef(uid).on('value', snapshot => {\r\n        if(snapshot.val()){\r\n            dispatch({\r\n                type: FETCH_CALCULATOR_SUCCESS,\r\n                payload: snapshot.val(),\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type: FETCH_CALCULATOR_FAILED,\r\n                payload: \"During fetch the calculator, error be cause.\",\r\n            });\r\n        }\r\n    })\r\n\r\n}\r\nexport const updateCalculator = (uid,data) => (dispatch) => (firebase) => {\r\n    const {\r\n        singleCalculatorsRef \r\n    } = firebase;\r\n    dispatch({\r\n        type: FETCH_CALCULATOR_SUCCESS,\r\n        payload: data,\r\n    });\r\n    singleCalculatorsRef(uid).update(data);\r\n}\r\n\r\nexport const updateCalculatorRefAdder = (uid,data) => (dispatch) => (firebase) => {\r\n    const {\r\n        singleCalculatorsRef \r\n    } = firebase;\r\n    singleCalculatorsRef(uid).update(data);\r\n}","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\addersactions.js",["455"],"import {\r\n    FETCH_ADDERS,\r\n    FETCH_ADDERS_UPDATE,\r\n    FETCH_ADDERS_SUCCESS,\r\n    FETCH_ADDERS_FAILED,\r\n  } from \"../store/types\";\r\n\r\nexport const fetchAdders = (uid) => (dispatch) => async (firebase) => {\r\n    const {\r\n        singleAddersRef \r\n    } = firebase;\r\n  \r\n    dispatch({\r\n        type: FETCH_ADDERS,\r\n        payload: null,\r\n    });\r\n    await singleAddersRef(uid).on('value', snapshot => {\r\n        if(snapshot.val()){\r\n            dispatch({\r\n                type: FETCH_ADDERS_SUCCESS,\r\n                payload: snapshot.val(),\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type: FETCH_ADDERS_FAILED,\r\n                payload: \"During fetch the adders, error be cause.\",\r\n            });\r\n        }\r\n    })\r\n\r\n}\r\nexport const updateAdders = (uid,data) => (dispatch) => (firebase) => {\r\n    const {\r\n        singleAddersRef \r\n    } = firebase;\r\n    dispatch({\r\n        type: FETCH_ADDERS_SUCCESS,\r\n        payload: data,\r\n    });\r\n    singleAddersRef(uid).update(data);\r\n}","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\batteryactions.js",["456"],"import {\r\n    FETCH_BATTERY,\r\n    FETCH_BATTERY_UPDATE,\r\n    FETCH_BATTERY_SUCCESS,\r\n    FETCH_BATTERY_FAILED,\r\n  } from \"../store/types\";\r\n  import { store } from '../store';\r\nexport const fetchBattery = () => (dispatch) => async (firebase) => {\r\n    const {\r\n        batteryRef \r\n    } = firebase;\r\n  \r\n    dispatch({\r\n        type: FETCH_BATTERY,\r\n        payload: null,\r\n    });\r\n    try{\r\n        await batteryRef.on('value', snapshot => {\r\n            if(snapshot.val()){\r\n                dispatch({\r\n                    type: FETCH_BATTERY_SUCCESS,\r\n                    payload: snapshot.val(),\r\n                });\r\n            }else{\r\n                dispatch({\r\n                    type: FETCH_BATTERY_SUCCESS,\r\n                    payload: [],\r\n                });\r\n            }\r\n        })\r\n    }catch{\r\n        dispatch({\r\n            type: FETCH_BATTERY_FAILED,\r\n            payload: \"During fetch the battery, error be cause.\",\r\n        });\r\n    }\r\n    \r\n\r\n    \r\n}\r\nexport const updateBattery = (data) => (dispatch) => (firebase) => {\r\n    const {\r\n        batteryRef \r\n    } = firebase;\r\n    dispatch({\r\n        type: FETCH_BATTERY_SUCCESS,\r\n        payload: data,\r\n    });\r\n    batteryRef.update(data);\r\n}\r\n\r\nexport const addBattery = (data) => (dispatch) => (firebase) => {\r\n    const {\r\n        batteryRef \r\n    } = firebase;\r\n    const originalCash = store.getState().battery.info;\r\n    originalCash.push(data);\r\n    dispatch({\r\n        type: FETCH_BATTERY_SUCCESS,\r\n        payload: originalCash,\r\n    });\r\n    batteryRef.update(data);\r\n}\r\nexport const deleteBattery = (data) => (dispatch) => (firebase) => {\r\n    const {\r\n        batteryRef \r\n    } = firebase;\r\n    dispatch({\r\n        type: FETCH_BATTERY_SUCCESS,\r\n        payload: data,\r\n    });\r\n    batteryRef.set(data);\r\n}","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\cashactions.js",["457"],"import {\r\n    FETCH_CASH,\r\n    FETCH_CASH_UPDATE,\r\n    FETCH_CASH_SUCCESS,\r\n    FETCH_CASH_FAILED,\r\n  } from \"../store/types\";\r\nimport { store } from '../store';\r\nexport const fetchCash = () => (dispatch) => async (firebase) => {\r\n    const {\r\n        cashRef \r\n    } = firebase;\r\n  \r\n    dispatch({\r\n        type: FETCH_CASH,\r\n        payload: null,\r\n    });\r\n    try{\r\n        cashRef.on('value', snapshot => {\r\n            if(snapshot.val()){\r\n                dispatch({\r\n                    type: FETCH_CASH_SUCCESS,\r\n                    payload: snapshot.val(),\r\n                });\r\n            }else{\r\n                dispatch({\r\n                    type: FETCH_CASH_SUCCESS,\r\n                    payload: [],\r\n                });\r\n            }\r\n        })\r\n    }catch{\r\n        dispatch({\r\n            type: FETCH_CASH_FAILED,\r\n            payload: \"During fetch the cash, error be cause.\",\r\n        });\r\n    }\r\n    \r\n}\r\nexport const updateCash = (data) => (dispatch) => (firebase) => {\r\n    const {\r\n        cashRef \r\n    } = firebase;\r\n    dispatch({\r\n        type: FETCH_CASH_SUCCESS,\r\n        payload: data,\r\n    });\r\n    cashRef.update(data);\r\n}\r\n\r\nexport const addCash = (data) => (dispatch) => (firebase) => {\r\n    const {\r\n        cashRef \r\n    } = firebase;\r\n    const originalCash = store.getState().cash.info;\r\n    originalCash.push(data);\r\n    dispatch({\r\n        type: FETCH_CASH_SUCCESS,\r\n        payload: originalCash,\r\n    });\r\n    cashRef.update(data);\r\n}\r\nexport const deleteCash = (data) => (dispatch) => (firebase) => {\r\n    const {\r\n        cashRef \r\n    } = firebase;\r\n    dispatch({\r\n        type: FETCH_CASH_SUCCESS,\r\n        payload: data,\r\n    });\r\n    cashRef.set(data);\r\n}","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\guideactions.js",["458"],"import {\r\n    FETCH_GUIDE,\r\n    FETCH_GUIDE_UPDATE,\r\n    FETCH_GUIDE_SUCCESS,\r\n    FETCH_GUIDE_FAILED,\r\n  } from \"../store/types\";\r\n\r\nexport const fetchGuide = () => (dispatch) => async (firebase) => {\r\n    const {\r\n        guideRef \r\n    } = firebase;\r\n  \r\n    dispatch({\r\n        type: FETCH_GUIDE,\r\n        payload: null,\r\n    });\r\n    try{\r\n        guideRef.on('value', snapshot => {\r\n            if(snapshot.val()){\r\n                dispatch({\r\n                    type: FETCH_GUIDE_SUCCESS,\r\n                    payload: snapshot.val(),\r\n                });\r\n            }else{\r\n                dispatch({\r\n                    type: FETCH_GUIDE_SUCCESS,\r\n                    payload: [],\r\n                });\r\n            }\r\n        })\r\n    }catch{\r\n        dispatch({\r\n            type: FETCH_GUIDE_FAILED,\r\n            payload: \"During fetch the guide, error be cause.\",\r\n        });\r\n    }\r\n    \r\n}\r\nexport const updateGuide = (data) => (dispatch) => (firebase) => {\r\n    const {\r\n        guideRef \r\n    } = firebase;\r\n    dispatch({\r\n        type: FETCH_GUIDE_SUCCESS,\r\n        payload: data,\r\n    });\r\n    guideRef.update(data);\r\n}\r\n","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\selfgenactions.js",["459"],"import {\r\n    FETCH_SELFGEN,\r\n    FETCH_SELFGEN_UPDATE,\r\n    FETCH_SELFGEN_SUCCESS,\r\n    FETCH_SELFGEN_FAILED,\r\n  } from \"../store/types\";\r\n  import { store } from '../store';\r\nexport const fetchSelfGen = () => (dispatch) => async (firebase) => {\r\n    const {\r\n        selfGenRef \r\n      } = firebase;\r\n    \r\n      dispatch({\r\n          type: FETCH_SELFGEN,\r\n          payload: null,\r\n      });\r\n      try{\r\n        selfGenRef.on('value', snapshot => {\r\n            if(snapshot.val()){\r\n                dispatch({\r\n                    type: FETCH_SELFGEN_SUCCESS,\r\n                    payload: snapshot.val(),\r\n                });\r\n            }else{\r\n                dispatch({\r\n                    type: FETCH_SELFGEN_SUCCESS,\r\n                    payload: [],\r\n                });\r\n            }\r\n        })\r\n    }catch{\r\n        dispatch({\r\n            type: FETCH_SELFGEN_FAILED,\r\n            payload: \"During fetch the module, error be cause.\",\r\n        });\r\n    }\r\n\r\n      \r\n}\r\nexport const updateSelfGen = (data) => (dispatch) => (firebase) => {\r\n    const {\r\n        selfGenRef \r\n    } = firebase;\r\n    dispatch({\r\n        type: FETCH_SELFGEN_SUCCESS,\r\n        payload: data,\r\n    });\r\n    selfGenRef.update(data);\r\n\r\n}\r\n\r\nexport const addSelfGen = (data) => (dispatch) => (firebase) => {\r\n    const {\r\n        selfGenRef \r\n    } = firebase;\r\n    const originalCash = store.getState().selfgen.info;\r\n    originalCash.push(data);\r\n    dispatch({\r\n        type: FETCH_SELFGEN_SUCCESS,\r\n        payload: originalCash,\r\n    });\r\n    selfGenRef.update(data);\r\n}\r\nexport const deleteSelfGen = (data) => (dispatch) => (firebase) => {\r\n    const {\r\n        selfGenRef \r\n    } = firebase;\r\n    dispatch({\r\n        type: FETCH_SELFGEN_SUCCESS,\r\n        payload: data,\r\n    });\r\n    selfGenRef.set(data);\r\n}","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\feeactions.js",["460"],"import {\r\n    FETCH_FEE,\r\n    FETCH_FEE_UPDATE,\r\n    FETCH_FEE_SUCCESS,\r\n    FETCH_FEE_FAILED,\r\n  } from \"../store/types\";\r\n  import { store } from '../store';\r\nexport const fetchFee = () => (dispatch) => async (firebase) => {\r\n    const {\r\n        feeRef \r\n    } = firebase;\r\n  \r\n    dispatch({\r\n        type: FETCH_FEE,\r\n        payload: null,\r\n    });\r\n    try{\r\n        feeRef.on('value', snapshot => {\r\n            if(snapshot.val()){\r\n                dispatch({\r\n                    type: FETCH_FEE_SUCCESS,\r\n                    payload: snapshot.val(),\r\n                });\r\n            }else{\r\n                dispatch({\r\n                    type: FETCH_FEE_SUCCESS,\r\n                    payload: [],\r\n                });\r\n            }\r\n        })\r\n    }catch{\r\n        dispatch({\r\n            type: FETCH_FEE_FAILED,\r\n            payload: \"During fetch the fee, error be cause.\",\r\n        });\r\n    }\r\n    \r\n    \r\n}\r\nexport const updateFee = (data) => (dispatch) => (firebase) => {\r\n    const {\r\n        feeRef \r\n    } = firebase;\r\n    dispatch({\r\n        type: FETCH_FEE_SUCCESS,\r\n        payload: data,\r\n    });\r\n    feeRef.update(data);\r\n}\r\n\r\nexport const addFee = (data) => (dispatch) => (firebase) => {\r\n    const {\r\n        feeRef \r\n    } = firebase;\r\n    const originalCash = store.getState().fee.info;\r\n    originalCash.push(data);\r\n    dispatch({\r\n        type: FETCH_FEE_SUCCESS,\r\n        payload: originalCash,\r\n    });\r\n    feeRef.update(data);\r\n}\r\nexport const deleteFee = (data) => (dispatch) => (firebase) => {\r\n    const {\r\n        feeRef \r\n    } = firebase;\r\n    dispatch({\r\n        type: FETCH_FEE_SUCCESS,\r\n        payload: data,\r\n    });\r\n    feeRef.set(data);\r\n}","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\modulesactions.js",["461"],"import {\r\n    FETCH_MODULE,\r\n    FETCH_MODULE_UPDATE,\r\n    FETCH_MODULE_SUCCESS,\r\n    FETCH_MODULE_FAILED,\r\n  } from \"../store/types\";\r\n  import { store } from '../store';\r\nexport const fetchModule = () => (dispatch) => async (firebase) => {\r\n  const {\r\n    moduleRef \r\n  } = firebase;\r\n\r\n  dispatch({\r\n      type: FETCH_MODULE,\r\n      payload: null,\r\n  });\r\n  try{\r\n    moduleRef.on('value', snapshot => {\r\n      if(snapshot.val()){\r\n          dispatch({\r\n              type: FETCH_MODULE_SUCCESS,\r\n              payload: snapshot.val(),\r\n          });\r\n        }else{\r\n            dispatch({\r\n                type: FETCH_MODULE_SUCCESS,\r\n                payload: [],\r\n            });\r\n        }\r\n    })\r\n  }catch{\r\n    dispatch({\r\n      type: FETCH_MODULE_FAILED,\r\n      payload:\"During fetch the module, error be cause.\",\r\n  });\r\n  }\r\n  \r\n}\r\nexport const updateModule = (data) => (dispatch) => (firebase) => {\r\n  const {\r\n    moduleRef \r\n  } = firebase;\r\n  dispatch({\r\n      type: FETCH_MODULE_SUCCESS,\r\n      payload: data,\r\n  });\r\n  moduleRef.update(data);\r\n}\r\n\r\nexport const addModule = (data) => (dispatch) => (firebase) => {\r\n  const {\r\n    moduleRef \r\n  } = firebase;\r\n  const originalCash = store.getState().modules.info;\r\n  originalCash.push(data);\r\n  dispatch({\r\n      type: FETCH_MODULE_SUCCESS,\r\n      payload: originalCash,\r\n  });\r\n  moduleRef.update(data);\r\n}\r\nexport const deleteModule = (data) => (dispatch) => (firebase) => {\r\n  const {\r\n    moduleRef \r\n  } = firebase;\r\n  dispatch({\r\n      type: FETCH_MODULE_SUCCESS,\r\n      payload: data,\r\n  });\r\n  moduleRef.set(data);\r\n}","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\usersactions.js",["462","463","464"],"import {\r\n    FETCH_USERS,\r\n    FETCH_USERS_UPDATE,\r\n    FETCH_USERS_SUCCESS,\r\n    FETCH_USERS_FAILED,\r\n  } from \"../store/types\";\r\n  import { store } from '../store';\r\nexport const fetchUsers = () => (dispatch) => async (firebase) => {\r\n    const {\r\n        usersRef,\r\n      } = firebase;\r\n    \r\n      dispatch({\r\n          type: FETCH_USERS,\r\n          payload: null,\r\n      });\r\n      try{\r\n        usersRef.on('value', snapshot => {\r\n            if(snapshot.val()){\r\n                dispatch({\r\n                    type: FETCH_USERS_SUCCESS,\r\n                    payload: snapshot.val(),\r\n                });\r\n            }else{\r\n                dispatch({\r\n                    type: FETCH_USERS_SUCCESS,\r\n                    payload: [],\r\n                });\r\n            }\r\n        })\r\n        }catch{\r\n            dispatch({\r\n                type: FETCH_USERS_FAILED,\r\n                payload: \"During fetch the module, error be cause.\",\r\n            });\r\n        }\r\n      \r\n\r\n}\r\nexport const updateUsers = (useruid,data) => (dispatch) => (firebase) => {\r\n    const {\r\n        singleUserRef \r\n      } = firebase;\r\n      let originalData = store.getState().users.info;\r\n      let newData = {};\r\n      Object.keys(originalData).map((key) => {\r\n        if(key === useruid) originalData[key] = data;\r\n        const {uid,id,...freshData} = originalData[key];\r\n        newData[key] = freshData;\r\n      })\r\n        dispatch({\r\n            type: FETCH_USERS_SUCCESS,\r\n            payload: newData,\r\n        });\r\n      const {uid,id,...saveData} = data;\r\n      singleUserRef(useruid).update(saveData);\r\n}\r\n\r\nexport const deleteUsers = (useruid) => (dispatch) => (firebase) => {\r\n\r\n    const {\r\n        singleUserRef,\r\n        singleCalculatorsRef,\r\n        singleAddersRef\r\n      } = firebase;\r\n      let originalData = store.getState().users.info;\r\n      let newData = {};\r\n      Object.keys(originalData).map((key) => {\r\n        if(key !== useruid) {\r\n            const {uid,id,...freshData} = originalData[key];\r\n            newData[key] = freshData;\r\n        };\r\n      })\r\n      dispatch({\r\n            type: FETCH_USERS_SUCCESS,\r\n            payload: newData,\r\n        });\r\n        singleUserRef(useruid).remove();\r\n        singleCalculatorsRef(useruid).remove();\r\n        singleAddersRef(useruid).remove();\r\n}","E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\layoutactions.js",["465","466"],"import {\r\n    SIDEBAR_OPEN,\r\n    SEARCH_OPEN,\r\n    TOGGLE_SIDEBAR\r\n  } from \"../store/types\";\r\nimport { store } from '../store';\r\nexport const toggleSidebar = () => (dispatch) => (firebase) => {\r\n    dispatch({\r\n        type: TOGGLE_SIDEBAR,\r\n        payload:!store.getState().layout.isSidebarOpened\r\n    });\r\n}\r\n","E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\layoutreducer.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\error\\Error.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\error\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\authenticateactions.js",["467"],"import {\r\n    AUTHENTICATE_SUCCESS,\r\n    AUTHENTICATE_FAILED\r\n  } from \"../store/types\";\r\n  import { store } from '../store';\r\n\r\n  export const authenticate = (status) => (dispatch) => (firebase) => {\r\n    //   console.log(\"authenticate status\",status)\r\n      if(status){\r\n        dispatch({\r\n          type: AUTHENTICATE_SUCCESS,\r\n        });\r\n      }else{\r\n        dispatch({\r\n          type: AUTHENTICATE_FAILED,\r\n        });\r\n      }\r\n  }","E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\authenticatereducer.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\cash\\index.js",["468","469","470","471","472"],"import React, { useContext,useEffect } from \"react\";\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Grid, GridColumn as Column, GridToolbar } from '@progress/kendo-react-grid';\r\nimport { MyCommandCell } from './myCommandCell';\r\nimport { useLoading, ThreeDots} from '@agney/react-loading';\r\nimport Notification from \"../../components/Notification\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\nimport \"./style.css\"\r\nimport {\r\n    Paper,\r\n    Grid as MaterialGrid,\r\n  } from '@material-ui/core';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { CircularProgressWithLabel } from \"../../components/CircularProgressWithLabel\"\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FirebaseContext } from '../../redux';\r\n\r\nlet deleteDataItem;\r\nexport default function Cash() {\r\n    const { api } = useContext(FirebaseContext);\r\n    const {\r\n        addCash,\r\n        updateCash,\r\n        deleteCash\r\n      } = api;\r\n    const cash = useSelector(state => state.cash);\r\n    const dispatch = useDispatch();\r\n\r\n    var classes = useStyles();\r\n    const { containerProps, indicatorEl } = useLoading({\r\n        loading: true,\r\n        indicator: <ThreeDots width=\"50\" />,\r\n      });\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [editField, setEditField] = React.useState(\"inEdit\");\r\n    const [data, setData] = React.useState([]);\r\n    const [alert,setAlert] = React.useState(null);\r\n    //#####################################toast########################################################\r\n    const sendNotification = (componentProps, options) => {\r\n        return toast(\r\n        <Notification\r\n            {...componentProps}\r\n            className={classes.notificationComponent}\r\n        />,\r\n        options,\r\n        );\r\n    }\r\n    const handleNotificationCall = () => {\r\n        var componentProps;\r\n    \r\n\r\n            componentProps = {\r\n              type: \"feedback\",\r\n              message: `Successfully saved`,\r\n              variant: \"contained\",\r\n              color: \"primary\",\r\n            };\r\n            \r\n        var toastId = sendNotification(componentProps, {\r\n          type: \"error\",\r\n          position:  toast.POSITION.TOP_CENTER,\r\n          progressClassName: classes.progress,\r\n          className: classes.notification,\r\n        });\r\n    }\r\n    //#####################################toast end########################################################\r\n    let CommandCell;\r\n\r\n    CommandCell = props => (\r\n      <MyCommandCell\r\n        {...props}\r\n        edit={enterEdit}\r\n        remove={remove}\r\n        add={add}\r\n        discard={discard}\r\n        update={update}\r\n        cancel={cancel}\r\n        editField={editField}\r\n        />\r\n    );\r\n\r\n    const enterEdit = (dataItem) => {\r\n        const newData = data.map(item =>\r\n                    item.ID === dataItem.ID ?\r\n                    { ...item, inEdit: true } : item\r\n                )\r\n        setData(newData)\r\n    }\r\n    const warnConfirm = () => {\r\n        setAlert(null);\r\n    }\r\n    const add = (dataItem) => {\r\n        dataItem.inEdit = undefined;\r\n        dataItem.ID = data.length;\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            return nitem;\r\n        })\r\n        if(isNaN(dataItem.cash)){\r\n            setAlert(<SweetAlert\r\n            warnning\r\n            confirmBtnText=\"Yes, got it\"\r\n            confirmBtnBsStyle=\"delete\"\r\n            title=\"Are you sure?\"\r\n            onConfirm={warnConfirm}\r\n            focusConfirmBtn\r\n            >\r\n            The field value must be <b>number</b>.\r\n          </SweetAlert>)\r\n          discard(dataItem);\r\n        }else{\r\n            if(parseFloat(dataItem.cash) < 0){\r\n                setAlert(<SweetAlert\r\n                    warnning\r\n                    confirmBtnText=\"Yes, got it\"\r\n                    confirmBtnBsStyle=\"delete\"\r\n                    title=\"Are you sure?\"\r\n                    onConfirm={warnConfirm}\r\n                    focusConfirmBtn\r\n                    >\r\n                    The field value must be greater than <b>0</b>.\r\n                  </SweetAlert>)\r\n                  discard(dataItem);\r\n            }else{\r\n                setAlert(\r\n                    <SweetAlert\r\n                        title={\"\"}\r\n                        onConfirm={() => {}}\r\n                        showConfirm={false}\r\n                    >\r\n                        <CircularProgressWithLabel value={100} />\r\n                    </SweetAlert>)\r\n                    dispatch(addCash(newSaveData));\r\n                    setAlert(null);\r\n                    handleNotificationCall();\r\n                    // console.log(\"cash Document successfully add!\");\r\n                    \r\n            }\r\n        }\r\n    }\r\n\r\n    const update = (dataItem) => {\r\n        const updatedItem = { ...dataItem, inEdit: undefined };\r\n        updateItem(data, updatedItem);\r\n        \r\n    }\r\n\r\n    const updateItem = (data, item) => {\r\n        let index = data.findIndex(p => p === item || (item.ID && p.ID === item.ID));\r\n        if (index >= 0) {\r\n            data[index] = { ...item };\r\n        }\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            return nitem;\r\n        })\r\n        if(isNaN(item.cash)){\r\n            setAlert(<SweetAlert\r\n                warnning\r\n                confirmBtnText=\"Yes, got it\"\r\n                confirmBtnBsStyle=\"delete\"\r\n                title=\"Are you sure?\"\r\n                onConfirm={warnConfirm}\r\n                focusConfirmBtn\r\n                >\r\n                The field value must be <b>number</b>.\r\n              </SweetAlert>)\r\n              cancelCurrentChanges()\r\n        }else{\r\n            if(parseFloat(item.cash) < 0){\r\n                setAlert(<SweetAlert\r\n                    warnning\r\n                    confirmBtnText=\"Yes, got it\"\r\n                    confirmBtnBsStyle=\"delete\"\r\n                    title=\"Are you sure?\"\r\n                    onConfirm={warnConfirm}\r\n                    focusConfirmBtn\r\n                    >\r\n                    The field value must be greater than <b>0</b>.\r\n                  </SweetAlert>)\r\n                  cancelCurrentChanges()\r\n            }else{\r\n                setAlert(\r\n                    <SweetAlert\r\n                        title={\"\"}\r\n                        onConfirm={() => {}}\r\n                        showConfirm={false}\r\n                    >\r\n                        <CircularProgressWithLabel value={100} />\r\n                    </SweetAlert>)\r\n                    dispatch(updateCash(newSaveData));\r\n                    setAlert(null);\r\n                    handleNotificationCall();\r\n                    // console.log(\"cash Document successfully update!\");\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const cancel = (dataItem) => {\r\n    }\r\n\r\n    const discard = (dataItem) => {\r\n        cancelCurrentChanges()\r\n    }\r\n\r\n    const remove = (dataItem) => {\r\n        deleteDataItem = dataItem;\r\n        setAlert(\r\n            <SweetAlert\r\n            danger\r\n            showCancel\r\n            confirmBtnText=\"Yes, delete it!\"\r\n            confirmBtnBsStyle=\"delete\"\r\n            title=\"Are you sure?\"\r\n            onConfirm={deleteRequest}\r\n            onCancel={deleteCancel}\r\n            focusCancelBtn\r\n            >\r\n            You will not be able to recover this cash(<b>$ {dataItem.cash}</b>).\r\n          </SweetAlert>\r\n          );\r\n        \r\n        \r\n    }\r\n    const deleteRequest = () => {\r\n        setAlert(null)\r\n        setAlert(\r\n        <SweetAlert\r\n            title={\"\"}\r\n            onConfirm={() => {}}\r\n            showConfirm={false}\r\n        >\r\n            <CircularProgressWithLabel value={50} />\r\n        </SweetAlert>)\r\n        removeItem(data, deleteDataItem);\r\n        let id = 0;\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            id++;\r\n            nitem.ID = id;\r\n            return nitem;\r\n        })\r\n        dispatch(deleteCash(newSaveData));\r\n        setAlert(null);\r\n        handleNotificationCall();\r\n        // console.log(\"cash Document successfully delete!\");\r\n    }\r\n    const deleteCancel = () => {\r\n        setAlert(null);\r\n    }\r\n    const deletedConfirm = () => {\r\n        setAlert(null);\r\n    }\r\n    const removeItem = (data, item) => {\r\n        let index = data.findIndex(p => p === item || (item.ID && p.ID === item.ID));\r\n        if (index >= 0) {\r\n            data.splice(index, 1);\r\n        }\r\n    }\r\n    const itemChange = (event) => {\r\n        const newData = data.map(item =>\r\n                    item.ID ===  event.dataItem.ID ?\r\n                    { ...item, [event.field]: event.value } : item\r\n                )\r\n        setData(newData)\r\n    }\r\n\r\n    const addNew = () => {\r\n        const newDataItem = { inEdit: true};\r\n        setData([ newDataItem, ...data ])\r\n    }\r\n\r\n    const cancelCurrentChanges = () => {\r\n        if(cash.info){\r\n            const dbdata = cash.info;\r\n            dbdata.sort(function(a, b){return a.cash - b.cash});\r\n            setData(dbdata)\r\n        }\r\n    }\r\n    const hasEditedItem = data.some(p => p.inEdit);\r\n    React.useEffect(() => {\r\n        if(cash.info){\r\n            const dbdata = cash.info;\r\n            dbdata.sort(function(a, b){return a.cash - b.cash});\r\n            setData(dbdata)\r\n            setLoading(false);\r\n        }\r\n      }, [cash.info])\r\n    return (\r\n        <>\r\n            <ToastContainer \r\n                className={classes.toastsContainer}\r\n            />\r\n            {alert}\r\n            {loading ?    \r\n            <section {...containerProps} style={{textAlign:\"center\",marginTop:window.innerHeight/2 - 100}}>\r\n                {indicatorEl} \r\n            </section> :\r\n            <MaterialGrid item lg={12} md={12} sm={12} xs={12}>\r\n                <Widget title=\"Cash back to customer\">\r\n                    <Paper style={{}}>\r\n                        <Grid\r\n                            data={data}\r\n                            onItemChange={itemChange}\r\n                            editField={editField}\r\n                            >\r\n                            <GridToolbar>\r\n                                <button\r\n                                title=\"Add new\"\r\n                                className=\"k-button k-secondary\"\r\n                                onClick={addNew}\r\n                                    >\r\n                                Add new cash\r\n                                </button>\r\n                                {hasEditedItem && (\r\n                                <button\r\n                                    title=\"Cancel current changes\"\r\n                                    className=\"k-button k-fiveth\"\r\n                                    onClick={cancelCurrentChanges}\r\n                                        >\r\n                                    Cancel current changes\r\n                                </button>\r\n                                    )}\r\n                            </GridToolbar>\r\n                            {/* <Column field=\"ID\" title=\"Id\" width=\"50px\" editable={false}  className=\"centerClass\"/> */}\r\n                            <Column field=\"cash\" title=\"Cash back to customer ($)\"  className=\"centerClass\"/>\r\n                            <Column title=\"Action\" cell={CommandCell} width=\"300px\"  className=\"centerClass\"/>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Widget>\r\n            </MaterialGrid>\r\n            \r\n            }\r\n        </>\r\n    );\r\n}","E:\\work\\firebase\\ProRMS\\src\\pages\\cash\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\cash\\myCommandCell.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\fee\\index.js",["473","474","475","476","477","478","479"],"import React, { useContext,useEffect } from \"react\";\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Grid, GridColumn as Column, GridToolbar } from '@progress/kendo-react-grid';\r\nimport { MyCommandCell } from './myCommandCell';\r\nimport { useLoading, ThreeDots} from '@agney/react-loading';\r\nimport Notification from \"../../components/Notification\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\nimport \"./style.css\"\r\nimport {\r\n    Paper,\r\n    Grid as MaterialGrid,\r\n  } from '@material-ui/core';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { CircularProgressWithLabel } from \"../../components/CircularProgressWithLabel\"\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FirebaseContext } from '../../redux';\r\n\r\nlet deleteDataItem;\r\nexport default function Fee() {\r\n    const { api } = useContext(FirebaseContext);\r\n    const {\r\n        addFee,\r\n        updateFee,\r\n        deleteFee\r\n      } = api;\r\n    const fee = useSelector(state => state.fee);\r\n    const dispatch = useDispatch();\r\n\r\n    var classes = useStyles();\r\n    const { containerProps, indicatorEl } = useLoading({\r\n        loading: true,\r\n        indicator: <ThreeDots width=\"50\" />,\r\n      });\r\n    const [loading, setLoading] = React.useState(true);\r\n    const firebase = React.useContext(FirebaseContext);\r\n    const [editField, setEditField] = React.useState(\"inEdit\");\r\n    const [data, setData] = React.useState([]);\r\n    const [alert,setAlert] = React.useState(null);\r\n    //#####################################toast########################################################\r\n    const sendNotification = (componentProps, options) => {\r\n        return toast(\r\n        <Notification\r\n            {...componentProps}\r\n            className={classes.notificationComponent}\r\n        />,\r\n        options,\r\n        );\r\n    }\r\n    const handleNotificationCall = () => {\r\n        var componentProps;\r\n    \r\n\r\n            componentProps = {\r\n              type: \"feedback\",\r\n              message: `Successfully saved`,\r\n              variant: \"contained\",\r\n              color: \"primary\",\r\n            };\r\n            \r\n        var toastId = sendNotification(componentProps, {\r\n          type: \"error\",\r\n          position:  toast.POSITION.TOP_CENTER,\r\n          progressClassName: classes.progress,\r\n          className: classes.notification,\r\n        });\r\n    }\r\n    //#####################################toast end########################################################\r\n    let CommandCell;\r\n\r\n    CommandCell = props => (\r\n      <MyCommandCell\r\n        {...props}\r\n        edit={enterEdit}\r\n        remove={remove}\r\n        add={add}\r\n        discard={discard}\r\n        update={update}\r\n        cancel={cancel}\r\n        editField={editField}\r\n        />\r\n    );\r\n\r\n    const enterEdit = (dataItem) => {\r\n        const newData = data.map(item =>\r\n                    item.ID === dataItem.ID ?\r\n                    { ...item, inEdit: true } : item\r\n                )\r\n        setData(newData)\r\n    }\r\n    const warnConfirm = () => {\r\n        setAlert(null);\r\n    }\r\n    const add = (dataItem) => {\r\n        dataItem.inEdit = undefined;\r\n        dataItem.ID = data.length;\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            return nitem;\r\n        })\r\n        if(isNaN(dataItem.Fee)){\r\n            setAlert(<SweetAlert\r\n            warnning\r\n            confirmBtnText=\"Yes, got it\"\r\n            confirmBtnBsStyle=\"delete\"\r\n            title=\"Are you sure?\"\r\n            onConfirm={warnConfirm}\r\n            focusConfirmBtn\r\n            >\r\n            The field value must be <b>number</b>.\r\n          </SweetAlert>)\r\n          discard(dataItem);\r\n        }else{\r\n            if(parseFloat(dataItem.Fee) < 0){\r\n                setAlert(<SweetAlert\r\n                    warnning\r\n                    confirmBtnText=\"Yes, got it\"\r\n                    confirmBtnBsStyle=\"delete\"\r\n                    title=\"Are you sure?\"\r\n                    onConfirm={warnConfirm}\r\n                    focusConfirmBtn\r\n                    >\r\n                    The field value must be greater <b>0</b>.\r\n                  </SweetAlert>)\r\n                  discard(dataItem);\r\n            }else if(parseFloat(dataItem.Fee) > 100){\r\n                setAlert(<SweetAlert\r\n                    warnning\r\n                    confirmBtnText=\"Yes, got it\"\r\n                    confirmBtnBsStyle=\"delete\"\r\n                    title=\"Are you sure?\"\r\n                    onConfirm={warnConfirm}\r\n                    focusConfirmBtn\r\n                    >\r\n                    The field value must be less <b>100</b>.\r\n                  </SweetAlert>)\r\n                  discard(dataItem);\r\n            }else{\r\n                setAlert(\r\n                    <SweetAlert\r\n                        title={\"\"}\r\n                        onConfirm={() => {}}\r\n                        showConfirm={false}\r\n                    >\r\n                        <CircularProgressWithLabel value={100} />\r\n                    </SweetAlert>)\r\n                    dispatch(addFee(newSaveData));\r\n                    setAlert(null);\r\n                    handleNotificationCall();\r\n                    // console.log(\"fee Document successfully add!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const update = (dataItem) => {\r\n        const updatedItem = { ...dataItem, inEdit: undefined };\r\n        updateItem(data, updatedItem);\r\n        \r\n    }\r\n\r\n    const updateItem = (data, item) => {\r\n        let index = data.findIndex(p => p === item || (item.ID && p.ID === item.ID));\r\n        if (index >= 0) {\r\n            data[index] = { ...item };\r\n        }\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            return nitem;\r\n        })\r\n        if(isNaN(item.Fee)){\r\n            setAlert(<SweetAlert\r\n            warnning\r\n            confirmBtnText=\"Yes, got it\"\r\n            confirmBtnBsStyle=\"delete\"\r\n            title=\"Are you sure?\"\r\n            onConfirm={warnConfirm}\r\n            focusConfirmBtn\r\n            >\r\n            The field value must be <b>number</b>.\r\n          </SweetAlert>)\r\n          cancelCurrentChanges();\r\n        }else{\r\n            if(parseFloat(item.Fee) <0){\r\n                setAlert(<SweetAlert\r\n                    warnning\r\n                    confirmBtnText=\"Yes, got it\"\r\n                    confirmBtnBsStyle=\"delete\"\r\n                    title=\"Are you sure?\"\r\n                    onConfirm={warnConfirm}\r\n                    focusConfirmBtn\r\n                    >\r\n                    The field value must be greater than <b>0</b>.\r\n                  </SweetAlert>)\r\n                  cancelCurrentChanges();\r\n            }else if(parseFloat(item.Fee) >100){\r\n                setAlert(<SweetAlert\r\n                    warnning\r\n                    confirmBtnText=\"Yes, got it\"\r\n                    confirmBtnBsStyle=\"delete\"\r\n                    title=\"Are you sure?\"\r\n                    onConfirm={warnConfirm}\r\n                    focusConfirmBtn\r\n                    >\r\n                    The field value must be less than <b>100</b>.\r\n                  </SweetAlert>)\r\n                  cancelCurrentChanges();\r\n            }else{\r\n                let saveData = {data:newSaveData};\r\n                setAlert(\r\n                    <SweetAlert\r\n                        title={\"\"}\r\n                        onConfirm={() => {}}\r\n                        showConfirm={false}\r\n                    >\r\n                        <CircularProgressWithLabel value={100} />\r\n                    </SweetAlert>)\r\n                dispatch(updateFee(newSaveData));\r\n                setAlert(null);\r\n                handleNotificationCall();\r\n                // console.log(\"fee Document successfully update!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const cancel = (dataItem) => {\r\n    }\r\n\r\n    const discard = (dataItem) => {\r\n        cancelCurrentChanges()\r\n    }\r\n\r\n    const remove = (dataItem) => {\r\n        deleteDataItem = dataItem;\r\n        setAlert(\r\n            <SweetAlert\r\n            danger\r\n            showCancel\r\n            confirmBtnText=\"Yes, delete it!\"\r\n            confirmBtnBsStyle=\"delete\"\r\n            title=\"Are you sure?\"\r\n            onConfirm={deleteRequest}\r\n            onCancel={deleteCancel}\r\n            focusCancelBtn\r\n            >\r\n            You will not be able to recover this fee(<b>{dataItem.Fee} %</b>).\r\n          </SweetAlert>\r\n          );\r\n        \r\n        \r\n    }\r\n    const deleteRequest = () => {\r\n        setAlert(null)\r\n        setAlert(\r\n        <SweetAlert\r\n            title={\"\"}\r\n            onConfirm={() => {}}\r\n            showConfirm={false}\r\n        >\r\n            <CircularProgressWithLabel value={50} />\r\n        </SweetAlert>)\r\n        removeItem(data, deleteDataItem);\r\n        let id = 0;\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            id++;\r\n            nitem.ID = id;\r\n            return nitem;\r\n        })\r\n        dispatch(deleteFee(newSaveData));\r\n        setAlert(null);\r\n        handleNotificationCall();\r\n        // console.log(\"fee Document successfully delete!\");\r\n    }\r\n    const deleteCancel = () => {\r\n        setAlert(null);\r\n    }\r\n    const deletedConfirm = () => {\r\n        setAlert(null);\r\n    }\r\n    const removeItem = (data, item) => {\r\n        let index = data.findIndex(p => p === item || (item.ID && p.ID === item.ID));\r\n        if (index >= 0) {\r\n            data.splice(index, 1);\r\n        }\r\n    }\r\n    const itemChange = (event) => {\r\n        const newData = data.map(item =>\r\n                    item.ID ===  event.dataItem.ID ?\r\n                    { ...item, [event.field]: event.value } : item\r\n                )\r\n        setData(newData)\r\n    }\r\n\r\n    const addNew = () => {\r\n        const newDataItem = { inEdit: true};\r\n        setData([ newDataItem, ...data ])\r\n    }\r\n\r\n    const cancelCurrentChanges = () => {\r\n        if(fee.info){\r\n            const dbdata = fee.info;\r\n            dbdata.sort(function(a, b){return a.Fee - b.Fee});\r\n            setData(dbdata)\r\n        }\r\n    }\r\n    const hasEditedItem = data.some(p => p.inEdit);\r\n    React.useEffect(() => {\r\n        if(fee.info){\r\n            const dbdata = fee.info;\r\n            dbdata.sort(function(a, b){return a.Fee - b.Fee});\r\n            setData(dbdata)\r\n            setLoading(false);\r\n        }\r\n      }, [fee.info])\r\n    return (\r\n        <>\r\n            <ToastContainer \r\n                className={classes.toastsContainer}\r\n            />\r\n            {alert}\r\n            {loading ?    \r\n            <section {...containerProps} style={{textAlign:\"center\",marginTop:window.innerHeight/2 - 100}}>\r\n                {indicatorEl} \r\n            </section> :\r\n            <MaterialGrid item lg={12} md={12} sm={12} xs={12}>\r\n                <Widget title=\"Dealer Fee\">\r\n                    <Paper style={{}}>\r\n                        <Grid\r\n                            data={data}\r\n                            onItemChange={itemChange}\r\n                            editField={editField}\r\n                            >\r\n                            <GridToolbar>\r\n                                <button\r\n                                title=\"Add new\"\r\n                                className=\"k-button k-secondary\"\r\n                                onClick={addNew}\r\n                                    >\r\n                                Add new fee\r\n                                </button>\r\n                                {hasEditedItem && (\r\n                                <button\r\n                                    title=\"Cancel current changes\"\r\n                                    className=\"k-button k-fiveth\"\r\n                                    onClick={cancelCurrentChanges}\r\n                                        >\r\n                                    Cancel current changes\r\n                                </button>\r\n                                    )}\r\n                            </GridToolbar>\r\n                            {/* <Column field=\"ID\" title=\"Id\" width=\"50px\" editable={false}  className=\"centerClass\"/> */}\r\n                            <Column field=\"Fee\" title=\"Fee (%)\"  className=\"centerClass\"/>\r\n                            <Column title=\"Action\" cell={CommandCell} width=\"300px\"  className=\"centerClass\"/>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Widget>\r\n            </MaterialGrid>\r\n            \r\n            }\r\n        </>\r\n        \r\n    );\r\n\r\n    \r\n}","E:\\work\\firebase\\ProRMS\\src\\pages\\fee\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\fee\\myCommandCell.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\battery\\index.js",["480","481","482","483","484","485"],"import React, { useContext,useEffect } from \"react\";\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Grid, GridColumn as Column, GridToolbar } from '@progress/kendo-react-grid';\r\nimport { useLoading, ThreeDots} from '@agney/react-loading';\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n    Paper,\r\n    Grid as MaterialGrid,\r\n  } from '@material-ui/core';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { CircularProgressWithLabel } from \"../../components/CircularProgressWithLabel\"\r\nimport { MyCommandCell } from './myCommandCell';\r\nimport useStyles from \"./styles\";\r\nimport \"./style.css\"\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FirebaseContext } from '../../redux';\r\n\r\nlet deleteDataItem;\r\nexport default function Battery() {\r\n    const { api } = useContext(FirebaseContext);\r\n    const {\r\n        addBattery,\r\n        updateBattery,\r\n        deleteBattery,\r\n      } = api;\r\n    const battery = useSelector(state => state.battery);\r\n    const dispatch = useDispatch();\r\n\r\n    var classes = useStyles();\r\n    const { containerProps, indicatorEl } = useLoading({\r\n        loading: true,\r\n        indicator: <ThreeDots width=\"50\" />,\r\n      });\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [editField, setEditField] = React.useState(\"inEdit\");\r\n    const [data, setData] = React.useState([]);\r\n    const [alert,setAlert] = React.useState(null);\r\n    //#####################################toast########################################################\r\n    const sendNotification = (componentProps, options) => {\r\n        return toast(\r\n        <Notification\r\n            {...componentProps}\r\n            className={classes.notificationComponent}\r\n        />,\r\n        options,\r\n        );\r\n    }\r\n    const handleNotificationCall = () => {\r\n        var componentProps;\r\n    \r\n\r\n            componentProps = {\r\n              type: \"feedback\",\r\n              message: `Successfully saved`,\r\n              variant: \"contained\",\r\n              color: \"primary\",\r\n            };\r\n            \r\n        var toastId = sendNotification(componentProps, {\r\n          type: \"error\",\r\n          position:  toast.POSITION.TOP_CENTER,\r\n          progressClassName: classes.progress,\r\n          className: classes.notification,\r\n        });\r\n    }\r\n    //#####################################toast end########################################################\r\n    let CommandCell;\r\n\r\n    CommandCell = props => (\r\n      <MyCommandCell\r\n        {...props}\r\n        edit={enterEdit}\r\n        remove={remove}\r\n        add={add}\r\n        discard={discard}\r\n        update={update}\r\n        cancel={cancel}\r\n        editField={editField}\r\n        />\r\n    );\r\n\r\n    const enterEdit = (dataItem) => {\r\n        const newData = data.map(item =>\r\n                    item.ID === dataItem.ID ?\r\n                    { ...item, inEdit: true } : item\r\n                )\r\n        setData(newData)\r\n    }\r\n    const warnConfirm = () => {\r\n        setAlert(null);\r\n    }\r\n    const add = (dataItem) => {\r\n        dataItem.inEdit = undefined;\r\n        dataItem.ID = data.length;\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            return nitem;\r\n        })\r\n        setAlert(\r\n            <SweetAlert\r\n                title={\"\"}\r\n                onConfirm={() => {}}\r\n                showConfirm={false}\r\n            >\r\n                <CircularProgressWithLabel value={100} />\r\n            </SweetAlert>)\r\n        dispatch(addBattery(newSaveData));\r\n        setAlert(null);\r\n        handleNotificationCall();\r\n        // console.log(\"battery Document successfully add!\");\r\n    }\r\n\r\n    const update = (dataItem) => {\r\n        const updatedItem = { ...dataItem, inEdit: undefined };\r\n        updateItem(data, updatedItem);\r\n        \r\n    }\r\n\r\n    const updateItem = (data, item) => {\r\n        let index = data.findIndex(p => p === item || (item.ID && p.ID === item.ID));\r\n        if (index >= 0) {\r\n            data[index] = { ...item };\r\n        }\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            return nitem;\r\n        })\r\n        setAlert(\r\n            <SweetAlert\r\n                title={\"\"}\r\n                onConfirm={() => {}}\r\n                showConfirm={false}\r\n            >\r\n                <CircularProgressWithLabel value={100} />\r\n            </SweetAlert>)\r\n        dispatch(updateBattery(newSaveData));\r\n        setAlert(null);\r\n        handleNotificationCall();\r\n        // console.log(\"battery Document successfully update!\");\r\n    }\r\n\r\n    const cancel = (dataItem) => {\r\n    }\r\n\r\n    const discard = (dataItem) => {\r\n        cancelCurrentChanges()\r\n    }\r\n\r\n    const remove = (dataItem) => {\r\n        deleteDataItem = dataItem;\r\n        setAlert(\r\n            <SweetAlert\r\n            danger\r\n            showCancel\r\n            confirmBtnText=\"Yes, delete it!\"\r\n            confirmBtnBsStyle=\"delete\"\r\n            title=\"Are you sure?\"\r\n            onConfirm={deleteRequest}\r\n            onCancel={deleteCancel}\r\n            focusCancelBtn\r\n            >\r\n            You will not be able to recover this battery type(<b>{dataItem.battery}</b>).\r\n          </SweetAlert>\r\n          );\r\n        \r\n        \r\n    }\r\n    const deleteRequest = () => {\r\n        setAlert(null)\r\n        setAlert(\r\n        <SweetAlert\r\n            title={\"\"}\r\n            onConfirm={() => {}}\r\n            showConfirm={false}\r\n        >\r\n            <CircularProgressWithLabel value={50} />\r\n        </SweetAlert>)\r\n        removeItem(data, deleteDataItem);\r\n        let id = 0;\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            id++;\r\n            nitem.ID = id;\r\n            return nitem;\r\n        })\r\n        dispatch(deleteBattery(newSaveData));\r\n        setAlert(null);\r\n        handleNotificationCall();\r\n        // console.log(\"battery Document successfully delete update!\");\r\n    }\r\n    const deleteCancel = () => {\r\n        setAlert(null);\r\n    }\r\n    const deletedConfirm = () => {\r\n        setAlert(null);\r\n    }\r\n    const removeItem = (data, item) => {\r\n        let index = data.findIndex(p => p === item || (item.ID && p.ID === item.ID));\r\n        if (index >= 0) {\r\n            data.splice(index, 1);\r\n        }\r\n    }\r\n    const itemChange = (event) => {\r\n        const newData = data.map(item =>\r\n                    item.ID ===  event.dataItem.ID ?\r\n                    { ...item, [event.field]: event.value } : item\r\n                )\r\n        setData(newData)\r\n    }\r\n\r\n    const addNew = () => {\r\n        const newDataItem = { inEdit: true};\r\n        setData([ newDataItem, ...data ])\r\n    }\r\n\r\n    const cancelCurrentChanges = () => {\r\n        if(battery.info){\r\n            const dbdata = battery.info;\r\n            dbdata.sort(function(a, b){return a.ID - b.ID});\r\n            setData(dbdata)\r\n        }\r\n    }\r\n    const hasEditedItem = data.some(p => p.inEdit);\r\n    React.useEffect(() => {\r\n        if(battery.info){\r\n            const dbdata = battery.info;\r\n            dbdata.sort(function(a, b){return a.ID - b.ID});\r\n            setData(dbdata)\r\n            setLoading(false);\r\n        }\r\n      }, [battery.info])\r\n    return (\r\n        <>\r\n            <ToastContainer \r\n                className={classes.toastsContainer}\r\n            />\r\n            {alert}\r\n            {loading ?    \r\n            <section {...containerProps} style={{textAlign:\"center\",marginTop:window.innerHeight/2 - 100}}>\r\n                {indicatorEl} \r\n            </section> :\r\n            <MaterialGrid item lg={12} md={12} sm={12} xs={12}>\r\n                <Widget title=\"Battery Type\">\r\n                    <Paper style={{}}>\r\n                        <Grid\r\n                            data={data}\r\n                            onItemChange={itemChange}\r\n                            editField={editField}\r\n                            >\r\n                            <GridToolbar>\r\n                                <button\r\n                                title=\"Add new\"\r\n                                className=\"k-button k-secondary\"\r\n                                onClick={addNew}\r\n                                    >\r\n                                Add new battery type\r\n                                </button>\r\n                                {hasEditedItem && (\r\n                                <button\r\n                                    title=\"Cancel current changes\"\r\n                                    className=\"k-button k-fiveth\"\r\n                                    onClick={cancelCurrentChanges}\r\n                                        >\r\n                                    Cancel current changes\r\n                                </button>\r\n                                    )}\r\n                            </GridToolbar>\r\n                            <Column field=\"battery\" title=\"Battery Type\"  className=\"centerClass\"/>\r\n                            <Column title=\"Action\" cell={CommandCell} width=\"300px\"  className=\"centerClass\"/>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Widget>\r\n            </MaterialGrid>\r\n            \r\n            }\r\n        </>\r\n        \r\n    );\r\n\r\n    \r\n}","E:\\work\\firebase\\ProRMS\\src\\pages\\battery\\myCommandCell.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\battery\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\selfgen\\index.js",["486","487","488","489","490","491","492"],"import React, { useContext,useEffect } from \"react\";\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Grid, GridColumn as Column, GridToolbar } from '@progress/kendo-react-grid';\r\nimport { useLoading, ThreeDots} from '@agney/react-loading';\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n    Paper,\r\n    Grid as MaterialGrid,\r\n  } from '@material-ui/core';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { CircularProgressWithLabel } from \"../../components/CircularProgressWithLabel\"\r\nimport { MyCommandCell } from './myCommandCell';\r\nimport useStyles from \"./styles\";\r\nimport \"./style.css\"\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FirebaseContext } from '../../redux';\r\n\r\nlet deleteDataItem;\r\nexport default function Selfgen() {\r\n    const { api } = useContext(FirebaseContext);\r\n    const {\r\n        addSelfGen,\r\n        updateSelfGen,\r\n        deleteSelfGen\r\n      } = api;\r\n    const selfgen = useSelector(state => state.selfgen);\r\n    const dispatch = useDispatch();\r\n\r\n    var classes = useStyles();\r\n    const { containerProps, indicatorEl } = useLoading({\r\n        loading: true,\r\n        indicator: <ThreeDots width=\"50\" />,\r\n      });\r\n    const [loading, setLoading] = React.useState(true);\r\n    const firebase = React.useContext(FirebaseContext);\r\n    const [editField, setEditField] = React.useState(\"inEdit\");\r\n    const [data, setData] = React.useState([]);\r\n    const [alert,setAlert] = React.useState(null);\r\n    //#####################################toast########################################################\r\n    const sendNotification = (componentProps, options) => {\r\n        return toast(\r\n        <Notification\r\n            {...componentProps}\r\n            className={classes.notificationComponent}\r\n        />,\r\n        options,\r\n        );\r\n    }\r\n    const handleNotificationCall = () => {\r\n        var componentProps;\r\n    \r\n\r\n            componentProps = {\r\n              type: \"feedback\",\r\n              message: `Successfully saved`,\r\n              variant: \"contained\",\r\n              color: \"primary\",\r\n            };\r\n            \r\n        var toastId = sendNotification(componentProps, {\r\n          type: \"error\",\r\n          position:  toast.POSITION.TOP_CENTER,\r\n          progressClassName: classes.progress,\r\n          className: classes.notification,\r\n        });\r\n    }\r\n    //#####################################toast end########################################################\r\n    let CommandCell;\r\n\r\n    CommandCell = props => (\r\n      <MyCommandCell\r\n        {...props}\r\n        edit={enterEdit}\r\n        remove={remove}\r\n        add={add}\r\n        discard={discard}\r\n        update={update}\r\n        cancel={cancel}\r\n        editField={editField}\r\n        />\r\n    );\r\n\r\n    const enterEdit = (dataItem) => {\r\n        const newData = data.map(item =>\r\n                    item.ID === dataItem.ID ?\r\n                    { ...item, inEdit: true } : item\r\n                )\r\n        setData(newData)\r\n    }\r\n    const warnConfirm = () => {\r\n        setAlert(null);\r\n    }\r\n    const add = (dataItem) => {\r\n        dataItem.inEdit = undefined;\r\n        dataItem.ID = data.length;\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            return nitem;\r\n        })\r\n        setAlert(\r\n            <SweetAlert\r\n                title={\"\"}\r\n                onConfirm={() => {}}\r\n                showConfirm={false}\r\n            >\r\n                <CircularProgressWithLabel value={100} />\r\n            </SweetAlert>)\r\n        dispatch(addSelfGen(newSaveData));\r\n        setAlert(null);\r\n        handleNotificationCall();\r\n        // console.log(\"module Document successfully add!\");\r\n    }\r\n\r\n    const update = (dataItem) => {\r\n        const updatedItem = { ...dataItem, inEdit: undefined };\r\n        updateItem(data, updatedItem);\r\n        \r\n    }\r\n\r\n    const updateItem = (data, item) => {\r\n        let index = data.findIndex(p => p === item || (item.ID && p.ID === item.ID));\r\n        if (index >= 0) {\r\n            data[index] = { ...item };\r\n        }\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            return nitem;\r\n        })\r\n           \r\n\r\n        setAlert(\r\n            <SweetAlert\r\n                title={\"\"}\r\n                onConfirm={() => {}}\r\n                showConfirm={false}\r\n            >\r\n                <CircularProgressWithLabel value={100} />\r\n            </SweetAlert>)\r\n        dispatch(updateSelfGen(newSaveData));\r\n        setAlert(null);\r\n        handleNotificationCall();\r\n        // console.log(\"selfgen Document successfully update!\");\r\n    }\r\n\r\n    const cancel = (dataItem) => {\r\n    }\r\n\r\n    const discard = (dataItem) => {\r\n        cancelCurrentChanges()\r\n    }\r\n\r\n    const remove = (dataItem) => {\r\n        deleteDataItem = dataItem;\r\n        setAlert(\r\n            <SweetAlert\r\n            danger\r\n            showCancel\r\n            confirmBtnText=\"Yes, delete it!\"\r\n            confirmBtnBsStyle=\"delete\"\r\n            title=\"Are you sure?\"\r\n            onConfirm={deleteRequest}\r\n            onCancel={deleteCancel}\r\n            focusCancelBtn\r\n            >\r\n            You will not be able to recover this selfgen lead(<b>{dataItem.selfgen}</b>).\r\n          </SweetAlert>\r\n          );\r\n        \r\n        \r\n    }\r\n    const deleteRequest = () => {\r\n        setAlert(null)\r\n        setAlert(\r\n        <SweetAlert\r\n            title={\"\"}\r\n            onConfirm={() => {}}\r\n            showConfirm={false}\r\n        >\r\n            <CircularProgressWithLabel value={50} />\r\n        </SweetAlert>)\r\n        removeItem(data, deleteDataItem);\r\n        let id = 0;\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            id++;\r\n            nitem.ID = id;\r\n            return nitem;\r\n        })\r\n        dispatch(deleteSelfGen(newSaveData));\r\n        setAlert(null);\r\n        handleNotificationCall();\r\n        // console.log(\"selfgen Document successfully delete update!\");\r\n    }\r\n    const deleteCancel = () => {\r\n        setAlert(null);\r\n    }\r\n    const deletedConfirm = () => {\r\n        setAlert(null);\r\n    }\r\n    const removeItem = (data, item) => {\r\n        let index = data.findIndex(p => p === item || (item.ID && p.ID === item.ID));\r\n        if (index >= 0) {\r\n            data.splice(index, 1);\r\n        }\r\n    }\r\n    const itemChange = (event) => {\r\n        const newData = data.map(item =>\r\n                    item.ID ===  event.dataItem.ID ?\r\n                    { ...item, [event.field]: event.value } : item\r\n                )\r\n        setData(newData)\r\n    }\r\n\r\n    const addNew = () => {\r\n        const newDataItem = { inEdit: true};\r\n        setData([ newDataItem, ...data ])\r\n    }\r\n\r\n    const cancelCurrentChanges = () => {\r\n        if(selfgen.info){\r\n            const dbdata = selfgen.info;\r\n            dbdata.sort(function(a, b){return a.ID - b.ID});\r\n            setData(dbdata)\r\n        }\r\n    }\r\n    const hasEditedItem = data.some(p => p.inEdit);\r\n    React.useEffect(() => {\r\n        if(selfgen.info){\r\n            const dbdata = selfgen.info;\r\n            dbdata.sort(function(a, b){return a.ID - b.ID});\r\n            setData(dbdata)\r\n            setLoading(false);\r\n        }\r\n      }, [selfgen.info])\r\n    return (\r\n        <>\r\n            <ToastContainer \r\n                className={classes.toastsContainer}\r\n            />\r\n            {alert}\r\n            {loading ?    \r\n            <section {...containerProps} style={{textAlign:\"center\",marginTop:window.innerHeight/2 - 100}}>\r\n                {indicatorEl} \r\n            </section> :\r\n            <MaterialGrid item lg={12} md={12} sm={12} xs={12}>\r\n                <Widget title=\"Selfgen Lead\">\r\n                    <Paper style={{}}>\r\n                        <Grid\r\n                            data={data}\r\n                            onItemChange={itemChange}\r\n                            editField={editField}\r\n                            >\r\n                            <GridToolbar>\r\n                                <button\r\n                                title=\"Add new\"\r\n                                className=\"k-button k-secondary\"\r\n                                onClick={addNew}\r\n                                    >\r\n                                Add new selfgen lead\r\n                                </button>\r\n                                {hasEditedItem && (\r\n                                <button\r\n                                    title=\"Cancel current changes\"\r\n                                    className=\"k-button k-fiveth\"\r\n                                    onClick={cancelCurrentChanges}\r\n                                        >\r\n                                    Cancel current changes\r\n                                </button>\r\n                                    )}\r\n                            </GridToolbar>\r\n                            <Column field=\"selfgen\" title=\"Selfgen Lead\"  className=\"centerClass\"/>\r\n                            <Column title=\"Action\" cell={CommandCell} width=\"300px\"  className=\"centerClass\"/>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Widget>\r\n            </MaterialGrid>\r\n            \r\n            }\r\n        </>\r\n        \r\n    );\r\n\r\n    \r\n}","E:\\work\\firebase\\ProRMS\\src\\pages\\module\\index.js",["493","494","495","496","497","498","499"],"import React, { useContext,useEffect } from \"react\";\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Grid, GridColumn as Column, GridToolbar } from '@progress/kendo-react-grid';\r\nimport { useLoading, ThreeDots} from '@agney/react-loading';\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n    Paper,\r\n    Grid as MaterialGrid,\r\n  } from '@material-ui/core';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { CircularProgressWithLabel } from \"../../components/CircularProgressWithLabel\"\r\nimport { MyCommandCell } from './myCommandCell';\r\nimport useStyles from \"./styles\";\r\nimport \"./style.css\"\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FirebaseContext } from '../../redux';\r\n\r\nlet deleteDataItem;\r\nexport default function Module() {\r\n\r\n    const { api } = useContext(FirebaseContext);\r\n    const {\r\n        addModule,\r\n        updateModule,\r\n        deleteModule\r\n      } = api;\r\n    const modules = useSelector(state => state.modules);\r\n    const dispatch = useDispatch();\r\n\r\n    var classes = useStyles();\r\n    const { containerProps, indicatorEl } = useLoading({\r\n        loading: true,\r\n        indicator: <ThreeDots width=\"50\" />,\r\n      });\r\n    const [loading, setLoading] = React.useState(true);\r\n    const firebase = React.useContext(FirebaseContext);\r\n    const [editField, setEditField] = React.useState(\"inEdit\");\r\n    const [data, setData] = React.useState([]);\r\n    const [alert,setAlert] = React.useState(null);\r\n    //#####################################toast########################################################\r\n    const sendNotification = (componentProps, options) => {\r\n        return toast(\r\n        <Notification\r\n            {...componentProps}\r\n            className={classes.notificationComponent}\r\n        />,\r\n        options,\r\n        );\r\n    }\r\n    const handleNotificationCall = () => {\r\n        var componentProps;\r\n    \r\n\r\n            componentProps = {\r\n              type: \"feedback\",\r\n              message: `Successfully saved`,\r\n              variant: \"contained\",\r\n              color: \"primary\",\r\n            };\r\n            \r\n        var toastId = sendNotification(componentProps, {\r\n          type: \"error\",\r\n          position:  toast.POSITION.TOP_CENTER,\r\n          progressClassName: classes.progress,\r\n          className: classes.notification,\r\n        });\r\n    }\r\n    //#####################################toast end########################################################\r\n    let CommandCell;\r\n\r\n    CommandCell = props => (\r\n      <MyCommandCell\r\n        {...props}\r\n        edit={enterEdit}\r\n        remove={remove}\r\n        add={add}\r\n        discard={discard}\r\n        update={update}\r\n        cancel={cancel}\r\n        editField={editField}\r\n        />\r\n    );\r\n\r\n    const enterEdit = (dataItem) => {\r\n        const newData = data.map(item =>\r\n                    item.ID === dataItem.ID ?\r\n                    { ...item, inEdit: true } : item\r\n                )\r\n        setData(newData)\r\n    }\r\n    const warnConfirm = () => {\r\n        setAlert(null);\r\n    }\r\n    const add = (dataItem) => {\r\n        dataItem.inEdit = undefined;\r\n        dataItem.ID = data.length;\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            return nitem;\r\n        })\r\n        setAlert(\r\n            <SweetAlert\r\n                title={\"\"}\r\n                onConfirm={() => {}}\r\n                showConfirm={false}\r\n            >\r\n                <CircularProgressWithLabel value={100} />\r\n            </SweetAlert>)\r\n        dispatch(addModule(newSaveData));\r\n        setAlert(null);\r\n        handleNotificationCall();\r\n        // console.log(\"module Document successfully add!\");\r\n    }\r\n\r\n    const update = (dataItem) => {\r\n        const updatedItem = { ...dataItem, inEdit: undefined };\r\n        updateItem(data, updatedItem);\r\n        \r\n    }\r\n\r\n    const updateItem = (data, item) => {\r\n        let index = data.findIndex(p => p === item || (item.ID && p.ID === item.ID));\r\n        if (index >= 0) {\r\n            data[index] = { ...item };\r\n        }\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            return nitem;\r\n        })\r\n           \r\n        setAlert(\r\n            <SweetAlert\r\n                title={\"\"}\r\n                onConfirm={() => {}}\r\n                showConfirm={false}\r\n            >\r\n                <CircularProgressWithLabel value={100} />\r\n            </SweetAlert>)\r\n        dispatch(updateModule(newSaveData));\r\n        setAlert(null);\r\n        handleNotificationCall();\r\n        // console.log(\"module Document successfully update!\");\r\n    }\r\n\r\n    const cancel = (dataItem) => {\r\n    }\r\n\r\n    const discard = (dataItem) => {\r\n        cancelCurrentChanges()\r\n    }\r\n\r\n    const remove = (dataItem) => {\r\n        deleteDataItem = dataItem;\r\n        setAlert(\r\n            <SweetAlert\r\n            danger\r\n            showCancel\r\n            confirmBtnText=\"Yes, delete it!\"\r\n            confirmBtnBsStyle=\"delete\"\r\n            title=\"Are you sure?\"\r\n            onConfirm={deleteRequest}\r\n            onCancel={deleteCancel}\r\n            focusCancelBtn\r\n            >\r\n            You will not be able to recover this module (<b>{dataItem.module}</b>).\r\n          </SweetAlert>\r\n          );\r\n        \r\n        \r\n    }\r\n    const deleteRequest = () => {\r\n        setAlert(null)\r\n        setAlert(\r\n        <SweetAlert\r\n            title={\"\"}\r\n            onConfirm={() => {}}\r\n            showConfirm={false}\r\n        >\r\n            <CircularProgressWithLabel value={50} />\r\n        </SweetAlert>)\r\n        removeItem(data, deleteDataItem);\r\n        let id = 0;\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            id++;\r\n            nitem.ID = id;\r\n            return nitem;\r\n        })\r\n        dispatch(deleteModule(newSaveData));\r\n        setAlert(null);\r\n        handleNotificationCall();\r\n        // console.log(\"module Document successfully delete update!\");\r\n    }\r\n    const deleteCancel = () => {\r\n        setAlert(null);\r\n    }\r\n    const deletedConfirm = () => {\r\n        setAlert(null);\r\n    }\r\n    const removeItem = (data, item) => {\r\n        let index = data.findIndex(p => p === item || (item.ID && p.ID === item.ID));\r\n        if (index >= 0) {\r\n            data.splice(index, 1);\r\n        }\r\n    }\r\n    const itemChange = (event) => {\r\n        const newData = data.map(item =>\r\n                    item.ID ===  event.dataItem.ID ?\r\n                    { ...item, [event.field]: event.value } : item\r\n                )\r\n        setData(newData)\r\n    }\r\n\r\n    const addNew = () => {\r\n        const newDataItem = { inEdit: true};\r\n        setData([ newDataItem, ...data ])\r\n    }\r\n\r\n    const cancelCurrentChanges = () => {\r\n        if(modules.info){\r\n            const dbdata = modules.info;\r\n            dbdata.sort(function(a, b){return a.ID - b.ID});\r\n            setData(dbdata)\r\n        }\r\n    }\r\n    const hasEditedItem = data.some(p => p.inEdit);\r\n    React.useEffect(() => {\r\n        if(modules.info){\r\n            const dbdata = modules.info;\r\n            dbdata.sort(function(a, b){return a.ID - b.ID});\r\n            setData(dbdata)\r\n            setLoading(false);\r\n        }\r\n      }, [modules.info])\r\n    return (\r\n        <>\r\n            <ToastContainer \r\n                className={classes.toastsContainer}\r\n            />\r\n            {alert}\r\n            {loading ?    \r\n            <section {...containerProps} style={{textAlign:\"center\",marginTop:window.innerHeight/2 - 100}}>\r\n                {indicatorEl} \r\n            </section> :\r\n            <MaterialGrid item lg={12} md={12} sm={12} xs={12}>\r\n                <Widget title=\"Module\">\r\n                    <Paper style={{}}>\r\n                        <Grid\r\n                            data={data}\r\n                            onItemChange={itemChange}\r\n                            editField={editField}\r\n                            >\r\n                            <GridToolbar>\r\n                                <button\r\n                                title=\"Add new\"\r\n                                className=\"k-button k-secondary\"\r\n                                onClick={addNew}\r\n                                    >\r\n                                Add new module\r\n                                </button>\r\n                                {hasEditedItem && (\r\n                                <button\r\n                                    title=\"Cancel current changes\"\r\n                                    className=\"k-button k-fiveth\"\r\n                                    onClick={cancelCurrentChanges}\r\n                                        >\r\n                                    Cancel current changes\r\n                                </button>\r\n                                    )}\r\n                            </GridToolbar>\r\n                            <Column field=\"module\" title=\"Module\"  className=\"centerClass\"/>\r\n                            <Column title=\"Action\" cell={CommandCell} width=\"300px\"  className=\"centerClass\"/>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Widget>\r\n            </MaterialGrid>\r\n            \r\n            }\r\n        </>\r\n        \r\n    );\r\n\r\n    \r\n}","E:\\work\\firebase\\ProRMS\\src\\pages\\selfgen\\myCommandCell.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\selfgen\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\module\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\module\\myCommandCell.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\guide\\index.js",["500","501","502","503","504","505"],"import React, { useContext,useEffect } from \"react\";\r\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\r\nimport { Renderers } from './renderers.js';\r\nimport {\r\n    Paper,\r\n    Grid as MaterialGrid,\r\n  } from '@material-ui/core';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { useLoading, ThreeDots} from '@agney/react-loading';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FirebaseContext } from '../../redux';\r\n\r\nexport default function Guide(){\r\n    const { api } = useContext(FirebaseContext);\r\n    const {\r\n        updateGuide,\r\n      } = api;\r\n    const guide = useSelector(state => state.guide);\r\n    const dispatch = useDispatch();\r\n\r\n    const { containerProps, indicatorEl } = useLoading({\r\n        loading: true,\r\n        indicator: <ThreeDots width=\"50\" />,\r\n      });\r\n    const [loading, setLoading] = React.useState(true);\r\n    const firebase = useContext(FirebaseContext);\r\n    const [data, setData] = React.useState([]);\r\n    const [editField, setEditField] = React.useState(undefined);\r\n    const [changes, setChanges] = React.useState(false);\r\n\r\n    const enterEdit = (dataItem, field) => {\r\n        const newdata = data.map(item => ({\r\n                ...item,\r\n                inEdit: item.id === dataItem.id ? field : undefined\r\n            })\r\n        );\r\n            setData(newdata);\r\n            setEditField(field);\r\n    }\r\n\r\n    const exitEdit = () => {\r\n        const newdata = data.map(item => (\r\n            { ...item, inEdit: undefined }\r\n            ));\r\n            setData(newdata);\r\n            setEditField(undefined);\r\n\r\n            var updateData = {};\r\n            updateData.data = [];\r\n            newdata.map((item) => {\r\n                const {temp,inEdit,...ndata} = item;\r\n                updateData.data.push(ndata);\r\n            })\r\n            dispatch(updateGuide(updateData));\r\n    }\r\n\r\n    const itemChange = (event) => {\r\n        event.dataItem[event.field] = event.value;\r\n        const newdata = data.map(item => {\r\n            var temp = {};\r\n            var key = event.dataItem[event.field];\r\n            temp[key] = event.value;\r\n            return {...item,temp};\r\n            }\r\n        );\r\n        setData(newdata);\r\n        setChanges(true);\r\n    }\r\n    const renderers =  new Renderers(enterEdit, exitEdit, 'inEdit');\r\n    React.useEffect(() => {\r\n        if(guide.info){\r\n            const dbdata = guide.info;\r\n            if(dbdata.length === 0){\r\n                let initialData = [];\r\n                let tempRowData = {};\r\n                let key;\r\n                for(var i = 0;i < 25; i++){\r\n                    tempRowData = {};\r\n                    tempRowData.id = i+1;\r\n                    tempRowData.A = \"\";\r\n                    tempRowData.A = \"\";\r\n                    initialData.push(tempRowData);\r\n                }\r\n                setData(initialData);\r\n                setLoading(false); \r\n            }else{\r\n                setData(dbdata.data)\r\n                setLoading(false);\r\n            }\r\n        }\r\n      }, [guide.info])\r\n      return(\r\n        <>\r\n            {loading ?    \r\n            <section {...containerProps} style={{textAlign:\"center\",marginTop:window.innerHeight/2 - 100}}>\r\n                {indicatorEl} {/* renders only while loading */}\r\n            </section> :\r\n            <MaterialGrid item xs={12}>\r\n                <Widget title=\"Guide\">\r\n                <Paper style={{}}>\r\n                    <Grid\r\n                        style={{ height: '900px' }}\r\n                        data={data}\r\n                        rowHeight={20}\r\n                        onItemChange={itemChange}\r\n\r\n                        cellRender={renderers.cellRender}\r\n                        rowRender={renderers.rowRender}\r\n                        navigatable={true}\r\n                        resizable={true}\r\n                        editField=\"inEdit\"\r\n                        >\r\n                        <Column field=\"id\" title=\"Id\" width=\"50px\" editable={false} auto locked={true}/>\r\n                        <Column title=\"A\" width=\"300px\" field=\"A\" />\r\n                        <Column title=\"B\" width=\"1200px\" editor=\"text\" field=\"B\" />\r\n                    </Grid>\r\n                </Paper>\r\n                </Widget>\r\n            </MaterialGrid>\r\n            }\r\n        </>\r\n      )\r\n}\r\n","E:\\work\\firebase\\ProRMS\\src\\pages\\guide\\renderers.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\adders\\index.js",["506","507","508","509","510","511","512","513","514","515"],"import React, { useContext,useEffect } from \"react\";\r\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\r\nimport { Renderers } from './renderers.js';\r\nimport {\r\n    Paper,\r\n    Grid as MaterialGrid,\r\n  } from '@material-ui/core';\r\n  import Widget from \"../../components/Widget/Widget\";\r\n  import { useLoading, ThreeDots} from '@agney/react-loading';\r\n  \r\n  import Notification from \"../../components/Notification\";\r\n  import { ToastContainer, toast } from \"react-toastify\";\r\n  import { Close as CloseIcon } from \"@material-ui/icons\";\r\n    // styles\r\n    import \"react-toastify/dist/ReactToastify.css\";\r\n    import useStyles from \"./styles\";\r\n    import \"./style.css\"\r\n    import { DropDownList } from '@progress/kendo-react-dropdowns';\r\n    import { MyCustomCell } from './customCell';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FirebaseContext } from '../../redux';\r\n\r\n    function useAsyncState(initialValue) {\r\n      const [value, setValue] = React.useState(initialValue);\r\n      const setter = x =>\r\n        new Promise(resolve => {\r\n          setValue(x);\r\n          resolve(x);\r\n        });\r\n      return [value, setter];\r\n    }\r\nexport default function Adder(){\r\n\r\n  const { api } = useContext(FirebaseContext);\r\n  const {\r\n    updateAdders,\r\n    updateCalculatorRefAdder\r\n    } = api;\r\n  const adders = useSelector(state => state.adders);\r\n  const auth = useSelector(state => state.auth);\r\n  const calculator = useSelector(state => state.calculator);\r\n  const dispatch = useDispatch();\r\n\r\n    var classes = useStyles();\r\n    const { containerProps, indicatorEl } = useLoading({\r\n        loading: true,\r\n        indicator: <ThreeDots width=\"50\" />,\r\n      });\r\n    const [loading, setLoading] = React.useState(true);\r\n    const firebase = useContext(FirebaseContext);\r\n    const [data, setData] = useAsyncState([]);\r\n    const [systemSize, setSystemSize] = React.useState(0);\r\n    const [editField, setEditField] = React.useState(undefined);\r\n    const [changes, setChanges] = React.useState(false);\r\n    //#####################################toast########################################################\r\n    const sendNotification = (componentProps, options) => {\r\n        return toast(\r\n        <Notification\r\n            {...componentProps}\r\n            className={classes.notificationComponent}\r\n        />,\r\n        options,\r\n        );\r\n    }\r\n    const handleNotificationCall = () => {\r\n        var componentProps;\r\n    \r\n\r\n            componentProps = {\r\n              type: \"feedback\",\r\n              message: `You do not have permission to use it yet.\r\n                        Please contact your administrator`,\r\n              variant: \"contained\",\r\n              color: \"secondary\",\r\n            };\r\n            \r\n        var toastId = sendNotification(componentProps, {\r\n          type: \"error\",\r\n          position:  toast.POSITION.TOP_CENTER,\r\n          progressClassName: classes.progress,\r\n          className: classes.notification,\r\n        });\r\n    }\r\n          \r\n    //#####################################toast end########################################################\r\n    let CommandCell;\r\n    CommandCell = props => (\r\n      <MyCustomCell\r\n        {...props}\r\n        onchange={onchange}\r\n        editField={editField}\r\n        />\r\n    );\r\n    const getNum = (str) => {\r\n      if(typeof str === \"string\"){\r\n          var num;\r\n          if(str.indexOf(\",\") > -1){\r\n            var str_arr = str.split(\",\");\r\n            var tempStr = \"\";\r\n            str_arr.map((item) => {\r\n              tempStr += item;\r\n            })\r\n            num = parseFloat(tempStr)\r\n          }else{\r\n            num = parseFloat(str)\r\n          }\r\n          return num;\r\n      }else\r\n      {\r\n          return str;\r\n      }\r\n      \r\n    }\r\n    const enterEdit = (dataItem, field) => {\r\n        const newdata = data.map(item => ({\r\n                ...item,\r\n                inEdit: item.id === dataItem.id ? field : undefined\r\n            })\r\n        );\r\n            setData(newdata);\r\n            setEditField(field);\r\n    }\r\n    const onchange = (event) =>{\r\n      const idNumber = parseInt(event.target.props.id);\r\n      let changedValue;\r\n      if(typeof event.value === \"object\"){\r\n        changedValue = event.value.value;\r\n      }else{\r\n        changedValue = event.value;\r\n      }\r\n      const newData = data.map(item => (\r\n        item.id == idNumber ? { ...item, quantity: changedValue} : item\r\n      ))\r\n      asyncUpdate(newData);\r\n    }\r\n    async function asyncUpdate(nData) {\r\n      const resultData = await setData(nData)\r\n      core(resultData);\r\n    }\r\n    const core = (currentData) => {\r\n      const newdata = currentData.map(item => (\r\n        { ...item, inEdit: undefined }\r\n        ));\r\n        var sum = 0;\r\n        for(var i = 0;i < 21;i++)\r\n        {\r\n          newdata[i].sales_cash_price = parseFloat(newdata[i].sales_cash_price);\r\n          switch(newdata[i].scale){\r\n            case \"per watt add-on\":\r\n                if(newdata[i].quantity === \"Yes\") newdata[i].total =newdata[i].sales_cash_price * systemSize;\r\n                else newdata[i].total = 0;\r\n              break;\r\n            case \"Added price\":\r\n                if(newdata[i].quantity === \"Yes\") newdata[i].total =newdata[i].sales_cash_price;\r\n                else newdata[i].total = 0;\r\n              break;\r\n            case \"per foot\":\r\n                newdata[i].total = newdata[i].sales_cash_price * newdata[i].quantity;\r\n              break;\r\n            default:\r\n              newdata[i].total = newdata[i].sales_cash_price * newdata[i].quantity;\r\n              break;\r\n          }\r\n          sum += newdata[i].total;\r\n        }\r\n        newdata[22].total = sum;\r\n        setData(newdata);\r\n        setEditField(undefined);\r\n        // console.log(newdata)\r\n\r\n        var updateData = [];\r\n        newdata.map((item) => {\r\n            const {temp,inEdit,...ndata} = item;\r\n            updateData.push(ndata);\r\n        })\r\n        let uid = auth.refinfo.uid;\r\n        dispatch(updateAdders(uid,updateData));\r\n        // console.log(\"adders Document successfully update!\");\r\n\r\n        var newCalcData = {C18:sum.toString()};\r\n        dispatch(updateCalculatorRefAdder(uid,newCalcData));\r\n        // console.log(\"calculators Document successfully update!\");\r\n    } \r\n    const exitEdit = () => {\r\n      core(data)\r\n    }\r\n\r\n    const itemChange = (event) => {\r\n      event.dataItem[event.field] = event.value;\r\n        const newdata = data.map(item => {\r\n            return {...item}\r\n            }\r\n        );\r\n        setData(newdata);\r\n        setChanges(true);\r\n    }\r\n    const renderers =  new Renderers(enterEdit, exitEdit, 'inEdit');\r\n    // console.log(\"auth allow\",auth.info.profile,auth.info.profile.allow)\r\n    React.useEffect(() => {\r\n        if(auth.info.profile.allow){\r\n            setSystemSize(getNum(calculator.info.C10))\r\n            const newdata = adders.info.map(item => {\r\n            if(item.scale === \"per watt add-on\" || item.scale === \"Added price\"){\r\n              if(item.quantity === \"Yes\") return item;\r\n              else return {...item,quantity:\"No\"};\r\n            }else{\r\n              return item;\r\n            }\r\n          })\r\n          setData(newdata)\r\n          setLoading(false);\r\n        }else\r\n        {\r\n          handleNotificationCall();\r\n        }\r\n    }, [auth.info.profile.allow,adders.info,calculator.info.C10])\r\n      return(\r\n        <>\r\n            <ToastContainer \r\n                className={classes.toastsContainer}\r\n            />\r\n            {loading ?    \r\n            <section {...containerProps} style={{textAlign:\"center\",marginTop:window.innerHeight/2 - 100}}>\r\n                {indicatorEl} \r\n            </section> :\r\n            \r\n            <MaterialGrid item lg={12} md={12} sm={12} xs={12}>\r\n                <Widget title=\"ADDERS, BATTERIES AND INSURANCE PRICES\">\r\n                <Paper style={{}}>\r\n                    <Grid\r\n                        style={{ height: '900px' }}\r\n                        data={data}\r\n                        rowHeight={20}\r\n                        onItemChange={itemChange}\r\n\r\n                        cellRender={renderers.cellRender}\r\n                        rowRender={renderers.rowRender}\r\n                        navigatable={true}\r\n                        resizable={true}\r\n                        editField=\"inEdit\"\r\n                        >\r\n                        <Column field=\"id\" title=\"Id\" width=\"50px\" editable={false} auto locked={true} className=\"centerClass\"/>\r\n                        <Column title=\"Adders\"  field=\"adders\" width=\"250px\" className=\"centerClass\" />\r\n                        <Column title=\"Sales - Cash Price\"  field=\"sales_cash_price\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\" />\r\n                        <Column title=\"Scale\" editor=\"text\"  field=\"scale\" width=\"150px\" className=\"centerClass\" />\r\n                        {/* <Column title=\"Quantity\" field=\"quantity\" width=\"100px\" className=\"centerClass\" cell={(props) =><CustomCell {...props} quantityChange={quantityChange}/>}  /> */}\r\n                        <Column title=\"Quantity\" field=\"quantity\" width=\"100px\" className=\"centerClass\" cell={CommandCell}  />\r\n                        <Column title=\"Total\" field=\"total\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\" />\r\n                        <Column title=\"\" editor=\"text\" field=\"F\" className=\"centerClass\" />\r\n                        <Column title=\"\" editor=\"text\" field=\"G\" width=\"100px\" className=\"centerClass\"/>\r\n                        <Column title=\"\" editor=\"text\" field=\"H\" width=\"100px\" className=\"centerClass\"/>\r\n                    </Grid>\r\n                </Paper>\r\n                </Widget>\r\n            </MaterialGrid>\r\n            }\r\n        </>\r\n      )\r\n}\r\n// class CustomCell extends React.Component {\r\n//     constructor(props){\r\n//       super(props);\r\n//       this.state = {data:this.props.dataItem[this.props.field]};\r\n//     }\r\n//     localizedData = [\r\n//       { text: 'Yes', value: \"Yes\" },\r\n//       { text: 'No', value: \"No\" }\r\n//     ];\r\n//     handleChange(e) {\r\n//       if(e.target.value.value === undefined){\r\n//         this.setState({data:e.target.value})\r\n//         this.props.quantityChange(\r\n//           {\r\n//             dataItem: this.props.dataItem,\r\n//             field: this.props.field,\r\n//             syntheticEvent: e.syntheticEvent,\r\n//             value: e.target.value\r\n//           }\r\n//         );\r\n//       }else\r\n//       {\r\n//         this.setState({data:e.target.value.value})\r\n//         this.props.quantityChange(\r\n//           {\r\n//             dataItem: this.props.dataItem,\r\n//             field: this.props.field,\r\n//             syntheticEvent: e.syntheticEvent,\r\n//             value: e.target.value.value\r\n//           }\r\n//         );\r\n//       }\r\n//     }\r\n  \r\n//     render() {\r\n//       const dataValue = this.props.dataItem[this.props.field];\r\n//     //   console.log(\"dataValue\",dataValue,this.props.dataItem,this.props.field)\r\n  \r\n//       let defaultRendering = null;\r\n  \r\n//       if (!this.props.dataItem.inEdit || this.props.dataItem.inEdit !== this.props.field) {\r\n//         defaultRendering = (\r\n//           <td className=\"centerClass\">\r\n//             {!dataValue || dataValue === null ? '' : dataValue.toString()}\r\n//           </td>\r\n//         );\r\n//       } else {\r\n//         switch(this.props.dataItem.scale){\r\n//             case \"per watt add-on\":\r\n//                 defaultRendering = (\r\n//                     <td>\r\n//                         <DropDownList\r\n//                           style={{ width: \"100px\" }}\r\n//                           onChange={this.handleChange.bind(this)}\r\n//                           value={this.localizedData.find(c => c.value === dataValue)}\r\n//                           data={this.localizedData}\r\n//                           textField=\"text\"\r\n//                               />\r\n//                     </td>\r\n//                 );\r\n//              break;\r\n//             case \"Added price\":\r\n//                 defaultRendering = (\r\n//                   <td>\r\n//                     <DropDownList\r\n//                       style={{ width: \"100px\" }}\r\n//                       onChange={this.handleChange.bind(this)}\r\n//                       value={this.localizedData.find(c => c.value === dataValue)}\r\n//                       data={this.localizedData}\r\n//                       textField=\"text\"\r\n//                           />\r\n//                 </td>\r\n//                 );\r\n//              break;\r\n//             case \"per foot\":\r\n//                 defaultRendering = (\r\n//                     <td><input className=\"k-textbox\" defaultValue={dataValue} style={{width:'100%'}} onChange={this.handleChange.bind(this)}></input></td>\r\n//                 );\r\n//              break;\r\n//             default:\r\n//                 defaultRendering = (\r\n//                     <td><input className=\"k-textbox\" defaultValue={dataValue} style={{width:'100%'}} onChange={this.handleChange.bind(this)}></input></td>\r\n//                 );\r\n//              break;\r\n//         }\r\n        \r\n//       }\r\n  \r\n//       return this.props.render ?\r\n//         this.props.render.call(undefined, defaultRendering, this.props) :\r\n//         defaultRendering;\r\n//     }\r\n//   }","E:\\work\\firebase\\ProRMS\\src\\pages\\adders\\renderers.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\adders\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\adders\\customCell.js",["516"],"import React from \"react\";\r\nimport { DropDownList } from '@progress/kendo-react-dropdowns';\r\nimport { Input } from '@progress/kendo-react-inputs';\r\nexport const MyCustomCell = props => {\r\n  const { dataItem } = props;\r\n  const inEdit = dataItem[props.editField];\r\n  const localizedData = [\r\n    { text: 'Yes', value: \"Yes\" },\r\n    { text: 'No', value: \"No\" }\r\n  ];\r\n  const dataValue = dataItem[props.field];\r\n  // console.log(props)\r\n  if(dataItem.id === 22 || dataItem.id === 23){\r\n    return  (\r\n      <td className=\"k-command-cell\" style={{textAlign: \"center\"}}>\r\n        {dataItem.quantity}\r\n      </td>\r\n      )\r\n  }else{\r\n    return dataItem.scale === \"per watt add-on\" || dataItem.scale === \"Added price\"? (\r\n      <td className=\"k-command-cell\" style={{textAlign: \"center\",backgroundColor:\"#f4ff81\"}}>\r\n        <DropDownList\r\n            style={{ width: \"60px\" }}\r\n            id={dataItem.id.toString()}\r\n            onChange={props.onchange}\r\n            value={localizedData.find(c => c.value === dataValue)}\r\n            data={localizedData}\r\n            textField=\"text\"\r\n                />\r\n        \r\n      </td>\r\n    ) : (\r\n      <td className=\"k-command-cell\" style={{textAlign: \"center\",backgroundColor:\"#f4ff81\"}}>\r\n        <Input id={dataItem.id.toString()} defaultValue={dataItem.quantity} onChange={props.onchange} style={{width:60}}/>\r\n      </td>\r\n    );\r\n  }\r\n};","E:\\work\\firebase\\ProRMS\\src\\pages\\formulas\\index.js",["517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534"],"import React, { useContext,useEffect } from \"react\";\r\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\r\nimport { Renderers } from './renderers.js';\r\nimport {\r\n    Paper,\r\n    Grid as MaterialGrid,\r\n  } from '@material-ui/core';\r\n  import Widget from \"../../components/Widget/Widget\";\r\n  import { useLoading, ThreeDots} from '@agney/react-loading';\r\n  import \"./style.css\"\r\n\r\n  import { useSelector, useDispatch } from \"react-redux\";\r\n  import { FirebaseContext } from '../../redux';\r\nimport { core } from \"../core\";\r\n\r\n  var calcData = {};\r\n  export default function Formulas(){\r\n    const { api } = useContext(FirebaseContext);\r\n    const {\r\n        updateFormulas,\r\n      } = api;\r\n    const calculator = useSelector(state => state.calculator);\r\n    const formulas = useSelector(state => state.formulas);\r\n    const dispatch = useDispatch();\r\n\r\n    const { containerProps, indicatorEl } = useLoading({\r\n        loading: true,\r\n        indicator: <ThreeDots width=\"50\" />,\r\n      });\r\n    const [loading, setLoading] = React.useState(true);\r\n    const firebase = useContext(FirebaseContext);\r\n    const [data, setData] = React.useState([]);\r\n    const [editField, setEditField] = React.useState(undefined);\r\n    const [changes, setChanges] = React.useState(false);\r\n    \r\n    const enterEdit = (dataItem, field) => {\r\n        const newdata = data.map(item => ({\r\n                ...item,\r\n                inEdit: item.id === dataItem.id ? field : undefined\r\n            })\r\n        );\r\n            setData(newdata);\r\n            setEditField(field);\r\n    }\r\n\r\n    const exitEdit = () => {\r\n        // console.log(\"data\",data)\r\n        let newdata = data.map(item => (\r\n                { ...item, inEdit: undefined }\r\n            ));\r\n            var calculatorData = calculator.info;\r\n            var finaldata = core(newdata,calculatorData);\r\n            newdata = finaldata.formulas;\r\n            setData(newdata);\r\n            setEditField(undefined);\r\n            var updateData = [];\r\n                newdata.map((item) => {\r\n                    const {temp,inEdit,...ndata} = item;\r\n                    updateData.push(ndata);\r\n                });\r\n\r\n            dispatch(updateFormulas(updateData));\r\n    }\r\n\r\n    const itemChange = (event) => {\r\n        event.dataItem[event.field] = event.value;\r\n        const newdata = data.map(item => {\r\n            var temp = {};\r\n            var key = event.dataItem[event.field];\r\n            if(isNaN(event.value))\r\n            temp[key] = event.value;\r\n            else\r\n            temp[key] = parseFloat(event.value);\r\n            return {...item,temp};\r\n            }\r\n        );\r\n        setData(newdata);\r\n        setChanges(true);\r\n    }\r\n    const renderers =  new Renderers(enterEdit, exitEdit, 'inEdit');\r\n    React.useEffect(() => {\r\n            if(formulas.info.length === 0){\r\n                let initialData = [];\r\n                let tempRowData = {};\r\n                let key;\r\n                for(var i = 0;i < 15; i++){\r\n                    tempRowData = {};\r\n                    tempRowData.id = i+1;\r\n                    for(var j = 65;j < 91;j++){\r\n                        key = String.fromCharCode(j);\r\n                        tempRowData[key] = \"\";\r\n                    }\r\n                    tempRowData.AA = \"\";\r\n                    tempRowData.AB = \"\";\r\n                    initialData.push(tempRowData);\r\n                }\r\n                setData(initialData);\r\n                setLoading(false);\r\n            }else{\r\n                // console.log(\"changed\")\r\n                var formulasData = formulas.info;\r\n                var calculatorData = calculator.info;\r\n                var data = core(formulasData,calculatorData);\r\n                setData(data.formulas);\r\n                setLoading(false);\r\n            }\r\n      }, [\r\n          formulas.info[3].A,//Formulas A4\r\n          formulas.info[4].A,//Formulas A5\r\n          formulas.info[3].B,//Formulas B4\r\n          formulas.info[4].B,//Formulas B5\r\n          formulas.info[3].D,//Formulas D4\r\n          formulas.info[4].D,//Formulas D5\r\n          formulas.info[3].F,//Formulas F4\r\n          formulas.info[4].F,//Formulas F5\r\n          formulas.info[6].Z,//Formulas Z7\r\n          formulas.info[7].Z,//Formulas z8\r\n          formulas.info[8].Z,//Formulas z9\r\n          calculator.info\r\n        ])\r\n      return(\r\n        <>\r\n            {loading ?    \r\n            <section {...containerProps} style={{textAlign:\"center\",marginTop:window.innerHeight/2 - 100}}>\r\n                {indicatorEl} {/* renders only while loading */}\r\n            </section> :\r\n            <MaterialGrid item xs={12}>\r\n                <Widget title=\"Formulas\">\r\n                <Paper style={{}}>\r\n                    <Grid\r\n                        style={{ height: '760px' }}\r\n                        data={data}\r\n                        rowHeight={25}\r\n                        onItemChange={itemChange}\r\n\r\n                        cellRender={renderers.cellRender}\r\n                        rowRender={renderers.rowRender}\r\n                        resizable={true}\r\n                        editField=\"inEdit\"\r\n                        >\r\n                        <Column field=\"id\" title=\"\" width=\"50px\" editable={false} locked={true} className=\"centerClass\"  />\r\n                        <Column title=\"A\"  field=\"A\" width=\"100px\" className=\"centerClass\"  format=\"{0:c}\"/>\r\n                        <Column title=\"B\"  field=\"B\" width=\"150px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"C\"  field=\"C\" width=\"150px\" className=\"centerClass\" format=\"{0:#,0.0\\%}\"/>\r\n                        <Column title=\"D\"  field=\"D\" width=\"120px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"E\"  field=\"E\" width=\"120px\" className=\"centerClass\" format=\"{0:#,0.0\\%}\"/>\r\n                        <Column title=\"F\"  field=\"F\" width=\"100px\" className=\"centerClass\"/>\r\n                        <Column title=\"G\"  field=\"G\" width=\"100px\" className=\"centerClass\"/>\r\n                        <Column title=\"H\"  field=\"H\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"I\"  field=\"I\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"J\"  field=\"J\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"K\"  field=\"K\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"L\"  field=\"L\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"M\"  field=\"M\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"N\"  field=\"N\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"O\"  field=\"O\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"P\"  field=\"P\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"Q\"  field=\"Q\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"R\"  field=\"R\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"S\"  field=\"S\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"T\"  field=\"T\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"U\"  field=\"U\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"V\"  field=\"V\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"W\"  field=\"W\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"X\"  field=\"X\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"Y\"  field=\"Y\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"Z\"  field=\"Z\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"AA\"  field=\"AA\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                        <Column title=\"AB\"  field=\"AB\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\"/>\r\n                    </Grid>\r\n                </Paper>\r\n            </Widget>\r\n            </MaterialGrid>\r\n            }\r\n        </>\r\n      )\r\n}\r\n","E:\\work\\firebase\\ProRMS\\src\\pages\\formulas\\renderers.js",[],"E:\\work\\firebase\\ProRMS\\src\\redux\\actions\\formulasactions.js",["535"],"import {\r\n    FETCH_FORMULAS,\r\n    FETCH_FORMULAS_UPDATE,\r\n    FETCH_FORMULAS_SUCCESS,\r\n    FETCH_FORMULAS_FAILED,\r\n  } from \"../store/types\";\r\n\r\nexport const fetchFormulas = () => (dispatch) => async (firebase) => {\r\n    const {\r\n        formulasRef \r\n    } = firebase;\r\n  \r\n    dispatch({\r\n        type: FETCH_FORMULAS,\r\n        payload: null,\r\n    });\r\n    try{\r\n        formulasRef.on('value', snapshot => {\r\n            if(snapshot.val()){\r\n                dispatch({\r\n                    type: FETCH_FORMULAS_SUCCESS,\r\n                    payload: snapshot.val(),\r\n                });\r\n            }else{\r\n                dispatch({\r\n                    type: FETCH_FORMULAS_SUCCESS,\r\n                    payload: [],\r\n                });\r\n            }\r\n        })\r\n    }catch{\r\n        dispatch({\r\n            type: FETCH_FORMULAS_FAILED,\r\n            payload: \"During fetch the formulas, error be cause.\",\r\n        });\r\n    }\r\n\r\n}\r\nexport const updateFormulas = (data) => (dispatch) => (firebase) => {\r\n    const {\r\n        formulasRef \r\n    } = firebase;\r\n    dispatch({\r\n        type: FETCH_FORMULAS_SUCCESS,\r\n        payload: data,\r\n    });\r\n    formulasRef.update(data);\r\n}","E:\\work\\firebase\\ProRMS\\src\\redux\\reducers\\formulasreducer.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\core.js",["536"],"const getNum = (str) => {\r\n    if(typeof str === \"string\"){\r\n        var num;\r\n        if(str.indexOf(\",\") > -1){\r\n          var str_arr = str.split(\",\");\r\n          var tempStr = \"\";\r\n          str_arr.map((item) => {\r\n            tempStr += item;\r\n          })\r\n          num = parseFloat(tempStr)\r\n        }else{\r\n          num = parseFloat(str)\r\n        }\r\n        return num;\r\n    }else\r\n    {\r\n        return str;\r\n    }\r\n    \r\n  }\r\nconst cutDecimal = (data,limit,to) => {\r\n    let numstr;\r\n    let splitArray;\r\n    let result;\r\n    if(isNaN(data)){\r\n        return null\r\n    }else\r\n    {\r\n        if(typeof data === \"string\"){\r\n            numstr = data;\r\n        }else if(typeof data === \"number\"){\r\n            numstr = data.toString();\r\n        }else{\r\n            return data;\r\n        }\r\n        if(numstr.indexOf(\".\") > -1){\r\n            splitArray = numstr.split('.');\r\n            if(splitArray[1].length > limit){\r\n                result = Math.round(parseFloat(numstr)*Math.pow(10,limit))/Math.pow(10,limit);\r\n                return to === \"Number\" ? result: result.toString();\r\n            }else{\r\n                return to === \"Number\" ? parseFloat(numstr): numstr \r\n            }\r\n        }else{\r\n            return to === \"Number\" ? parseFloat(numstr):numstr;\r\n        }\r\n    }\r\n}\r\nexport const core = (formulasData,\r\n                    calculatorData,\r\n                    cashData = [],\r\n                    feeData = [],\r\n                    moduleData = [],\r\n                    batteryData = [],\r\n                    selfgenData = []) => {\r\n                         //formulas logic-------------------------------------------------------------------------------------------------------\r\n                        formulasData[3].A = parseFloat(formulasData[3].A);\r\n                        formulasData[4].A = parseFloat(formulasData[4].A);\r\n                        formulasData[3].B = parseFloat(formulasData[3].B);\r\n                        formulasData[4].B = parseFloat(formulasData[4].B);\r\n                        formulasData[3].D = parseFloat(formulasData[3].D);\r\n                        formulasData[4].D = parseFloat(formulasData[4].D);\r\n                        calculatorData.C10 = parseFloat(getNum(calculatorData.C10));\r\n                        calculatorData.C11 = parseFloat(getNum(calculatorData.C11));\r\n                        calculatorData.C15 = parseFloat(getNum(calculatorData.C15));\r\n                        calculatorData.C16 = parseFloat(getNum(calculatorData.C16));\r\n                        calculatorData.C17 = parseFloat(getNum(calculatorData.C17));\r\n                        calculatorData.C18 = parseFloat(getNum(calculatorData.C18));\r\n                        formulasData[3].C = formulasData[3].B / formulasData[3].A * 100;\r\n                        formulasData[3].C = cutDecimal(formulasData[3].C,2,\"Number\");\r\n                        formulasData[4].C = formulasData[4].B / formulasData[4].A * 100;\r\n                        formulasData[4].C = cutDecimal(formulasData[4].C,2,\"Number\");\r\n                        //E4=(D4+B4)/((A4/0.8))\r\n                        formulasData[3].E = (parseFloat(formulasData[3].D) + parseFloat(formulasData[3].B))/(formulasData[3].A/0.8) *100;\r\n                        formulasData[3].E = cutDecimal(formulasData[3].E,2,\"Number\");\r\n                        //E5=(D5+B5)/((A5/0.8))\r\n                        formulasData[4].E = (parseFloat(formulasData[4].D) + parseFloat(formulasData[4].B))/(formulasData[4].A/0.8) *100;\r\n                        formulasData[4].E = cutDecimal(formulasData[4].E,2,\"Number\");\r\n                        //H4,H5\r\n                        formulasData[3].H = calculatorData.C10;\r\n                        formulasData[3].H = cutDecimal(formulasData[3].H,2,\"Number\");\r\n                        formulasData[4].H = calculatorData.C10;\r\n                        formulasData[4].H = cutDecimal(formulasData[4].H,2,\"Number\");\r\n                        //I4,I5 I4 = A4;I5 = A5;\r\n                        formulasData[3].I = formulasData[3].A;\r\n                        formulasData[3].I = cutDecimal(formulasData[3].I,2,\"Number\");\r\n                        formulasData[4].I = formulasData[4].A;\r\n                        formulasData[4].I = cutDecimal(formulasData[4].I,2,\"Number\");\r\n                        //I6,I7 I6=I4/(1-CALCULATOR!$C$14) I7=I5/(1-CALCULATOR!$C$14)\r\n                        formulasData[5].I = formulasData[3].I / (1 - parseFloat(calculatorData.C14.split(\"%\"))/100);\r\n                        formulasData[5].I = cutDecimal(formulasData[5].I,2,\"Number\");\r\n                        formulasData[6].I = formulasData[4].I / (1 - parseFloat(calculatorData.C14.split(\"%\"))/100);\r\n                        formulasData[6].I = cutDecimal(formulasData[6].I,2,\"Number\");\r\n                        //K4=if(CALCULATOR!$C$8=\"Mission 345\",CALCULATOR!C11,0)\r\n                        if(calculatorData.C8 === \"Mission 345\") formulasData[3].K = calculatorData.C11;\r\n                        else formulasData[3].K = 0;\r\n                        formulasData[3].K = cutDecimal(formulasData[3].K,2,\"Number\");\r\n                        //K5=if(CALCULATOR!$C$8=\"REC 370\",CALCULATOR!$C$11,0)\r\n                        if(calculatorData.C8 === \"REC 370\") formulasData[4].K = calculatorData.C11;\r\n                        else formulasData[4].K = 0;\r\n                        formulasData[4].K = cutDecimal(formulasData[4].K,2,\"Number\");\r\n\r\n                        //L4=if(CALCULATOR!$C$8=\"Mission 345\",CALCULATOR!$C$15,0)\r\n                        if(calculatorData.C8 === \"Mission 345\") formulasData[3].L = calculatorData.C15;\r\n                        else formulasData[3].L = 0;\r\n                        formulasData[3].L = cutDecimal(formulasData[3].L,2,\"Number\");\r\n                        //L5=if(CALCULATOR!$C$8=\"REC 370\",CALCULATOR!$C$15,0)\r\n                        if(calculatorData.C8 === \"REC 370\") formulasData[4].L = calculatorData.C15;\r\n                        else formulasData[4].L = 0;\r\n                        formulasData[4].L = cutDecimal(formulasData[4].L,2,\"Number\");\r\n                        \r\n                        //M4=if(CALCULATOR!$C$8=\"Mission 345\",-CALCULATOR!$C$16,0)\r\n                        if(calculatorData.C8 === \"Mission 345\") formulasData[3].M = -calculatorData.C16;\r\n                        else formulasData[3].M = 0;\r\n                        formulasData[3].M = cutDecimal(formulasData[3].M,2,\"Number\");\r\n                        //M5=if(CALCULATOR!$C$8=\"REC 370\",-CALCULATOR!$C$16,0)\r\n                        if(calculatorData.C8 === \"REC 370\") formulasData[4].M = -calculatorData.C16;\r\n                        else formulasData[4].M = 0;\r\n                        formulasData[4].M = cutDecimal(formulasData[4].M,2,\"Number\");\r\n                        \r\n                        //N4=if(CALCULATOR!$C$8=\"Mission 345\",-CALCULATOR!$C$17,0)\r\n                        if(calculatorData.C8 === \"Mission 345\") formulasData[3].N = -calculatorData.C17;\r\n                        else formulasData[3].N = 0;\r\n                        formulasData[3].N = cutDecimal(formulasData[3].N,2,\"Number\");\r\n                        //N5=if(CALCULATOR!$C$8=\"REC 370\",-CALCULATOR!$C$17,0)\r\n                        if(calculatorData.C8 === \"REC 370\") formulasData[4].N = -calculatorData.C17;\r\n                        else formulasData[4].N = 0;\r\n                        formulasData[4].N = cutDecimal(formulasData[4].N,2,\"Number\");\r\n                        \r\n                        //O4=if(CALCULATOR!$C$8=\"Mission 345\",-CALCULATOR!$C$18,0)\r\n                        if(calculatorData.C8 === \"Mission 345\") formulasData[3].O = -calculatorData.C18;\r\n                        else formulasData[3].O = 0;\r\n                        // console.log(\"C18\",calculatorData.C18,formulasData[3].O)\r\n                        formulasData[3].O = cutDecimal(formulasData[3].O,2,\"Number\");\r\n                        //O5=if(CALCULATOR!$C$8=\"REC 370\",-CALCULATOR!$C$18,0)\r\n                        if(calculatorData.C8 === \"REC 370\") formulasData[4].O = -calculatorData.C18;\r\n                        else formulasData[4].O = 0;\r\n                        formulasData[4].O = cutDecimal(formulasData[4].O,2,\"Number\");\r\n                        //Q4=sum(L4:O4)\r\n                        formulasData[3].Q = (parseFloat(getNum(formulasData[3].L))+parseFloat(getNum(formulasData[3].M))+parseFloat(getNum(formulasData[3].N))+parseFloat(getNum(formulasData[3].O)));\r\n                        formulasData[3].Q = cutDecimal(formulasData[3].Q,2,\"Number\");\r\n                        //Q5=sum(L5:O5)\r\n                        formulasData[4].Q = (parseFloat(getNum(formulasData[4].L))+parseFloat(getNum(formulasData[4].M))+parseFloat(getNum(formulasData[4].N))+parseFloat(getNum(formulasData[4].O)));\r\n                        formulasData[4].Q = cutDecimal(formulasData[4].Q,2,\"Number\");\r\n                        //S4=IF(Q4>0,Q4/H4,0)\r\n                        if(parseFloat(getNum(formulasData[3].Q)) > 0) formulasData[3].S = (parseFloat(getNum(formulasData[3].Q))/parseFloat(getNum(formulasData[3].H)));\r\n                        else formulasData[3].S = 0;\r\n                        formulasData[3].S = cutDecimal(formulasData[3].S,2,\"Number\");\r\n                        //S5=IF(Q5>0,Q5/H5,0)\r\n                        if(parseFloat(getNum(formulasData[4].Q)) > 0) formulasData[4].S = (parseFloat(getNum(formulasData[4].Q))/parseFloat(getNum(formulasData[4].H)));\r\n                        else formulasData[4].S = 0;\r\n                        formulasData[4].S = cutDecimal(formulasData[4].S,2,\"Number\");\r\n                        //S8=IF(S4<I4,\"REFUSED\",\"ACCEPTED\")\r\n                        if(parseFloat(getNum(formulasData[3].S)) < parseFloat(getNum(formulasData[3].I))) formulasData[7].S = \"REFUSED\";\r\n                        else formulasData[7].S = \"ACCEPTED\";\r\n                        //S9=IF(S5<I5,\"REFUSED\",\"ACCEPTED\")\r\n                        if(parseFloat(getNum(formulasData[4].S)) < parseFloat(getNum(formulasData[4].I))) formulasData[8].S = \"REFUSED\";\r\n                        else formulasData[8].S = \"ACCEPTED\";\r\n                        //T4=IF(S4>I4,S4-I4,0)\r\n                        if(parseFloat(getNum(formulasData[3].S)) > parseFloat(getNum(formulasData[3].I))) formulasData[3].T = (parseFloat(getNum(formulasData[3].S)) - parseFloat(getNum(formulasData[3].I)));\r\n                        else formulasData[3].T = 0;\r\n                        formulasData[3].T = cutDecimal(formulasData[3].T,2,\"Number\");\r\n                        //T5=IF(S5>0,S5-I5,0)\r\n                        if(parseFloat(getNum(formulasData[4].S)) > parseFloat(getNum(formulasData[4].I))) formulasData[4].T = (parseFloat(getNum(formulasData[4].S)) - parseFloat(getNum(formulasData[4].I)));\r\n                        else formulasData[4].T = 0;\r\n                        formulasData[4].T = cutDecimal(formulasData[4].T,2,\"Number\");\r\n                        //U4=IF(T4>=0,IF(CALCULATOR!$C$6=\"Bronze\",T4*$Z$7,IF(CALCULATOR!$C$6=\"Silver\",T4*$Z$8,T4*$Z$9)))\r\n                        if(parseFloat(getNum(formulasData[3].T)) >=0){\r\n                            if(calculatorData.C6 === \"Bronze\") formulasData[3].U =(parseFloat(getNum(formulasData[3].T))*parseFloat(formulasData[6].Z.split(\"%\")[0])/100);\r\n                            else{\r\n                                if(calculatorData.C6 === \"Silver\") formulasData[3].U =(parseFloat(getNum(formulasData[3].T))*parseFloat(formulasData[7].Z.split(\"%\")[0])/100);\r\n                                else formulasData[3].U =(parseFloat(getNum(formulasData[3].T))*parseFloat(formulasData[8].Z.split(\"%\")[0])/100);\r\n                            }\r\n                        }\r\n                        formulasData[3].U = cutDecimal(formulasData[3].U,2,\"Number\");\r\n                        //U5=IF(T5>=0,IF(CALCULATOR!$C$6=\"Bronze\",T5*$Z$7,IF(CALCULATOR!$C$6=\"Silver\",T5*$Z$8,T5*$Z$9)))\r\n                        if(parseFloat(getNum(formulasData[4].T)) >=0){\r\n                            if(calculatorData.C6 === \"Bronze\") formulasData[4].U =(parseFloat(getNum(formulasData[4].T))*parseFloat(formulasData[6].Z.split(\"%\")[0])/100);\r\n                            else{\r\n                                if(calculatorData.C6 === \"Silver\") formulasData[4].U =(parseFloat(getNum(formulasData[4].T))*parseFloat(formulasData[7].Z.split(\"%\")[0])/100);\r\n                                else formulasData[4].U =(parseFloat(getNum(formulasData[4].T))*parseFloat(formulasData[8].Z.split(\"%\")[0])/100);\r\n                            }\r\n                        }\r\n                        formulasData[4].U = cutDecimal(formulasData[4].U,2,\"Number\");\r\n                        //V4=IF(+S4>=I4,B4*H4,0)\r\n                        if(parseFloat(getNum(formulasData[3].S)) >= parseFloat(getNum(formulasData[3].I))) formulasData[3].V = ((parseFloat(getNum(formulasData[3].B)))*(parseFloat(getNum(formulasData[3].H))));\r\n                        else formulasData[3].V = 0;\r\n                        formulasData[3].V = cutDecimal(formulasData[3].V,2,\"Number\");\r\n                        //V5=IF(S5>I5,B5*H5,0)\r\n                        if(parseFloat(getNum(formulasData[4].S)) > parseFloat(getNum(formulasData[4].I))) formulasData[4].V = ((parseFloat(getNum(formulasData[4].B)))*(parseFloat(getNum(formulasData[4].H))));\r\n                        else formulasData[4].V = 0;\r\n                        formulasData[4].V = cutDecimal(formulasData[4].V,2,\"Number\");\r\n                        //Y4=IF(CALCULATOR!$C$7=\"Self\",D4*H4,0)\r\n                        if(calculatorData.C7 === \"Self\") formulasData[3].Y = ((parseFloat(getNum(formulasData[3].D)))*(parseFloat(getNum(formulasData[3].H))));\r\n                        else formulasData[3].Y = 0;\r\n                        formulasData[3].Y = cutDecimal(formulasData[3].Y,2,\"Number\");\r\n                        //Y5=IF(CALCULATOR!$C$7=\"Self\",D5*H5,0)\r\n                        if(calculatorData.C7 === \"Self\") formulasData[4].Y = ((parseFloat(getNum(formulasData[4].D)))*(parseFloat(getNum(formulasData[4].H))));\r\n                        else formulasData[4].Y = 0;\r\n                        formulasData[4].Y = cutDecimal(formulasData[4].Y,2,\"Number\");\r\n                        //Z4=U4*H4\r\n                        formulasData[3].Z = ((parseFloat(getNum(formulasData[3].U)))*(parseFloat(getNum(formulasData[3].H))));\r\n                        formulasData[3].Z = cutDecimal(formulasData[3].Z,2,\"Number\");\r\n                        //Z5=U5*H5\r\n                        formulasData[4].Z = ((parseFloat(getNum(formulasData[4].U)))*(parseFloat(getNum(formulasData[4].H))));\r\n                        formulasData[4].Z = cutDecimal(formulasData[4].Z,2,\"Number\");\r\n                        //AA4=sum(V4:Z4)\r\n                        formulasData[3].AA = ((parseFloat(getNum(formulasData[3].V)))+(parseFloat(getNum(formulasData[3].Y)))+(parseFloat(getNum(formulasData[3].Z))));\r\n                        formulasData[3].AA = cutDecimal(formulasData[3].AA,2,\"Number\");\r\n                        //AA5=sum(V5:Z5)\r\n                        formulasData[4].AA = ((parseFloat(getNum(formulasData[4].V)))+(parseFloat(getNum(formulasData[4].Y)))+(parseFloat(getNum(formulasData[4].Z))));\r\n                        formulasData[4].AA = cutDecimal(formulasData[4].AA,2,\"Number\");\r\n                        \r\n                        ////////////////-----calculator F data-------//////////////////////////////\r\n                        //F14=IF(C8=\"Mission 345\",Formulas!$T$4,Formulas!$T$5)\r\n                        if(calculatorData.C8 === \"Mission 345\") calculatorData.F14 = (formulasData[3].T).toString();\r\n                        else calculatorData.F14 = (formulasData[4].T).toString();\r\n                        //F15=IF(C8=\"Mission 345\",Formulas!$U$4,Formulas!$U$5)\r\n                        if(calculatorData.C8 === \"Mission 345\") calculatorData.F15 = (formulasData[3].U).toString();\r\n                        else calculatorData.F15 = (formulasData[4].U).toString();\r\n                        //F17=IF($C$8=\"Mission 345\",Formulas!$V$4,Formulas!$V$5)\r\n                        if(calculatorData.C8 === \"Mission 345\") calculatorData.F17 = (formulasData[3].V).toString();\r\n                        else calculatorData.F17 = (formulasData[4].V).toString();\r\n                        //FSelfGen=IF($C$8=\"Mission 345\",Formulas!$V$4+Formulas!$Y$4,Formulas!$V$5+Formulas!$Y$5)\r\n                        if(calculatorData.C8 === \"Mission 345\") calculatorData.FSelfGen = (formulasData[3].Y).toString();\r\n                        else calculatorData.FSelfGen = (formulasData[4].Y).toString();\r\n                        //F18=IF($C$8=\"Mission 345\",Formulas!$Z$4,Formulas!$Z$5)\r\n                        if(calculatorData.C8 === \"Mission 345\") calculatorData.F18 = (formulasData[3].Z).toString();\r\n                        else calculatorData.F18 = (formulasData[4].Z).toString();\r\n                        //F19=IF($C$9=\"None\",0,500)\r\n                        if(calculatorData.C9 === \"None\") calculatorData.F19 = \"0\";\r\n                        else calculatorData.F19 = \"500\";\r\n                        //F20=sum(F17:F19)\r\n                        calculatorData.F20 = (Math.round((parseFloat(getNum(calculatorData.F17))+parseFloat(getNum(calculatorData.FSelfGen))+parseFloat(getNum(calculatorData.F18))+parseFloat(getNum(calculatorData.F19)))*100)/100).toString();\r\n                       \r\n                        //C21=IF(C8=\"Mission 345\",Formulas!S8,Formulas!S9)\r\n                        if(calculatorData.C8 === \"Mission 345\") calculatorData.C21 = formulasData[7].S;\r\n                        else calculatorData.C21 = formulasData[8].S;\r\n\r\n                        let data = {};\r\n                        data.formulas = formulasData;\r\n                        data.calculator = calculatorData;\r\n                        return data;\r\n}","E:\\work\\firebase\\ProRMS\\src\\pages\\calculator\\index.js",["537","538","539","540","541","542","543","544","545","546","547","548","549","550"],"import React, { useContext,useEffect } from \"react\";\r\n// import { Form, Field } from 'react-final-form';\r\nimport {\r\n  Select,\r\n  TextField,\r\n  Paper,\r\n  Grid,\r\n  MenuItem,\r\n} from '@material-ui/core';\r\nimport { useLoading, ThreeDots} from '@agney/react-loading';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport NumberFormat from 'react-number-format';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport $ from \"jquery\";\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\n\r\nimport Notification from \"../../components/Notification\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\n  // styles\r\n  import \"react-toastify/dist/ReactToastify.css\";\r\n  import useToastStyles from \"./styles\";\r\n\r\n  import { useSelector, useDispatch } from \"react-redux\";\r\n  import { FirebaseContext } from '../../redux';\r\n  import { core } from \"../core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableOverflow: {\r\n    overflow: 'auto'\r\n  }\r\n}));\r\nvar cnt = 0;\r\nvar timeid;\r\nvar CC3,CC4,CC5,CC6,CC7,CC8,CC9,CC10,\r\n    CC11,CC12,CC13,CC14,CC15,CC16,CC17,\r\n    CC18,CC19,CC20,CC21\r\n    ,FF14,FF15,FF17,FF18,FF19,FF20,FFSelfGen;\r\nexport default function Calculator() {\r\n  const { api } = useContext(FirebaseContext);\r\n  const {\r\n    updateCalculator,\r\n    updateAdders\r\n  } = api;\r\n  const auth = useSelector(state => state.auth);\r\n  const calculator = useSelector(state => state.calculator);\r\n  const adders = useSelector(state => state.adders);\r\n  const formulas = useSelector(state => state.formulas);\r\n  const cash = useSelector(state => state.cash);\r\n  const selfgen = useSelector(state => state.selfgen);\r\n  const battery = useSelector(state => state.battery);\r\n  const fee = useSelector(state => state.fee);\r\n  const modules = useSelector(state => state.modules);\r\n  const dispatch = useDispatch();\r\n\r\n  var toastClasses = useToastStyles();\r\n  const { containerProps, indicatorEl } = useLoading({\r\n    loading: true,\r\n    indicator: <ThreeDots width=\"50\" />,\r\n  });\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [C3, setC3] = React.useState('');\r\n  const [C4, setC4] = React.useState('');\r\n  const [C5, setC5] = React.useState('');\r\n  const [C6, setC6] = React.useState('');\r\n  const [C7, setC7] = React.useState('');\r\n  const [C8, setC8] = React.useState('');\r\n  const [C9, setC9] = React.useState('');\r\n  const [C10, setC10] = React.useState('');\r\n  const [C11, setC11] = React.useState('');\r\n  const [C12, setC12] = React.useState('');\r\n  const [C13, setC13] = React.useState('');\r\n  const [C14, setC14] = React.useState('');\r\n  const [C15, setC15] = React.useState('');\r\n  const [C16, setC16] = React.useState('');\r\n  const [C17, setC17] = React.useState('');\r\n  const [C18, setC18] = React.useState('');\r\n  const [C19, setC19] = React.useState('');\r\n  const [C20, setC20] = React.useState('');\r\n  const [C21, setC21] = React.useState('');\r\n  const [F14, setF14] = React.useState('');\r\n  const [F15, setF15] = React.useState('');\r\n  const [F17, setF17] = React.useState('');\r\n  const [F18, setF18] = React.useState('');\r\n  const [F19, setF19] = React.useState('');\r\n  const [F20, setF20] = React.useState('');\r\n  const [FSelfGen, setFSelfGen] = React.useState('');\r\n  const [dealerFee, setDealerFee] = React.useState([]);\r\n  const [ccash, setCash] = React.useState([]);\r\n  const [bbattery, setBattery] = React.useState([]);\r\n  const [mmodule, setModule] = React.useState([]);\r\n  const [selfgen_lead, setSelfgenLead] = React.useState([]);\r\n\r\n      //#####################################toast########################################################\r\n      const sendNotification = (componentProps, options) => {\r\n        return toast(\r\n        <Notification\r\n            {...componentProps}\r\n            className={toastClasses.notificationComponent}\r\n        />,\r\n        options,\r\n        );\r\n    }\r\n    const handleNotificationCall = () => {\r\n        var componentProps;\r\n            componentProps = {\r\n              type: \"feedback\",\r\n              message: `You do not have permission to use it yet.\r\n                        Please contact your administrator`,\r\n              variant: \"contained\",\r\n              color: \"secondary\",\r\n            };\r\n            \r\n        var toastId = sendNotification(componentProps, {\r\n          type: \"error\",\r\n          position:  toast.POSITION.TOP_CENTER,\r\n          progressClassName: toastClasses.progress,\r\n          className: toastClasses.notification,\r\n        });\r\n    }\r\n    const CloseButton = ({ closeToast, className }) => {\r\n        return <CloseIcon className={className} onClick={closeToast} />;\r\n        }\r\n          \r\n    //#####################################toast########################################################\r\n\r\n   const handleChange = async function(event){\r\n    switch(event.target.name){\r\n      case \"C7\":\r\n        setC7(event.target.value);\r\n        CC7 = event.target.value;\r\n      break;\r\n      case \"C8\":\r\n        setC8(event.target.value);\r\n        CC8 = event.target.value;\r\n      break;\r\n      case \"C9\":\r\n        setC9(event.target.value);\r\n        CC9 = event.target.value;\r\n      break;\r\n      case \"C12\":\r\n        setC12(event.target.value);\r\n        if(event.target.value.indexOf('$') > -1){\r\n          CC12 = event.target.value.split('$')[1];\r\n        }else{\r\n          CC12 = event.target.value;\r\n        }\r\n      break;\r\n      case \"C14\":\r\n        setC14(event.target.value);\r\n        CC14 = event.target.value;\r\n      break;\r\n      case \"C10\":\r\n        setC10(event.target.value);\r\n        CC10 = event.target.value;\r\n        calcAdders(CC10);\r\n      break;\r\n      case \"C11\":\r\n        setC11(event.target.value);\r\n        CC11 = event.target.value;\r\n      break;\r\n    }\r\n    calc();\r\n  };\r\n  const getNum = (str) => {\r\n    if(typeof str === \"string\"){\r\n        var num;\r\n        if(str.indexOf(\",\") > -1){\r\n          var str_arr = str.split(\",\");\r\n          var tempStr = \"\";\r\n          str_arr.map((item) => {\r\n            tempStr += item;\r\n          })\r\n          num = parseFloat(tempStr)\r\n        }else{\r\n          num = parseFloat(str)\r\n        }\r\n        return num;\r\n    }else\r\n    {\r\n        return str;\r\n    }\r\n  }\r\n  const calcAdders = (sysSize) => {\r\n    let addersData =  adders.info;\r\n    let systemSize = getNum(sysSize);\r\n    var sum = 0;\r\n        for(var i = 0;i < 21;i++)\r\n        {\r\n          addersData[i].sales_cash_price = parseFloat(addersData[i].sales_cash_price);\r\n          switch(addersData[i].scale){\r\n            case \"per watt add-on\":\r\n                if(addersData[i].quantity === \"Yes\") addersData[i].total =addersData[i].sales_cash_price * systemSize;\r\n                else addersData[i].total = 0;\r\n              break;\r\n            case \"Added price\":\r\n                if(addersData[i].quantity === \"Yes\") addersData[i].total =addersData[i].sales_cash_price;\r\n                else addersData[i].total = 0;\r\n              break;\r\n            case \"per foot\":\r\n                addersData[i].total = addersData[i].sales_cash_price * addersData[i].quantity;\r\n              break;\r\n            default:\r\n              addersData[i].total = addersData[i].sales_cash_price * addersData[i].quantity;\r\n              break;\r\n          }\r\n          sum += addersData[i].total;\r\n        }\r\n        addersData[22].total = sum;\r\n        CC18 = sum;\r\n        setC18(sum);\r\n        let uid = auth.refinfo.uid;\r\n        dispatch(updateAdders(uid,addersData));\r\n  }\r\n  React.useEffect(() => {\r\n    if(auth.info.profile.allow){\r\n      // style();\r\n      let calcData = calculator.info;\r\n      \r\n      let feeData = fee.info;\r\n      feeData.sort(function(a, b){return a.Fee - b.Fee});\r\n      setDealerFee(feeData);\r\n     \r\n      let cashData = cash.info;\r\n      cashData.sort(function(a, b){return a.cash - b.cash});\r\n      setCash(cashData);\r\n      \r\n      let batteryData = battery.info;\r\n      batteryData.sort(function(a, b){return a.ID - b.ID});\r\n      setBattery(batteryData);\r\n     \r\n      let modulesData = modules.info;\r\n      modulesData.sort(function(a, b){return a.ID - b.ID});\r\n      setModule(modulesData);\r\n      \r\n      let selfgenData = selfgen.info;\r\n      selfgenData.sort(function(a, b){return a.ID - b.ID});\r\n      setSelfgenLead(selfgenData);\r\n\r\n      var formulasData = formulas.info;\r\n      var data = core(formulasData,calcData);\r\n\r\n      calcData = data.calculator;\r\n\r\n      setC3(calcData.C3);CC3 = calcData.C3;\r\n      setC4(calcData.C4);CC4 = calcData.C4;\r\n      setC5(calcData.C5);CC5 = calcData.C5;\r\n      setC6(calcData.C6);CC6 = calcData.C6;\r\n      setC7(calcData.C7);CC7 = calcData.C7;\r\n      setC8(calcData.C8);CC8 = calcData.C8;\r\n      setC9(calcData.C9);CC9 = calcData.C9;\r\n      setC10(calcData.C10);CC10 = calcData.C10;\r\n      setC11(calcData.C11);CC11 = calcData.C11;\r\n      setC12(\"$\" + calcData.C12);CC12 = calcData.C12;\r\n      setC13(calcData.C13);CC13 = calcData.C13;\r\n      setC14(calcData.C14);CC14 = calcData.C14;\r\n      setC15(calcData.C15);CC15 = calcData.C15;\r\n      setC16(calcData.C16);CC16 = calcData.C16;\r\n      setC17(calcData.C17);CC17 = calcData.C17;\r\n      setC18(calcData.C18);CC18 = calcData.C18;\r\n      setC19(calcData.C19);CC19 = calcData.C19;\r\n      setC20(calcData.C20);CC20 = calcData.C20;\r\n      setC21(calcData.C21);CC21 = calcData.C21;\r\n      setF20(calcData.F20);FF20 = calcData.F20;\r\n      setF19(calcData.F19);FF19 = calcData.F19;\r\n      setF18(calcData.F18);FF18 = calcData.F18;\r\n      setF17(calcData.F17);FF17 = calcData.F17;\r\n      setF15(calcData.F15);FF15 = calcData.F15;\r\n      setF14(calcData.F14);FF14 = calcData.F14;\r\n      setFSelfGen(calcData.FSelfGen);FFSelfGen = calcData.FSelfGen;\r\n      // console.log(\"useeffect\")\r\n      \r\n      setLoading(false);\r\n      timeid = setTimeout(() => {\r\n        style()\r\n      }, 10);\r\n    }else{\r\n      setLoading(true);\r\n      if(cnt === 0){\r\n        handleNotificationCall();\r\n        cnt++;\r\n      }\r\n    }\r\n  }, [\r\n    auth.info.profile,\r\n    calculator.info,\r\n    adders.info,\r\n    formulas.info,\r\n    cash.info,\r\n    selfgen.info,\r\n    battery.info,\r\n    fee.info,\r\n    modules.info])\r\nconst style = () => {\r\n  //------------------------------------------------------------jquery style--------------------------------------------------\r\n  $(\"#C3\").css({\"color\":\"black\"});\r\n  $(\"#C3\").css({\"text-align\":\"center\"});\r\n  $(\"#C4\").css({\"color\":\"black\"});\r\n  $(\"#C4\").css({\"text-align\":\"center\"});\r\n  $(\"#C10\").css({\"color\":\"black\"});\r\n  // $(\"#C10\").css({\"width\":\"10%\"});\r\n  $(\"#C10\").css({\"text-align\":\"center\"});\r\n  $(\"#C11\").css({\"color\":\"black\"});\r\n  $(\"#C11\").css({\"text-align\":\"center\"});\r\n  $(\"#C13\").css({\"color\":\"black\"});\r\n  $(\"#C13\").css({\"text-align\":\"center\"});\r\n  $(\"#C15\").css({\"color\":\"black\"});\r\n  $(\"#C15\").css({\"text-align\":\"center\"});\r\n  $(\"#C16\").css({\"color\":\"black\"});\r\n  $(\"#C16\").css({\"text-align\":\"center\"});\r\n  $(\"#C17\").css({\"color\":\"black\"});\r\n  $(\"#C17\").css({\"text-align\":\"center\"});\r\n  $(\"#C18\").css({\"color\":\"black\"});\r\n  $(\"#C18\").css({\"text-align\":\"center\"});\r\n  $(\"#C19\").css({\"color\":\"black\"});\r\n  $(\"#C19\").css({\"text-align\":\"center\"});\r\n  $(\"#C20\").css({\"color\":\"black\"});\r\n  $(\"#C20\").css({\"text-align\":\"center\"});\r\n  $(\"#C21\").css({\"color\":\"black\"});\r\n  $(\"#C21\").css({\"text-align\":\"center\"});\r\n  $(\"#F14\").css({\"color\":\"black\"});\r\n  $(\"#F14\").css({\"text-align\":\"center\"});\r\n  $(\"#F15\").css({\"color\":\"black\"});\r\n  $(\"#F15\").css({\"text-align\":\"center\"});\r\n  $(\"#F17\").css({\"color\":\"black\"});\r\n  $(\"#F17\").css({\"text-align\":\"center\"});\r\n  $(\"#FSelfGen\").css({\"color\":\"black\"});\r\n  $(\"#FSelfGen\").css({\"text-align\":\"center\"});\r\n  $(\"#F18\").css({\"color\":\"black\"});\r\n  $(\"#F18\").css({\"text-align\":\"center\"});\r\n  $(\"#F19\").css({\"color\":\"black\"});\r\n  $(\"#F19\").css({\"text-align\":\"center\"});\r\n  $(\"#F20\").css({\"color\":\"black\"});\r\n  $(\"#F20\").css({\"text-align\":\"center\"});\r\n  // console.log(\"timeid\",timeid)\r\n  clearTimeout(timeid)\r\n  //------------------------------------------------------------style end------------------------------------------------------\r\n}\r\nconst calc = () => {\r\n   // console.log(C3,C4,C5,C6,C7,C8,C9,C10,C11,C12,C13,\"C14\",C14,C15,C16,C17,C18,C19,C20,C21,F14,F15,F17,F18,F19,F20)\r\n   // console.log(\"useeffect\")\r\n   \r\n   CC3 = C3;\r\n   CC4 = C4;\r\n\r\n   CC10 = parseFloat(getNum(CC10));\r\n   CC11 = parseFloat(getNum(CC11));\r\n   CC12 = parseFloat(CC12);\r\n   // console.log(CC12)\r\n   CC13 = CC11-CC12;\r\n   setC13(CC13);\r\n   //C15=C13-(C13*C14)\r\n   var percent = CC14.split(\"%\")[0]/100;\r\n   CC15 = (CC11-CC12) - (CC11-CC12)*percent;\r\n   setC15(CC15)\r\n   //C16=0.11*C10\r\n   CC16 = CC10*0.11;\r\n   setC16(CC16);\r\n   //C17=If($C$9=\"Enphase 3kw\",+#REF!,IF($C$9=\"Enphase 10kw\",+#REF!,IF($C$9=\"Panasonic 11kw\",+#REF!,IF(C9=\"Panasonic 17kw\",+#REF!,0 ))))\r\n   if(CC9 === \"Enphase 3kw\") { CC17 = \"#REF\" }\r\n   else{\r\n     if(CC9 === \"Enphase 10kw\") { CC17 = \"#REF\" }\r\n     else{\r\n       if(CC9 === \"Panasonic 11kw\") { CC17 = \"#REF\" }\r\n       else{\r\n         if(CC9 === \"Panasonic 17kw\") { CC17 = \"#REF\" }\r\n         else { CC17 = \"0\" }\r\n       }\r\n     }\r\n   }\r\n   setC17(CC17);\r\n   //C18\r\n   // console.log(\"C18\",C18,C10)\r\n   if(CC18 === \"\") CC18 = \"0\";\r\n   // setC18(\"0\");\r\n   //C19=C15-C16-C17-C18\r\n   console.log(\"CC18\",CC18)\r\n   CC19 = Math.round((CC15-CC16-CC17-CC18)*100)/100\r\n   setC19(CC19);\r\n   //C20=C19/C10\r\n   CC20 = Math.round(CC19/parseFloat(getNum(CC10))*100)/100\r\n   setC20(CC20);\r\n \r\n   var calcObj = {\r\n    C3:CC3 || \"\",\r\n    C4:CC4 || \"\",\r\n    C5:CC5 || \"\",\r\n    C6:CC6 || \"\",\r\n    C7:CC7 || \"\",\r\n    C8:CC8 || \"\",\r\n    C9:CC9 || \"\",\r\n    C10:CC10 || 0,\r\n    C11:CC11 || 0,\r\n    C12:CC12 || 0,\r\n    C13:CC13 || 0,\r\n    C14:CC14 || 0,\r\n    C15:CC15 || 0,\r\n    C16:CC16 || 0,\r\n    C17:CC17 || 0,\r\n    C18:CC18 || 0,\r\n    C19:CC19 || 0,\r\n    C20:CC20 || 0,\r\n    C21:CC21 || \"\",\r\n   }\r\n   var formulasData = formulas.info;\r\n   var data = core(formulasData,calcObj);\r\n   calcObj = data.calculator;\r\n   let uid = auth.refinfo.uid;\r\n   dispatch(updateCalculator(uid,calcObj));\r\n    // console.log(\"calc Document successfully update!\");\r\n}\r\nreturn(\r\n  <>\r\n  <ToastContainer \r\n                className={toastClasses.toastsContainer}\r\n            />\r\n  {loading ?    \r\n    <section {...containerProps} style={{textAlign:\"center\",marginTop:window.innerHeight/2 - 100}}>\r\n      {indicatorEl} {/* renders only while loading */}\r\n    </section> :\r\n          <Grid container spacing={4}>\r\n             <Grid item lg={12} md={12} sm={12} xs={12} style={{textAlign:\"center\"}}>\r\n                <Fab variant=\"extended\" color=\"primary\" aria-label=\"add\" style={{textTransform: \"inherit\",marginRight:10}}>\r\n                  Rep Name   :   {C5}\r\n                </Fab>\r\n\r\n                <Fab variant=\"extended\" color=\"secondary\" aria-label=\"add\"  style={{textTransform: \"inherit\"}}>\r\n                  Rep Status   :   {C6}\r\n                </Fab>                   \r\n             </Grid>\r\n        <Grid item lg={7} md={6} sm={12} xs={12}>\r\n          <Widget title=\"YOUR COMMISSION Calculator\" >\r\n            <Paper style={{ paddingLeft: '4%',paddingRight: '4%' }}>\r\n              <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\",marginTop: 30}}>\r\n                    System Number\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\"}}>\r\n                  <TextField \r\n                    name=\"C3\" \r\n                    id=\"C3\" \r\n                    label=\"\" \r\n                    value={C3} \r\n                    // onBlur={handleBlur}\r\n                    onChange={(event) => {setC3(event.target.value);}}\r\n                    style={{textAlign: \"center\",marginTop: 15,backgroundColor:\"rgb(229 255 14)\",width: \"75%\",color:\"black\"}} />\r\n                </Grid>\r\n                <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                    Name of Customer\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\"}}>\r\n                  <TextField name=\"C4\" id=\"C4\" label=\"\" value={C4} onChange={(event) => {setC4(event.target.value);}} style={{textAlign: \"center\",marginTop: -12,backgroundColor:\"rgb(229 255 14)\",width: \"75%\"}} />\r\n                </Grid>\r\n                {/* <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                    Select Sales Rep\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -15}}>\r\n                  <Select\r\n                    labelId=\"C5\"\r\n                    name=\"C5\"\r\n                    id=\"C5\"\r\n                    value={C5}\r\n                    onChange={handleChange}\r\n                    style={{textAlign: \"center\",backgroundColor:\"rgb(229 255 14)\",width: \"75%\"}}\r\n                  >\r\n                    <MenuItem value={\"Bill Wade\"}>Bill Wade</MenuItem>\r\n                    <MenuItem value={\"Chandler Brooks\"}>Chandler Brooks</MenuItem>\r\n                    <MenuItem value={\"Dave Shanholzer\"}>Dave Shanholzer</MenuItem>\r\n                    <MenuItem value={\"Dustin Moniez\"}>Dustin Moniez</MenuItem>\r\n                    <MenuItem value={\"Jeff Stover\"}>Jeff Stover</MenuItem>\r\n                    <MenuItem value={\"Mason Kelso\"}>Mason Kelso</MenuItem>\r\n                    <MenuItem value={\"Minh LeDuc\"}>Minh LeDuc</MenuItem>\r\n                    <MenuItem value={\"Perri Fisher\"}>Perri Fisher</MenuItem>\r\n                    <MenuItem value={\"Peter Kim\"}>Peter Kim</MenuItem>\r\n                    <MenuItem value={\"Tim Chung\"}>Tim Chung</MenuItem>\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item lg={8} md={6} sm={6} xs={12}  style={{textAlign: \"center\"}}>\r\n                    Select Sales Rep Status level (see next Tab)\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -15}}>\r\n                  <Select\r\n                    labelId=\"C6\"\r\n                    name=\"C6\"\r\n                    value={C6}\r\n                    onChange={handleChange}\r\n                    style={{textAlign: \"center\",backgroundColor:\"rgb(229 255 14)\",width: \"75%\"}}\r\n                    disabled\r\n                  >\r\n                    <MenuItem value={\"Bronze\"}>Bronze</MenuItem>\r\n                    <MenuItem value={\"Silver\"}>Silver</MenuItem>\r\n                    <MenuItem value={\"Chairman\"}>Chairman's Club</MenuItem>\r\n                  </Select>\r\n                </Grid> */}\r\n                <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                    Select SelfGen Lead\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -15}}>\r\n                  <Select\r\n                    labelId=\"C7\"\r\n                    name=\"C7\"\r\n                    value={C7}\r\n                    onChange={handleChange}\r\n                    style={{textAlign: \"center\",backgroundColor:\"rgb(229 255 14)\",width: \"75%\"}}\r\n                  >\r\n                    { selfgen_lead.map( item => {\r\n                      return (<MenuItem key={item.ID} value={item.selfgen}>{item.selfgen}</MenuItem>)\r\n                    })}\r\n                    {/* <MenuItem value={\"Self Gen\"}>Self</MenuItem>\r\n                    <MenuItem value={\"Company\"}>Company</MenuItem> */}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                    Select Module\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -15}}>\r\n                  <Select\r\n                    labelId=\"C8\"\r\n                    name=\"C8\"\r\n                    value={C8}\r\n                    onChange={handleChange}\r\n                    style={{textAlign: \"center\",backgroundColor:\"rgb(229 255 14)\",width: \"75%\"}}\r\n                  >\r\n                    { mmodule.map( item => {\r\n                      return (<MenuItem key={item.ID} value={item.module}>{item.module}</MenuItem>)\r\n                    })}\r\n                    {/* <MenuItem value={\"REC 370\"}>REC 370</MenuItem>\r\n                    <MenuItem value={\"Mission 345\"}>Mission 345</MenuItem> */}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                    Select Battery Type\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -15}}>\r\n                  <Select\r\n                    labelId=\"C9\"\r\n                    name=\"C9\"\r\n                    value={C9}\r\n                    onChange={handleChange}\r\n                    style={{textAlign: \"center\",backgroundColor:\"rgb(229 255 14)\",width: \"75%\"}}\r\n                  >\r\n                    { bbattery.map( item => {\r\n                      return (<MenuItem key={item.ID} value={item.battery}>{item.battery}</MenuItem>)\r\n                    })}\r\n                    {/* <MenuItem value={\"None\"}>None</MenuItem>\r\n                    <MenuItem value={\"Enphase 3kw\"}>Enphase 3kw</MenuItem>\r\n                    <MenuItem value={\"Enphase 10kw\"}>Enphase 10kw</MenuItem>\r\n                    <MenuItem value={\"Panasonic 11kw\"}>Panasonic 11kw</MenuItem>\r\n                    <MenuItem value={\"Panasonic 17kw\"}>Panasonic 17kw</MenuItem> */}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                    Enter System Size in watts\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -12}}>\r\n                <TextField\r\n                  // onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  name=\"C10\"\r\n                  value={C10}\r\n                  id=\"C10\"\r\n                  InputProps={{\r\n                    inputComponent: CountNumber,\r\n                  }}\r\n                  style={{textAlign: \"center\",backgroundColor:\"rgb(229 255 14)\",width: \"75%\"}}\r\n                />\r\n                </Grid>\r\n                <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                    Total System Price from Sighten Proposal\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -12}}>\r\n                <TextField\r\n                  // onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  name=\"C11\"\r\n                  value={C11}\r\n                  id=\"C11\"\r\n                  InputProps={{\r\n                    inputComponent: MoneyNumber,\r\n                  }}\r\n                  style={{textAlign: \"center\",backgroundColor:\"rgb(229 255 14)\",width: \"75%\"}}\r\n                />\r\n                </Grid>\r\n                <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\",color: \"#fb00c5\"}}>\r\n                    Select Cash Back to Customer\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -15}}>\r\n                  <Select\r\n                    labelId=\"C12\"\r\n                    name=\"C12\"\r\n                    value={C12}\r\n                    onChange={handleChange}\r\n                    style={{textAlign: \"center\",backgroundColor:\"rgb(229 255 14)\",width: \"75%\"}}\r\n                  >\r\n                    { ccash.map( item => {\r\n                      return (<MenuItem key={item.ID} value={'$' + item.cash}>${item.cash}</MenuItem>)\r\n                    })}\r\n                    {/* <MenuItem value={\"$0\"}>$0</MenuItem>\r\n                    <MenuItem value={\"$1000\"}>$1000</MenuItem>\r\n                    <MenuItem value={\"$2000\"}>$2000</MenuItem> */}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\",color: \"#fb00c5\"}}>\r\n                    Total System Price after Cash Back\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -12}}>\r\n                <TextField\r\n                  // onBlur={handleBlur}\r\n                  // onChange={handleChange}\r\n                  name=\"C13\"\r\n                  value={C13}\r\n                  id=\"C13\"\r\n                  InputProps={{\r\n                    inputComponent: MoneyNumber,\r\n                  }}\r\n                  style={{width: \"75%\"}}\r\n                  disabled\r\n                />\r\n                </Grid>\r\n                <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                    Select Dealer Fee\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -15}}>\r\n                  <Select\r\n                    labelId=\"C14\"\r\n                    name=\"C14\"\r\n                    value={C14}\r\n                    onChange={handleChange}\r\n                    style={{textAlign: \"center\",backgroundColor:\"rgb(229 255 14)\",width: \"75%\"}}\r\n                  >\r\n                    { dealerFee.map( item => {\r\n                      return (<MenuItem key={item.ID} value={item.Fee + \"%\"}>{item.Fee}%</MenuItem>)\r\n                    })}\r\n                    {/* <MenuItem value={\"0%\"}>0%</MenuItem>\r\n                    <MenuItem value={\"20%\"}>20%</MenuItem>\r\n                    <MenuItem value={\"24%\"}>24%</MenuItem>\r\n                    <MenuItem value={\"24.5%\"}>24.5%</MenuItem>\r\n                    <MenuItem value={\"25%\"}>25%</MenuItem>\r\n                    <MenuItem value={\"25.5%\"}>25.5%</MenuItem>\r\n                    <MenuItem value={\"30%\"}>30%</MenuItem> */}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                    System Price without Dealer Fee\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -12}}>\r\n                <TextField\r\n                  // onBlur={handleBlur}\r\n                  name=\"C15\"\r\n                  value={C15}\r\n                  id=\"C15\"\r\n                  InputProps={{\r\n                    inputComponent: MoneyNumber,\r\n                  }}\r\n                  style={{width: \"75%\"}}\r\n                  disabled\r\n                />\r\n                </Grid>\r\n                <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                    Solar Insure Adder (automatic)\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -12}}>\r\n                <TextField\r\n                  // onBlur={handleBlur}\r\n                  name=\"C16\"\r\n                  value={C16}\r\n                  id=\"C16\"\r\n                  InputProps={{\r\n                    inputComponent: MoneyNumber,\r\n                  }}\r\n                  style={{width: \"75%\"}}\r\n                  disabled\r\n                />\r\n                </Grid>\r\n                <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                    Battery Price (automatic)\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -12}}>\r\n                <TextField\r\n                  // onBlur={handleBlur}\r\n                  name=\"C17\"\r\n                  value={C17}\r\n                  id=\"C17\"\r\n                  InputProps={{\r\n                    inputComponent: MoneyNumber,\r\n                  }}\r\n                  style={{width: \"75%\"}}\r\n                  disabled\r\n                />\r\n                </Grid>\r\n                <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                    Total of ALL Adders\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -12}}>\r\n                <TextField\r\n                  // onBlur={handleBlur}\r\n                  name=\"C18\"\r\n                  value={C18}\r\n                  id=\"C18\"\r\n                  InputProps={{\r\n                    inputComponent: MoneyNumber,\r\n                  }}\r\n                  disabled\r\n                  style={{backgroundColor:\"rgb(229 255 14)\",width: \"75%\"}}\r\n                />\r\n                </Grid>\r\n                <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\",fontWeight:\"bolder\"}}>\r\n                    System Price (This is the Solar Portion only)\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -12}}>\r\n                <TextField\r\n                  // onBlur={handleBlur}\r\n                  name=\"C19\"\r\n                  value={C19}\r\n                  id=\"C19\"\r\n                  InputProps={{\r\n                    inputComponent: MoneyNumber,\r\n                  }}\r\n                  style={{width: \"75%\"}}\r\n                  disabled\r\n                  \r\n                />\r\n                </Grid>\r\n                <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\",fontWeight:\"bolder\"}}>\r\n                    System Price per Watt (Solar Portion Only)\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -12}}>\r\n                <TextField\r\n                  // onBlur={handleBlur}\r\n                  name=\"C20\"\r\n                  value={C20}\r\n                  id=\"C20\"\r\n                  InputProps={{\r\n                    inputComponent: MoneyNumber,\r\n                  }}\r\n                  disabled\r\n                  style={{backgroundColor:\"#38fbe0\",width: \"75%\"}}\r\n                />\r\n                </Grid>\r\n                <Grid item lg={8} md={6} sm={6} xs={12} style={{textAlign: \"center\",color: \"#fb00c5\"}}>\r\n                    Status of Sale\r\n                </Grid>\r\n                <Grid item lg={4} md={6} sm={6} xs={12}  style={{textAlign: \"center\"}}>\r\n                  <TextField id=\"C21\" label=\"\" value={C21} style={{textAlign: \"center\",marginTop: -12,width: \"75%\"}} disabled/>\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                \r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={5} md={6} sm={12} xs={12}>\r\n          <Widget title=\"COMMISSION BREAKDOWN\">\r\n          <Paper style={{ paddingLeft: \"4%\",paddingRight: \"4%\" }}>\r\n              <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                <Grid item lg={6} md={6} sm={6} xs={12} style={{textAlign: \"center\",marginTop:20}}>\r\n                Total Overrage per watt\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: 8}}>\r\n                <TextField\r\n                  // onChange={handleChange}\r\n                  name=\"F14\"\r\n                  value={F14}\r\n                  id=\"F14\"\r\n                  InputProps={{\r\n                    inputComponent: MoneyNumber,\r\n                  }}\r\n                  style={{width: \"75%\"}}\r\n                  disabled\r\n                />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                Reps' Share of Overrage/watt\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -12}}>\r\n                <TextField\r\n                  // onChange={handleChange}\r\n                  name=\"F15\"\r\n                  value={F15}\r\n                  id=\"F15\"\r\n                  InputProps={{\r\n                    inputComponent: MoneyNumber,\r\n                  }}\r\n                  style={{width: \"75%\"}}\r\n                  disabled\r\n                />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                BaseLine Commission\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -12}}>\r\n                <TextField\r\n                  // onChange={handleChange}\r\n                  name=\"F17\"\r\n                  value={F17}\r\n                  id=\"F17\"\r\n                  InputProps={{\r\n                    inputComponent: MoneyNumber,\r\n                  }}\r\n                  style={{width: \"75%\"}}\r\n                  disabled\r\n                />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                Self Gen Commission\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -12}}>\r\n                <TextField\r\n                  // onChange={handleChange}\r\n                  name=\"FSelfGen\"\r\n                  value={FSelfGen}\r\n                  id=\"FSelfGen\"\r\n                  InputProps={{\r\n                    inputComponent: MoneyNumber,\r\n                  }}\r\n                  style={{width: \"75%\"}}\r\n                  disabled\r\n                />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                Overrage Commission\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -12}}>\r\n                <TextField\r\n                  // onChange={handleChange}\r\n                  name=\"F18\"\r\n                  value={F18}\r\n                  id=\"F18\"\r\n                  InputProps={{\r\n                    inputComponent: MoneyNumber,\r\n                  }}\r\n                  style={{width: \"75%\"}}\r\n                  disabled\r\n                />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                Battery Commission\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -12}}>\r\n                <TextField\r\n                  // onChange={handleChange}\r\n                  name=\"F19\"\r\n                  value={F19}\r\n                  id=\"F19\"\r\n                  InputProps={{\r\n                    inputComponent: MoneyNumber,\r\n                  }}\r\n                  style={{width: \"75%\"}}\r\n                  disabled\r\n                />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={12} style={{textAlign: \"center\"}}>\r\n                Total Commission (Solar+Storage)\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={12}  style={{textAlign: \"center\",marginTop: -12}}>\r\n                <TextField\r\n                  // onChange={handleChange}\r\n                  name=\"F20\"\r\n                  value={F20}\r\n                  id=\"F20\"\r\n                  InputProps={{\r\n                    inputComponent: MoneyNumber,\r\n                  }}\r\n                  disabled\r\n                  style={{backgroundColor:\"#65ea44\",width: \"75%\"}}\r\n                />\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                \r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n  }\r\n  </>\r\n)\r\n\r\n  // return (\r\n  //   <>\r\n\r\n  //   </>\r\n  // );\r\n}\r\nfunction MoneyNumber(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n      prefix=\"$\"\r\n    />\r\n  );\r\n}\r\n\r\nMoneyNumber.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nfunction CountNumber(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      thousandSeparator\r\n      isNumericString\r\n    />\r\n  );\r\n}\r\n\r\nCountNumber.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};","E:\\work\\firebase\\ProRMS\\src\\pages\\calculator\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\users\\index.js",["551","552","553","554","555","556","557","558","559"],"\r\nimport React , { useEffect, useState,useContext }from \"react\";\r\nimport {\r\n  Grid,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { DragDropContext,Droppable,Draggable   } from 'react-beautiful-dnd';\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport \"../users/style.css\"\r\nimport UserCard from \"./components/userCard\";\r\nimport Modal from 'react-awesome-modal';\r\nimport { DatePicker } from '@progress/kendo-react-dateinputs';\r\nimport { useLoading, ThreeDots} from '@agney/react-loading';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { CircularProgressWithLabel } from \"../../components/CircularProgressWithLabel\"\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FirebaseContext } from '../../redux';\r\n\r\n// const finalUsers = [\r\n//   {\r\n//     id: 'h',\r\n//     club:\"Bronze\",\r\n//     teamName:\"Arizona\",\r\n//     name: 'Jeff Stover',\r\n//     email: 'onethink016@gmail.com',\r\n//     systemNumber: 'AZ/TX',\r\n//     evaluationDate:\"12/31/20\",\r\n//     lastQtrlySales:6,\r\n//     nextEvaluationDate:\"3/31/21\",\r\n//     allow:true,\r\n//     other:\"\"\r\n//   },\r\n// ]\r\nlet deletedUserUid;\r\nlet selectedUserEmail;\r\nconst sweetAlertStyle = { display: \"block\", marginTop: \"-100px\" }\r\nexport default function Users() {\r\n\r\n  const { api } = useContext(FirebaseContext);\r\n  const {\r\n    updateUsers,\r\n    updateCalculatorRefAdder,\r\n    deleteUsers\r\n    } = api;\r\n  const users = useSelector(state => state.users);\r\n  const dispatch = useDispatch();\r\n\r\n  const { containerProps, indicatorEl } = useLoading({\r\n    loading: true,\r\n    indicator: <ThreeDots width=\"50\" />,\r\n  });\r\n  const firebase = useContext(FirebaseContext);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [characters, updateCharacters] = useState([]);\r\n  const [team, setTeam] = React.useState('Arizona');\r\n  const [updateFlag, setUpdateFlag] = React.useState(false);\r\n  const [visible,setModal] = useState(false);\r\n  const [name,setName] = useState(\"\");\r\n  const [systemNumber,setSystemNumber] = useState('TX');\r\n  const [evaluationDate,setEvaluationDate] = useState(\"\");\r\n  const [lastQtrlySales,setLastQtrlySales] = useState(\"\");\r\n  const [nextEvaluationDate,setNextEvaluationDate] = useState(\"\");\r\n  const [other,setOther] = useState(\"\");\r\n  const [dropInfo,setDropInfo] = useState({});\r\n  const [alert,setAlert] = React.useState(null);\r\n\r\n\r\n  const openModal = () => {\r\n   setModal(true);\r\n  }\r\n\r\n  const cancelModal = (e) => {\r\n    const items = Array.from(characters);\r\n    if(updateFlag){\r\n\r\n    }\r\n    else\r\n    {\r\n      const [reorderedItem] = items.splice(dropInfo.source.index, 1);\r\n      reorderedItem.club = dropInfo.source.droppableId;\r\n      if(dropInfo.source.droppableId === \"Pending\") reorderedItem.allow = false;\r\n      items.splice(dropInfo.destination.index, 0, reorderedItem);\r\n    }\r\n    setUpdateFlag(false);\r\n    setModal(false);\r\n    updateCharacters(items);\r\n  }\r\n  const okModal = (e) => {\r\n\r\n    const items = Array.from(characters);\r\n    if(updateFlag){\r\n      characters.map((item) => {\r\n        if(item.email === selectedUserEmail){\r\n          item.teamName = team;\r\n          item.systemNumber = systemNumber;\r\n          if(typeof evaluationDate === \"object\"){\r\n            item.evaluationDate = evaluationDate.toLocaleDateString();\r\n          }\r\n          else item.evaluationDate = evaluationDate;\r\n          item.lastQtrlySales = lastQtrlySales;\r\n          if(typeof nextEvaluationDate === \"object\")\r\n          item.nextEvaluationDate = nextEvaluationDate.toLocaleDateString();\r\n          else item.nextEvaluationDate = nextEvaluationDate;\r\n          item.other = other;\r\n          \r\n          save(item);\r\n        }\r\n      })\r\n      setUpdateFlag(false);\r\n    }\r\n    else\r\n    {\r\n      const [reorderedItem] = items.splice(dropInfo.source.index, 1);\r\n      reorderedItem.club = dropInfo.destination.droppableId\r\n      reorderedItem.teamName = team;\r\n      reorderedItem.systemNumber = systemNumber;\r\n      if(typeof evaluationDate === \"object\"){\r\n        reorderedItem.evaluationDate = evaluationDate.toLocaleDateString();\r\n      }\r\n      else reorderedItem.evaluationDate = evaluationDate;\r\n      reorderedItem.lastQtrlySales = lastQtrlySales;\r\n      if(typeof nextEvaluationDate === \"object\")\r\n      reorderedItem.nextEvaluationDate = nextEvaluationDate.toLocaleDateString();\r\n      else reorderedItem.nextEvaluationDate = nextEvaluationDate;\r\n      reorderedItem.other = other;\r\n      items.splice(dropInfo.destination.index, 0, reorderedItem);\r\n      save(reorderedItem);\r\n    }\r\n    updateCharacters(items);\r\n    setModal(false);\r\n  }\r\n  const save = (data) => {\r\n    const {uid,...saveData} = data;\r\n    dispatch(updateUsers(uid,saveData));\r\n    var cData = {C3:saveData.systemNumber,C5:saveData.name,C6:saveData.club,allow:saveData.allow};\r\n    dispatch(updateCalculatorRefAdder(uid,cData));\r\n  }\r\n  const handleOnDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n    const items = Array.from(characters);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    if(result.destination.droppableId === \"Pending\"){\r\n      reorderedItem.allow = false;\r\n      reorderedItem.teamName = \"Pending\"\r\n      reorderedItem.systemNumber = \"\";\r\n      reorderedItem.club = result.destination.droppableId;\r\n      items.splice(result.destination.index, 0, reorderedItem);\r\n      updateCharacters(items);\r\n      save(reorderedItem);\r\n      console.log(\"p\",items);\r\n    }else{\r\n      reorderedItem.allow = true;\r\n      if(reorderedItem.teamName === \"Pending\") {setTeam(\"Arizona\");setSystemNumber(\"TX\")}\r\n      else {setTeam(reorderedItem.teamName);\r\n      setSystemNumber(reorderedItem.systemNumber)}\r\n      setName(reorderedItem.name)\r\n      setEvaluationDate(reorderedItem.evaluationDate)\r\n      setLastQtrlySales(reorderedItem.lastQtrlySales)\r\n\r\n      setNextEvaluationDate(reorderedItem.nextEvaluationDate)\r\n      setOther(reorderedItem.other);\r\n      setDropInfo(result);\r\n      openModal();\r\n    }\r\n  }\r\n  const systemChange = (event) => {\r\n    setSystemNumber(event.target.value);\r\n  }\r\n  const evaluationDateChange = (event) => {\r\n    setEvaluationDate(event.target.value)\r\n  }\r\n  const nextEvaluationDateChange = (event) => {\r\n    setNextEvaluationDate(event.target.value)\r\n  }\r\n  const teamChange = (event) => {\r\n    setTeam(event.target.value);\r\n  };\r\n  const salesChange = (event) => {\r\n    setLastQtrlySales(event.target.value);\r\n  };\r\n  const otherChange = (event) => {\r\n    setOther(event.target.value);\r\n  };\r\n  const update = (e) => {\r\n    // console.log(\"update\")\r\n    setUpdateFlag(true);\r\n    let updateItem = {}; \r\n    characters.map((item) => {\r\n      if(item.id === e.target.id){\r\n        updateItem = item;\r\n      }\r\n    })\r\n    selectedUserEmail = updateItem.email;\r\n    if(updateItem.teamName === \"Pending\") setTeam(\"Pending\")\r\n    else setTeam(updateItem.teamName)\r\n    setName(updateItem.name)\r\n    setEvaluationDate(updateItem.evaluationDate)\r\n    setLastQtrlySales(updateItem.lastQtrlySales)\r\n    setSystemNumber(updateItem.systemNumber)\r\n    setNextEvaluationDate(updateItem.nextEvaluationDate)\r\n    setOther(updateItem.other);\r\n    // console.log(updateItem)\r\n    openModal();\r\n  }\r\n  useEffect(() => {\r\n    if(users.info){\r\n      var usersdata = users.info;\r\n      var id = 0;\r\n      const uData = Object.keys(usersdata).\r\n                    map((i) => {\r\n                      id++;\r\n                      usersdata[i].id = id.toString();\r\n                      usersdata[i].uid = i;\r\n                      return usersdata[i]\r\n                    })\r\n      updateCharacters(uData)\r\n      setLoading(false);\r\n    }\r\n  }, [users.info])\r\n  \r\n  const deleteUser = (e) => {\r\n    deletedUserUid = e.target.id;\r\n    setAlert(\r\n      <SweetAlert\r\n      danger\r\n      showCancel\r\n      confirmBtnText=\"Yes, delete it!\"\r\n      confirmBtnBsStyle=\"delete\"\r\n      title=\"Are you sure?\"\r\n      onConfirm={deleteRequest}\r\n      onCancel={deleteCancel}\r\n      focusCancelBtn\r\n      >\r\n      You will not be able to recover this user(<b>{e.target.name}</b>).\r\n    </SweetAlert>\r\n    );\r\n  }\r\n  const deleteRequest = () => {\r\n    setAlert(null)\r\n    setAlert(\r\n      <SweetAlert\r\n        title={\"\"}\r\n        onConfirm={() => {}}\r\n        showConfirm={false}\r\n      >\r\n        <CircularProgressWithLabel value={30} />\r\n      </SweetAlert>)\r\n      dispatch(deleteUsers(deletedUserUid))\r\n                setAlert(\r\n                <SweetAlert success title=\"Deleted\" onConfirm={deletedConfirm}>\r\n                  The user has been deleted.\r\n                </SweetAlert>)\r\n    // var usersDBRef = firebase.firestore().collection(\"users\");\r\n    // var calculatorsDBRef = firebase.firestore().collection(\"calculators\");\r\n    // var addersDBRef = firebase.firestore().collection(\"adders\");\r\n    // console.log(\"email\",deletedUserEmail)\r\n    // calculatorsDBRef.where(\"email\" ,\"==\", deletedUserEmail).get().then((querySnapshot) => {\r\n    //   var docs = querySnapshot.docs;\r\n    //   calculatorsDBRef.doc(docs[0].id).delete().then((result) => {\r\n    //     // setAlert(null)\r\n    //     setAlert(\r\n    //       <SweetAlert\r\n    //         title={\"\"}\r\n    //         onConfirm={() => {}}\r\n    //         showConfirm={false}\r\n    //       >\r\n    //         <CircularProgressWithLabel value={60} />\r\n    //       </SweetAlert>)\r\n    //     addersDBRef.where(\"email\" ,\"==\", deletedUserEmail).get().then((querySnapshot) => {\r\n    //       var docs = querySnapshot.docs;\r\n    //       addersDBRef.doc(docs[0].id).delete().then((result) => {\r\n    //         // setAlert(null)\r\n    //         setAlert(\r\n    //           <SweetAlert\r\n    //             title={\"\"}\r\n    //             onConfirm={() => {}}\r\n    //             showConfirm={false}\r\n    //           >\r\n    //             <CircularProgressWithLabel value={100} />\r\n    //           </SweetAlert>)\r\n    //         usersDBRef.where(\"email\" ,\"==\", deletedUserEmail).get().then((querySnapshot) => {\r\n    //           var docs = querySnapshot.docs;\r\n    //           usersDBRef.doc(docs[0].id).delete().then((result) => {\r\n    //             const newCharacters = [];\r\n    //             characters.forEach(item => {\r\n    //               if(item.email !== deletedUserEmail) newCharacters.push(item);\r\n    //             })\r\n    //             updateCharacters(newCharacters);\r\n    //             setAlert(\r\n    //             <SweetAlert success title=\"Deleted\" onConfirm={deletedConfirm}>\r\n    //               The user has been deleted.\r\n    //             </SweetAlert>\r\n    //             )\r\n    //           })\r\n    //         })\r\n    //       })\r\n    //     })\r\n    //   })\r\n    // })\r\n  }\r\n  const deleteCancel = () => {\r\n    setAlert(null)\r\n  }\r\n  const deletedConfirm = () => {\r\n    setAlert(null)\r\n  }\r\n  return (\r\n    <>\r\n     {loading ?    \r\n            <section {...containerProps} style={{textAlign:\"center\",marginTop:window.innerHeight/2 - 100}}>\r\n                {indicatorEl} {/* renders only while loading */}\r\n            </section> :\r\n            <>\r\n            {alert}\r\n            <PageTitle title=\"\" />\r\n            <Grid container spacing={4}>\r\n            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                <Droppable droppableId=\"Chairman\">\r\n                {(provided) => (\r\n                      <>\r\n                      <Grid item lg={3} md={6} sm={6} xs={12} {...provided.droppableProps} ref={provided.innerRef}>\r\n                        <Widget title=\"Chairman Club\">\r\n                        <ul  {...provided.droppableProps} ref={provided.innerRef} style={{listStyleType:\"none\",padding:\"1%\"}}>\r\n                          {characters.map((item, index) => {\r\n                            if(item.allow && item.club === \"Chairman\"){\r\n                                    return (\r\n                                      <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                        {(provided) => (\r\n                                          <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n                                            <UserCard info={item} update={update} deleteUser={deleteUser}/>\r\n                                          </li>\r\n                                        )}\r\n                                      </Draggable>\r\n                                    );\r\n                                  }\r\n                                })}\r\n                          </ul>\r\n                        </Widget>\r\n                        {provided.placeholder}\r\n                      </Grid>\r\n                      </>\r\n                    )}\r\n                </Droppable>\r\n                <Droppable droppableId=\"Silver\">\r\n                {(provided) => (\r\n                      <>\r\n                      <Grid item lg={3} md={6} sm={6} xs={12} {...provided.droppableProps} ref={provided.innerRef}>\r\n                        <Widget title=\"Silver Club\">\r\n                        <ul  {...provided.droppableProps} ref={provided.innerRef} style={{listStyleType:\"none\",padding:\"1%\"}}>\r\n                          {characters.map((item, index) => {\r\n                            if(item.allow && item.club === \"Silver\"){\r\n                                    return (\r\n                                      <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                        {(provided) => (\r\n                                          <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n                                            <UserCard info={item} update={update} deleteUser={deleteUser}/>\r\n                                          </li>\r\n                                        )}\r\n                                      </Draggable>\r\n                                    );\r\n                                  }\r\n                                })}\r\n                          </ul>\r\n                        </Widget>\r\n                        {provided.placeholder}\r\n                      </Grid>\r\n                      </>\r\n                    )}\r\n                </Droppable>\r\n                <Droppable droppableId=\"Bronze\">\r\n                {(provided) => (\r\n                      <>\r\n                      <Grid item lg={3} md={6} sm={6} xs={12} {...provided.droppableProps} ref={provided.innerRef}>\r\n                        <Widget title=\"Bronze Club\">\r\n                        <ul  {...provided.droppableProps} ref={provided.innerRef} style={{listStyleType:\"none\",padding:\"1%\"}}>\r\n                          {characters.map((item, index) => {\r\n                            if(item.allow && item.club === \"Bronze\"){\r\n                                    return (\r\n                                      <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                        {(provided) => (\r\n                                          <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n                                            <UserCard info={item} update={update} deleteUser={deleteUser}/>\r\n                                          </li>\r\n                                        )}\r\n                                      </Draggable>\r\n                                    );\r\n                                  }\r\n                                })}\r\n                          </ul>\r\n                        </Widget>\r\n                        {provided.placeholder}\r\n                      </Grid>\r\n                      </>\r\n                    )}\r\n                </Droppable>\r\n                <Droppable droppableId=\"Pending\">\r\n              {(provided) => (\r\n                      <>\r\n                      <Grid item lg={3} md={6} sm={6} xs={12}  {...provided.droppableProps} ref={provided.innerRef}>\r\n                        <Widget title=\"Pending\">\r\n                          <ul  {...provided.droppableProps} ref={provided.innerRef} style={{listStyleType:\"none\",padding:\"1%\"}}>\r\n                          {characters.map((item, index) => {\r\n                            if(!item.allow){\r\n                                    return (\r\n                                      <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                        {(provided) => (\r\n                                          <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n                                            <UserCard info={item} update={update} deleteUser={deleteUser}/>\r\n                                          </li>\r\n                                        )}\r\n                                      </Draggable>\r\n                                    );\r\n                                  }\r\n                                })}\r\n                          </ul>\r\n                        </Widget>\r\n                        {provided.placeholder}\r\n                      </Grid>\r\n                      </>\r\n                    )}\r\n                </Droppable>\r\n              </DragDropContext>\r\n            </Grid>\r\n            <Modal \r\n                visible={visible}\r\n                width=\"400\"\r\n                height=\"400\"\r\n                effect=\"fadeInUp\"\r\n                // onClickAway={() => closeModal()}\r\n            >\r\n                <div>\r\n                    <h1 className=\"center\" id=\"username\">{name}</h1>\r\n                    <div style={{display:\"flex\",marginTop:50}}>\r\n                      <Grid item xs={6} style={{textAlign: \"center\"}}>\r\n                        Select the team\r\n                      </Grid>\r\n                      <Grid item xs={6}  style={{textAlign: \"center\"}}>\r\n                      <select\r\n                          name=\"team\"\r\n                          value={team}\r\n                          onChange={teamChange}\r\n                          style={{textAlign: \"center\",width:\"75%\"}}\r\n                        >\r\n                          <option value={\"Arizona\"}>Arizona Team</option>\r\n                          <option value={\"Texas\"}>Texas Team</option>\r\n                        </select>\r\n                      </Grid>        \r\n                    </div>           \r\n                    <div style={{display:\"flex\",marginTop:15}}>\r\n                      <Grid item xs={6} style={{textAlign: \"center\"}}>\r\n                          System Number\r\n                      </Grid>\r\n                      <Grid item xs={6}  style={{textAlign: \"center\"}}>\r\n                        <select\r\n                          name=\"systemNumber\"\r\n                          value={systemNumber}\r\n                          onChange={systemChange}\r\n                          style={{textAlign: \"center\",width:\"75%\"}}\r\n                        >\r\n                          <option value={\"TX\"}>TX</option>\r\n                          <option value={\"AZ\"}>AZ</option>\r\n                          <option value={\"AZ/TX\"}>AZ/TX</option>\r\n                          <option value={\"AZ/TX - remote\"}>AZ/TX - remote</option>\r\n                          <option value={\"Remote (exiting)\"}>Remote (exiting)</option>\r\n                        </select>\r\n                      </Grid>        \r\n                    </div>\r\n                    \r\n                    <div style={{display:\"flex\",marginTop:15}}>\r\n                      <Grid item xs={6} style={{textAlign: \"center\"}}>\r\n                          Evaluation Date\r\n                      </Grid>\r\n                      <Grid item xs={6}  style={{textAlign: \"center\"}}>\r\n                        <DatePicker value={new Date(evaluationDate)} id=\"evaluationDate\" defaultShow={false} onChange={evaluationDateChange}/>\r\n                      </Grid>        \r\n                    </div>\r\n                    <div style={{display:\"flex\",marginTop:15}}>\r\n                      <Grid item xs={6} style={{textAlign: \"center\"}}>\r\n                        Last Qtrly Sales\r\n                      </Grid>\r\n                      <Grid item xs={6}  style={{textAlign: \"center\"}}>\r\n                        <input type=\"text\" defaultValue={lastQtrlySales} onChange={ salesChange} style={{width:\"75%\"}}/>\r\n                      </Grid>        \r\n                    </div>\r\n                    <div style={{display:\"flex\",marginTop:15}}>\r\n                      <Grid item xs={6} style={{textAlign: \"center\"}}>\r\n                        Next Evaluation Date\r\n                      </Grid>\r\n                      <Grid item xs={6}  style={{textAlign: \"center\"}}>\r\n                        <DatePicker value={new Date(nextEvaluationDate)} defaultShow={false} onChange={nextEvaluationDateChange} style={{width:\"75%\"}}/>\r\n                      </Grid>        \r\n                    </div>\r\n                    <div style={{display:\"flex\",marginTop:15}}>\r\n                      <Grid item xs={6} style={{textAlign: \"center\"}}>\r\n                        Other\r\n                      </Grid>\r\n                      <Grid item xs={6}  style={{textAlign: \"center\"}}>\r\n                        <input type=\"text\" defaultValue={other}  onChange={ otherChange}  style={{width:\"75%\"}}/>\r\n                      </Grid>        \r\n                    </div>\r\n                    <div style={{display:\"flex\",marginTop:15}}>\r\n                      <Grid item xs={6} style={{textAlign: \"center\"}}>\r\n                      <Button variant=\"outlined\" color=\"secondary\" onClick={cancelModal}>\r\n                        Cancel\r\n                      </Button>\r\n                      </Grid>\r\n                      <Grid item xs={6}  style={{textAlign: \"center\"}}>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={okModal}>\r\n                          Ok\r\n                        </Button>\r\n                      </Grid>        \r\n                    </div>\r\n                    \r\n\r\n                </div>\r\n            </Modal>\r\n      </>\r\n}\r\n\r\n    </>\r\n  );\r\n}\r\n","E:\\work\\firebase\\ProRMS\\src\\pages\\users\\components\\userCard.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\CircularLoading.js",[],{"ruleId":"560","replacedBy":"561"},{"ruleId":"562","replacedBy":"563"},{"ruleId":"564","severity":1,"message":"565","line":17,"column":1,"nodeType":"566","endLine":26,"endColumn":4},{"ruleId":"567","severity":1,"message":"568","line":10,"column":23,"nodeType":"569","messageId":"570","endLine":10,"endColumn":34},{"ruleId":"567","severity":1,"message":"571","line":11,"column":10,"nodeType":"569","messageId":"570","endLine":11,"endColumn":25},{"ruleId":"567","severity":1,"message":"572","line":40,"column":9,"nodeType":"569","messageId":"570","endLine":40,"endColumn":15},{"ruleId":"567","severity":1,"message":"573","line":41,"column":9,"nodeType":"569","messageId":"570","endLine":41,"endColumn":19},{"ruleId":"567","severity":1,"message":"574","line":42,"column":9,"nodeType":"569","messageId":"570","endLine":42,"endColumn":16},{"ruleId":"567","severity":1,"message":"575","line":43,"column":9,"nodeType":"569","messageId":"570","endLine":43,"endColumn":13},{"ruleId":"567","severity":1,"message":"576","line":44,"column":9,"nodeType":"569","messageId":"570","endLine":44,"endColumn":12},{"ruleId":"567","severity":1,"message":"577","line":45,"column":9,"nodeType":"569","messageId":"570","endLine":45,"endColumn":14},{"ruleId":"567","severity":1,"message":"578","line":46,"column":9,"nodeType":"569","messageId":"570","endLine":46,"endColumn":16},{"ruleId":"567","severity":1,"message":"579","line":48,"column":9,"nodeType":"569","messageId":"570","endLine":48,"endColumn":14},{"ruleId":"567","severity":1,"message":"580","line":49,"column":9,"nodeType":"569","messageId":"570","endLine":49,"endColumn":22},{"ruleId":"581","severity":1,"message":"582","line":54,"column":6,"nodeType":"583","endLine":54,"endColumn":8,"suggestions":"584"},{"ruleId":"581","severity":1,"message":"585","line":60,"column":6,"nodeType":"583","endLine":60,"endColumn":20,"suggestions":"586"},{"ruleId":"581","severity":1,"message":"587","line":65,"column":6,"nodeType":"583","endLine":65,"endColumn":18,"suggestions":"588"},{"ruleId":"581","severity":1,"message":"589","line":98,"column":6,"nodeType":"583","endLine":98,"endColumn":173,"suggestions":"590"},{"ruleId":"567","severity":1,"message":"568","line":30,"column":23,"nodeType":"569","messageId":"570","endLine":30,"endColumn":34},{"ruleId":"567","severity":1,"message":"571","line":31,"column":10,"nodeType":"569","messageId":"570","endLine":31,"endColumn":25},{"ruleId":"591","severity":1,"message":"592","line":67,"column":46,"nodeType":"593","messageId":"594","endLine":67,"endColumn":55,"fix":"595"},{"ruleId":"567","severity":1,"message":"596","line":29,"column":8,"nodeType":"569","messageId":"570","endLine":29,"endColumn":21},{"ruleId":"567","severity":1,"message":"597","line":30,"column":8,"nodeType":"569","messageId":"570","endLine":30,"endColumn":22},{"ruleId":"567","severity":1,"message":"598","line":4,"column":11,"nodeType":"569","messageId":"570","endLine":4,"endColumn":19},{"ruleId":"567","severity":1,"message":"599","line":13,"column":8,"nodeType":"569","messageId":"570","endLine":13,"endColumn":19},{"ruleId":"581","severity":1,"message":"600","line":86,"column":5,"nodeType":"583","endLine":86,"endColumn":16,"suggestions":"601"},{"ruleId":"567","severity":1,"message":"602","line":6,"column":3,"nodeType":"569","messageId":"570","endLine":6,"endColumn":12},{"ruleId":"567","severity":1,"message":"603","line":13,"column":18,"nodeType":"569","messageId":"570","endLine":13,"endColumn":26},{"ruleId":"567","severity":1,"message":"604","line":14,"column":24,"nodeType":"569","messageId":"570","endLine":14,"endColumn":41},{"ruleId":"567","severity":1,"message":"605","line":16,"column":13,"nodeType":"569","messageId":"570","endLine":16,"endColumn":23},{"ruleId":"567","severity":1,"message":"606","line":26,"column":10,"nodeType":"569","messageId":"570","endLine":26,"endColumn":15},{"ruleId":"567","severity":1,"message":"607","line":104,"column":8,"nodeType":"569","messageId":"570","endLine":104,"endColumn":21},{"ruleId":"567","severity":1,"message":"608","line":104,"column":23,"nodeType":"569","messageId":"570","endLine":104,"endColumn":39},{"ruleId":"567","severity":1,"message":"609","line":106,"column":8,"nodeType":"569","messageId":"570","endLine":106,"endColumn":29},{"ruleId":"567","severity":1,"message":"610","line":106,"column":31,"nodeType":"569","messageId":"570","endLine":106,"endColumn":55},{"ruleId":"567","severity":1,"message":"611","line":108,"column":8,"nodeType":"569","messageId":"570","endLine":108,"endColumn":20},{"ruleId":"567","severity":1,"message":"612","line":108,"column":22,"nodeType":"569","messageId":"570","endLine":108,"endColumn":35},{"ruleId":"567","severity":1,"message":"613","line":1,"column":10,"nodeType":"569","messageId":"570","endLine":1,"endColumn":24},{"ruleId":"567","severity":1,"message":"614","line":19,"column":7,"nodeType":"569","messageId":"570","endLine":19,"endColumn":18},{"ruleId":"567","severity":1,"message":"615","line":118,"column":5,"nodeType":"569","messageId":"570","endLine":118,"endColumn":9},{"ruleId":"616","severity":1,"message":"617","line":145,"column":25,"nodeType":"618","messageId":"619","endLine":145,"endColumn":33},{"ruleId":"620","severity":1,"message":"621","line":186,"column":32,"nodeType":"622","messageId":"619","endLine":186,"endColumn":34},{"ruleId":"567","severity":1,"message":"623","line":3,"column":5,"nodeType":"569","messageId":"570","endLine":3,"endColumn":28},{"ruleId":"567","severity":1,"message":"624","line":3,"column":5,"nodeType":"569","messageId":"570","endLine":3,"endColumn":24},{"ruleId":"567","severity":1,"message":"625","line":3,"column":5,"nodeType":"569","messageId":"570","endLine":3,"endColumn":25},{"ruleId":"567","severity":1,"message":"626","line":3,"column":5,"nodeType":"569","messageId":"570","endLine":3,"endColumn":22},{"ruleId":"567","severity":1,"message":"627","line":3,"column":5,"nodeType":"569","messageId":"570","endLine":3,"endColumn":23},{"ruleId":"567","severity":1,"message":"628","line":3,"column":5,"nodeType":"569","messageId":"570","endLine":3,"endColumn":25},{"ruleId":"567","severity":1,"message":"629","line":3,"column":5,"nodeType":"569","messageId":"570","endLine":3,"endColumn":21},{"ruleId":"567","severity":1,"message":"630","line":3,"column":5,"nodeType":"569","messageId":"570","endLine":3,"endColumn":24},{"ruleId":"567","severity":1,"message":"631","line":3,"column":5,"nodeType":"569","messageId":"570","endLine":3,"endColumn":23},{"ruleId":"632","severity":1,"message":"633","line":46,"column":43,"nodeType":"634","messageId":"635","endLine":46,"endColumn":45},{"ruleId":"632","severity":1,"message":"633","line":68,"column":43,"nodeType":"634","messageId":"635","endLine":68,"endColumn":45},{"ruleId":"567","severity":1,"message":"636","line":2,"column":5,"nodeType":"569","messageId":"570","endLine":2,"endColumn":17},{"ruleId":"567","severity":1,"message":"637","line":3,"column":5,"nodeType":"569","messageId":"570","endLine":3,"endColumn":16},{"ruleId":"567","severity":1,"message":"638","line":5,"column":12,"nodeType":"569","messageId":"570","endLine":5,"endColumn":17},{"ruleId":"567","severity":1,"message":"639","line":1,"column":28,"nodeType":"569","messageId":"570","endLine":1,"endColumn":37},{"ruleId":"567","severity":1,"message":"640","line":2,"column":13,"nodeType":"569","messageId":"570","endLine":2,"endColumn":21},{"ruleId":"567","severity":1,"message":"641","line":39,"column":23,"nodeType":"569","messageId":"570","endLine":39,"endColumn":35},{"ruleId":"567","severity":1,"message":"642","line":63,"column":13,"nodeType":"569","messageId":"570","endLine":63,"endColumn":20},{"ruleId":"567","severity":1,"message":"643","line":256,"column":11,"nodeType":"569","messageId":"570","endLine":256,"endColumn":25},{"ruleId":"567","severity":1,"message":"639","line":1,"column":28,"nodeType":"569","messageId":"570","endLine":1,"endColumn":37},{"ruleId":"567","severity":1,"message":"640","line":2,"column":13,"nodeType":"569","messageId":"570","endLine":2,"endColumn":21},{"ruleId":"567","severity":1,"message":"644","line":39,"column":11,"nodeType":"569","messageId":"570","endLine":39,"endColumn":19},{"ruleId":"567","severity":1,"message":"641","line":40,"column":23,"nodeType":"569","messageId":"570","endLine":40,"endColumn":35},{"ruleId":"567","severity":1,"message":"642","line":64,"column":13,"nodeType":"569","messageId":"570","endLine":64,"endColumn":20},{"ruleId":"567","severity":1,"message":"645","line":211,"column":21,"nodeType":"569","messageId":"570","endLine":211,"endColumn":29},{"ruleId":"567","severity":1,"message":"643","line":280,"column":11,"nodeType":"569","messageId":"570","endLine":280,"endColumn":25},{"ruleId":"567","severity":1,"message":"639","line":1,"column":28,"nodeType":"569","messageId":"570","endLine":1,"endColumn":37},{"ruleId":"567","severity":1,"message":"640","line":2,"column":13,"nodeType":"569","messageId":"570","endLine":2,"endColumn":21},{"ruleId":"567","severity":1,"message":"641","line":39,"column":23,"nodeType":"569","messageId":"570","endLine":39,"endColumn":35},{"ruleId":"567","severity":1,"message":"642","line":63,"column":13,"nodeType":"569","messageId":"570","endLine":63,"endColumn":20},{"ruleId":"567","severity":1,"message":"646","line":93,"column":11,"nodeType":"569","messageId":"570","endLine":93,"endColumn":22},{"ruleId":"567","severity":1,"message":"643","line":198,"column":11,"nodeType":"569","messageId":"570","endLine":198,"endColumn":25},{"ruleId":"567","severity":1,"message":"639","line":1,"column":28,"nodeType":"569","messageId":"570","endLine":1,"endColumn":37},{"ruleId":"567","severity":1,"message":"640","line":2,"column":13,"nodeType":"569","messageId":"570","endLine":2,"endColumn":21},{"ruleId":"567","severity":1,"message":"644","line":39,"column":11,"nodeType":"569","messageId":"570","endLine":39,"endColumn":19},{"ruleId":"567","severity":1,"message":"641","line":40,"column":23,"nodeType":"569","messageId":"570","endLine":40,"endColumn":35},{"ruleId":"567","severity":1,"message":"642","line":64,"column":13,"nodeType":"569","messageId":"570","endLine":64,"endColumn":20},{"ruleId":"567","severity":1,"message":"646","line":94,"column":11,"nodeType":"569","messageId":"570","endLine":94,"endColumn":22},{"ruleId":"567","severity":1,"message":"643","line":201,"column":11,"nodeType":"569","messageId":"570","endLine":201,"endColumn":25},{"ruleId":"567","severity":1,"message":"639","line":1,"column":28,"nodeType":"569","messageId":"570","endLine":1,"endColumn":37},{"ruleId":"567","severity":1,"message":"640","line":2,"column":13,"nodeType":"569","messageId":"570","endLine":2,"endColumn":21},{"ruleId":"567","severity":1,"message":"644","line":40,"column":11,"nodeType":"569","messageId":"570","endLine":40,"endColumn":19},{"ruleId":"567","severity":1,"message":"641","line":41,"column":23,"nodeType":"569","messageId":"570","endLine":41,"endColumn":35},{"ruleId":"567","severity":1,"message":"642","line":65,"column":13,"nodeType":"569","messageId":"570","endLine":65,"endColumn":20},{"ruleId":"567","severity":1,"message":"646","line":95,"column":11,"nodeType":"569","messageId":"570","endLine":95,"endColumn":22},{"ruleId":"567","severity":1,"message":"643","line":201,"column":11,"nodeType":"569","messageId":"570","endLine":201,"endColumn":25},{"ruleId":"567","severity":1,"message":"639","line":1,"column":28,"nodeType":"569","messageId":"570","endLine":1,"endColumn":37},{"ruleId":"567","severity":1,"message":"644","line":27,"column":11,"nodeType":"569","messageId":"570","endLine":27,"endColumn":19},{"ruleId":"567","severity":1,"message":"647","line":29,"column":12,"nodeType":"569","messageId":"570","endLine":29,"endColumn":21},{"ruleId":"567","severity":1,"message":"648","line":30,"column":12,"nodeType":"569","messageId":"570","endLine":30,"endColumn":19},{"ruleId":"632","severity":1,"message":"633","line":51,"column":32,"nodeType":"634","messageId":"635","endLine":51,"endColumn":34},{"ruleId":"567","severity":1,"message":"649","line":77,"column":21,"nodeType":"569","messageId":"570","endLine":77,"endColumn":24},{"ruleId":"567","severity":1,"message":"639","line":1,"column":28,"nodeType":"569","messageId":"570","endLine":1,"endColumn":37},{"ruleId":"567","severity":1,"message":"650","line":13,"column":21,"nodeType":"569","messageId":"570","endLine":13,"endColumn":30},{"ruleId":"567","severity":1,"message":"651","line":18,"column":14,"nodeType":"569","messageId":"570","endLine":18,"endColumn":26},{"ruleId":"567","severity":1,"message":"644","line":51,"column":11,"nodeType":"569","messageId":"570","endLine":51,"endColumn":19},{"ruleId":"567","severity":1,"message":"648","line":55,"column":12,"nodeType":"569","messageId":"570","endLine":55,"endColumn":19},{"ruleId":"567","severity":1,"message":"642","line":78,"column":13,"nodeType":"569","messageId":"570","endLine":78,"endColumn":20},{"ruleId":"632","severity":1,"message":"633","line":101,"column":32,"nodeType":"634","messageId":"635","endLine":101,"endColumn":34},{"ruleId":"620","severity":1,"message":"621","line":133,"column":17,"nodeType":"622","messageId":"619","endLine":133,"endColumn":19},{"ruleId":"632","severity":1,"message":"633","line":173,"column":28,"nodeType":"634","messageId":"635","endLine":173,"endColumn":30},{"ruleId":"581","severity":1,"message":"652","line":217,"column":8,"nodeType":"583","endLine":217,"endColumn":65,"suggestions":"653"},{"ruleId":"567","severity":1,"message":"654","line":6,"column":9,"nodeType":"569","messageId":"570","endLine":6,"endColumn":15},{"ruleId":"567","severity":1,"message":"639","line":1,"column":28,"nodeType":"569","messageId":"570","endLine":1,"endColumn":37},{"ruleId":"567","severity":1,"message":"655","line":16,"column":7,"nodeType":"569","messageId":"570","endLine":16,"endColumn":15},{"ruleId":"567","severity":1,"message":"644","line":31,"column":11,"nodeType":"569","messageId":"570","endLine":31,"endColumn":19},{"ruleId":"567","severity":1,"message":"647","line":33,"column":12,"nodeType":"569","messageId":"570","endLine":33,"endColumn":21},{"ruleId":"567","severity":1,"message":"648","line":34,"column":12,"nodeType":"569","messageId":"570","endLine":34,"endColumn":19},{"ruleId":"632","severity":1,"message":"633","line":57,"column":36,"nodeType":"634","messageId":"635","endLine":57,"endColumn":38},{"ruleId":"581","severity":1,"message":"656","line":107,"column":10,"nodeType":"583","endLine":120,"endColumn":10,"suggestions":"657"},{"ruleId":"581","severity":1,"message":"658","line":108,"column":11,"nodeType":"659","endLine":108,"endColumn":29},{"ruleId":"581","severity":1,"message":"658","line":109,"column":11,"nodeType":"659","endLine":109,"endColumn":29},{"ruleId":"581","severity":1,"message":"658","line":110,"column":11,"nodeType":"659","endLine":110,"endColumn":29},{"ruleId":"581","severity":1,"message":"658","line":111,"column":11,"nodeType":"659","endLine":111,"endColumn":29},{"ruleId":"581","severity":1,"message":"658","line":112,"column":11,"nodeType":"659","endLine":112,"endColumn":29},{"ruleId":"581","severity":1,"message":"658","line":113,"column":11,"nodeType":"659","endLine":113,"endColumn":29},{"ruleId":"581","severity":1,"message":"658","line":114,"column":11,"nodeType":"659","endLine":114,"endColumn":29},{"ruleId":"581","severity":1,"message":"658","line":115,"column":11,"nodeType":"659","endLine":115,"endColumn":29},{"ruleId":"581","severity":1,"message":"658","line":116,"column":11,"nodeType":"659","endLine":116,"endColumn":29},{"ruleId":"581","severity":1,"message":"658","line":117,"column":11,"nodeType":"659","endLine":117,"endColumn":29},{"ruleId":"581","severity":1,"message":"658","line":118,"column":11,"nodeType":"659","endLine":118,"endColumn":29},{"ruleId":"567","severity":1,"message":"660","line":3,"column":5,"nodeType":"569","messageId":"570","endLine":3,"endColumn":26},{"ruleId":"632","severity":1,"message":"633","line":7,"column":30,"nodeType":"634","messageId":"635","endLine":7,"endColumn":32},{"ruleId":"567","severity":1,"message":"639","line":1,"column":28,"nodeType":"569","messageId":"570","endLine":1,"endColumn":37},{"ruleId":"567","severity":1,"message":"661","line":63,"column":9,"nodeType":"569","messageId":"570","endLine":63,"endColumn":16},{"ruleId":"567","severity":1,"message":"642","line":117,"column":13,"nodeType":"569","messageId":"570","endLine":117,"endColumn":20},{"ruleId":"567","severity":1,"message":"662","line":124,"column":11,"nodeType":"569","messageId":"570","endLine":124,"endColumn":22},{"ruleId":"663","severity":1,"message":"664","line":131,"column":5,"nodeType":"665","messageId":"666","endLine":165,"endColumn":6},{"ruleId":"632","severity":1,"message":"633","line":174,"column":30,"nodeType":"634","messageId":"635","endLine":174,"endColumn":32},{"ruleId":"567","severity":1,"message":"667","line":267,"column":28,"nodeType":"569","messageId":"570","endLine":267,"endColumn":32},{"ruleId":"567","severity":1,"message":"668","line":268,"column":28,"nodeType":"569","messageId":"570","endLine":268,"endColumn":32},{"ruleId":"567","severity":1,"message":"669","line":269,"column":28,"nodeType":"569","messageId":"570","endLine":269,"endColumn":32},{"ruleId":"567","severity":1,"message":"670","line":270,"column":28,"nodeType":"569","messageId":"570","endLine":270,"endColumn":32},{"ruleId":"567","severity":1,"message":"671","line":271,"column":28,"nodeType":"569","messageId":"570","endLine":271,"endColumn":32},{"ruleId":"567","severity":1,"message":"672","line":272,"column":28,"nodeType":"569","messageId":"570","endLine":272,"endColumn":32},{"ruleId":"567","severity":1,"message":"673","line":273,"column":38,"nodeType":"569","messageId":"570","endLine":273,"endColumn":47},{"ruleId":"581","severity":1,"message":"674","line":287,"column":6,"nodeType":"583","endLine":296,"endColumn":18,"suggestions":"675"},{"ruleId":"567","severity":1,"message":"676","line":39,"column":7,"nodeType":"569","messageId":"570","endLine":39,"endColumn":22},{"ruleId":"567","severity":1,"message":"644","line":55,"column":9,"nodeType":"569","messageId":"570","endLine":55,"endColumn":17},{"ruleId":"632","severity":1,"message":"633","line":95,"column":29,"nodeType":"634","messageId":"635","endLine":95,"endColumn":31},{"ruleId":"632","severity":1,"message":"633","line":191,"column":27,"nodeType":"634","messageId":"635","endLine":191,"endColumn":29},{"ruleId":"677","severity":1,"message":"678","line":212,"column":43,"nodeType":"659","messageId":"679","endLine":212,"endColumn":44,"fix":"680"},{"ruleId":"632","severity":1,"message":"681","line":327,"column":57,"nodeType":"634","messageId":"682","endLine":327,"endColumn":59},{"ruleId":"632","severity":1,"message":"681","line":353,"column":57,"nodeType":"634","messageId":"682","endLine":353,"endColumn":59},{"ruleId":"632","severity":1,"message":"681","line":379,"column":57,"nodeType":"634","messageId":"682","endLine":379,"endColumn":59},{"ruleId":"632","severity":1,"message":"681","line":405,"column":57,"nodeType":"634","messageId":"682","endLine":405,"endColumn":59},"no-native-reassign",["683"],"no-negated-in-lhs",["684"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'FirebaseContext' is defined but never used.","'adders' is assigned a value but never used.","'calculator' is assigned a value but never used.","'battery' is assigned a value but never used.","'cash' is assigned a value but never used.","'fee' is assigned a value but never used.","'guide' is assigned a value but never used.","'modules' is assigned a value but never used.","'users' is assigned a value but never used.","'authenticated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkStatus' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["685"],"React Hook useEffect has missing dependencies: 'checkUser' and 'dispatch'. Either include them or remove the dependency array.",["686"],"React Hook useEffect has missing dependencies: 'dispatch' and 'fetchUser'. Either include them or remove the dependency array.",["687"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["688"],"no-useless-rename","Destructuring assignment role unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"689","text":"690"},"'moreButtonRef' is assigned a value but never used.","'isMoreMenuOpen' is assigned a value but never used.","'HomeIcon' is defined but never used.","'TextsmsIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'handleWindowWidthChange'. Either include it or remove the dependency array.",["691"],"'InputBase' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'SearchIcon' is defined but never used.","'Badge' is defined but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'isSearchOpen' is assigned a value but never used.","'setSearchOpen' is assigned a value but never used.","'configureStore' is defined but never used.","'settingsRef' is assigned a value but never used.","'auth' is assigned a value but never used.","no-dupe-keys","Duplicate key 'photoURL'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'FETCH_CALCULATOR_UPDATE' is defined but never used.","'FETCH_ADDERS_UPDATE' is defined but never used.","'FETCH_BATTERY_UPDATE' is defined but never used.","'FETCH_CASH_UPDATE' is defined but never used.","'FETCH_GUIDE_UPDATE' is defined but never used.","'FETCH_SELFGEN_UPDATE' is defined but never used.","'FETCH_FEE_UPDATE' is defined but never used.","'FETCH_MODULE_UPDATE' is defined but never used.","'FETCH_USERS_UPDATE' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'SIDEBAR_OPEN' is defined but never used.","'SEARCH_OPEN' is defined but never used.","'store' is defined but never used.","'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","'setEditField' is assigned a value but never used.","'toastId' is assigned a value but never used.","'deletedConfirm' is assigned a value but never used.","'firebase' is assigned a value but never used.","'saveData' is assigned a value but never used.","'warnConfirm' is assigned a value but never used.","'editField' is assigned a value but never used.","'changes' is assigned a value but never used.","'key' is defined but never used.","'CloseIcon' is defined but never used.","'DropDownList' is defined but never used.","React Hook React.useEffect has missing dependencies: 'handleNotificationCall' and 'setData'. Either include them or remove the dependency array.",["692"],"'inEdit' is assigned a value but never used.","'calcData' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'formulas.info'. Either include it or remove the dependency array.",["693"],"React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'FETCH_FORMULAS_UPDATE' is defined but never used.","'classes' is assigned a value but never used.","'CloseButton' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'FF20' is assigned a value but never used.","'FF19' is assigned a value but never used.","'FF18' is assigned a value but never used.","'FF17' is assigned a value but never used.","'FF15' is assigned a value but never used.","'FF14' is assigned a value but never used.","'FFSelfGen' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'handleNotificationCall'. Either include it or remove the dependency array.",["694"],"'sweetAlertStyle' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","expectedDotBeforeProperty",{"range":"695","text":"696"},"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"697","fix":"698"},{"desc":"699","fix":"700"},{"desc":"701","fix":"702"},{"desc":"703","fix":"704"},[2753,2762],"role",{"desc":"705","fix":"706"},{"desc":"707","fix":"708"},{"desc":"709","fix":"710"},{"desc":"711","fix":"712"},[7381,7404],"\r\n                    .","Update the dependencies array to be: [checkStatus, dispatch]",{"range":"713","text":"714"},"Update the dependencies array to be: [auth.refinfo, checkUser, dispatch]",{"range":"715","text":"716"},"Update the dependencies array to be: [auth.check, dispatch, fetchUser]",{"range":"717","text":"718"},"Update the dependencies array to be: [auth.info, selfgen.info, dispatch, fetchCalculator, fetchAdders, fetchFormulas, fetchBattery, fetchCash, fetchFee, fetchModule, fetchSelfGen, fetchGuide, fetchUsers, authenticate, getData]",{"range":"719","text":"720"},"Update the dependencies array to be: [auth.info, handleWindowWidthChange]",{"range":"721","text":"722"},"Update the dependencies array to be: [auth.info.profile.allow, adders.info, calculator.info.C10, setData, handleNotificationCall]",{"range":"723","text":"724"},"Update the dependencies array to be: [calculator.info, formulas.info]",{"range":"725","text":"726"},"Update the dependencies array to be: [auth.info.profile, calculator.info, adders.info, formulas.info, cash.info, selfgen.info, battery.info, fee.info, modules.info, handleNotificationCall]",{"range":"727","text":"728"},[1526,1528],"[checkStatus, dispatch]",[1654,1668],"[auth.refinfo, checkUser, dispatch]",[1755,1767],"[auth.check, dispatch, fetchUser]",[2802,2969],"[auth.info, selfgen.info, dispatch, fetchCalculator, fetchAdders, fetchFormulas, fetchBattery, fetchCash, fetchFee, fetchModule, fetchSelfGen, fetchGuide, fetchUsers, authenticate, getData]",[3340,3351],"[auth.info, handleWindowWidthChange]",[7370,7427],"[auth.info.profile.allow, adders.info, calculator.info.C10, setData, handleNotificationCall]",[3834,4357],"[calculator.info, formulas.info]",[10016,10189],"[auth.info.profile, calculator.info, adders.info, formulas.info, cash.info, selfgen.info, battery.info, fee.info, modules.info, handleNotificationCall]"]