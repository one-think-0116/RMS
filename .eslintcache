[{"E:\\work\\firebase\\ProRMS\\src\\index.js":"1","E:\\work\\firebase\\ProRMS\\src\\serviceWorker.js":"2","E:\\work\\firebase\\ProRMS\\src\\components\\Firebase\\context.js":"3","E:\\work\\firebase\\ProRMS\\src\\components\\App.js":"4","E:\\work\\firebase\\ProRMS\\src\\context\\UserContext.js":"5","E:\\work\\firebase\\ProRMS\\src\\context\\LayoutContext.js":"6","E:\\work\\firebase\\ProRMS\\src\\themes\\index.js":"7","E:\\work\\firebase\\ProRMS\\src\\themes\\default.js":"8","E:\\work\\firebase\\ProRMS\\src\\pages\\error\\Error.js":"9","E:\\work\\firebase\\ProRMS\\src\\pages\\login\\Login.js":"10","E:\\work\\firebase\\ProRMS\\src\\components\\Layout\\Layout.js":"11","E:\\work\\firebase\\ProRMS\\src\\pages\\login\\styles.js":"12","E:\\work\\firebase\\ProRMS\\src\\pages\\guide\\index.js":"13","E:\\work\\firebase\\ProRMS\\src\\pages\\users\\index.js":"14","E:\\work\\firebase\\ProRMS\\src\\pages\\guide\\renderers.js":"15","E:\\work\\firebase\\ProRMS\\src\\pages\\users\\components\\userCard.js":"16","E:\\work\\firebase\\ProRMS\\src\\components\\Widget\\Widget.js":"17","E:\\work\\firebase\\ProRMS\\src\\components\\PageTitle\\PageTitle.js":"18","E:\\work\\firebase\\ProRMS\\src\\components\\Widget\\styles.js":"19","E:\\work\\firebase\\ProRMS\\src\\components\\PageTitle\\styles.js":"20","E:\\work\\firebase\\ProRMS\\src\\components\\Wrappers\\Wrappers.js":"21","E:\\work\\firebase\\ProRMS\\src\\components\\Layout\\styles.js":"22","E:\\work\\firebase\\ProRMS\\src\\pages\\error\\styles.js":"23","E:\\work\\firebase\\ProRMS\\src\\pages\\charts\\Charts.js":"24","E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\Dashboard.js":"25","E:\\work\\firebase\\ProRMS\\src\\pages\\tables\\Tables.js":"26","E:\\work\\firebase\\ProRMS\\src\\pages\\maps\\Maps.js":"27","E:\\work\\firebase\\ProRMS\\src\\pages\\icons\\Icons.js":"28","E:\\work\\firebase\\ProRMS\\src\\pages\\typography\\Typography.js":"29","E:\\work\\firebase\\ProRMS\\src\\pages\\notifications\\Notifications.js":"30","E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\Sidebar.js":"31","E:\\work\\firebase\\ProRMS\\src\\components\\Header\\Header.js":"32","E:\\work\\firebase\\ProRMS\\src\\pages\\formulas\\index.js":"33","E:\\work\\firebase\\ProRMS\\src\\pages\\calculator\\index.js":"34","E:\\work\\firebase\\ProRMS\\src\\pages\\adders\\index.js":"35","E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\mock.js":"36","E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\styles.js":"37","E:\\work\\firebase\\ProRMS\\src\\pages\\charts\\components\\ApexLineChart.js":"38","E:\\work\\firebase\\ProRMS\\src\\pages\\charts\\components\\ApexHeatmap.js":"39","E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\styles.js":"40","E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\components\\Dot.js":"41","E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"42","E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"43","E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\components\\Table\\Table.js":"44","E:\\work\\firebase\\ProRMS\\src\\pages\\notifications\\styles.js":"45","E:\\work\\firebase\\ProRMS\\src\\pages\\adders\\renderers.js":"46","E:\\work\\firebase\\ProRMS\\src\\components\\Header\\styles.js":"47","E:\\work\\firebase\\ProRMS\\src\\components\\Notification\\Notification.js":"48","E:\\work\\firebase\\ProRMS\\src\\pages\\adders\\styles.js":"49","E:\\work\\firebase\\ProRMS\\src\\components\\UserAvatar\\UserAvatar.js":"50","E:\\work\\firebase\\ProRMS\\src\\pages\\formulas\\renderers.js":"51","E:\\work\\firebase\\ProRMS\\src\\pages\\calculator\\styles.js":"52","E:\\work\\firebase\\ProRMS\\src\\pages\\typography\\styles.js":"53","E:\\work\\firebase\\ProRMS\\src\\pages\\maps\\styles.js":"54","E:\\work\\firebase\\ProRMS\\src\\pages\\icons\\styles.js":"55","E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"56","E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"57","E:\\work\\firebase\\ProRMS\\src\\components\\UserAvatar\\styles.js":"58","E:\\work\\firebase\\ProRMS\\src\\components\\Notification\\styles.js":"59","E:\\work\\firebase\\ProRMS\\src\\pages\\fee\\index.js":"60","E:\\work\\firebase\\ProRMS\\src\\pages\\fee\\myCommandCell.js":"61","E:\\work\\firebase\\ProRMS\\src\\pages\\fee\\styles.js":"62","E:\\work\\firebase\\ProRMS\\src\\pages\\adders\\customCell.js":"63","E:\\work\\firebase\\ProRMS\\src\\pages\\cash\\index.js":"64","E:\\work\\firebase\\ProRMS\\src\\pages\\cash\\myCommandCell.js":"65","E:\\work\\firebase\\ProRMS\\src\\pages\\cash\\styles.js":"66"},{"size":1059,"mtime":1617873117858,"results":"67","hashOfConfig":"68"},{"size":5083,"mtime":1617806107463,"results":"69","hashOfConfig":"68"},{"size":824,"mtime":1617818424189,"results":"70","hashOfConfig":"68"},{"size":1787,"mtime":1618144238023,"results":"71","hashOfConfig":"68"},{"size":4552,"mtime":1617979691175,"results":"72","hashOfConfig":"68"},{"size":1444,"mtime":1617814054688,"results":"73","hashOfConfig":"68"},{"size":534,"mtime":1617806107523,"results":"74","hashOfConfig":"68"},{"size":3127,"mtime":1617806107523,"results":"75","hashOfConfig":"68"},{"size":1626,"mtime":1617806107435,"results":"76","hashOfConfig":"68"},{"size":4676,"mtime":1620251790805,"results":"77","hashOfConfig":"68"},{"size":3275,"mtime":1620806150211,"results":"78","hashOfConfig":"68"},{"size":3243,"mtime":1618841798560,"results":"79","hashOfConfig":"68"},{"size":5167,"mtime":1620248784108,"results":"80","hashOfConfig":"68"},{"size":20797,"mtime":1620251394439,"results":"81","hashOfConfig":"68"},{"size":2400,"mtime":1617900557352,"results":"82","hashOfConfig":"68"},{"size":2332,"mtime":1618144140950,"results":"83","hashOfConfig":"68"},{"size":2567,"mtime":1618144423692,"results":"84","hashOfConfig":"68"},{"size":447,"mtime":1617806107263,"results":"85","hashOfConfig":"68"},{"size":1015,"mtime":1617806107388,"results":"86","hashOfConfig":"68"},{"size":482,"mtime":1617806107263,"results":"87","hashOfConfig":"68"},{"size":3971,"mtime":1617806107388,"results":"88","hashOfConfig":"68"},{"size":710,"mtime":1617806107248,"results":"89","hashOfConfig":"68"},{"size":1395,"mtime":1617806107435,"results":"90","hashOfConfig":"68"},{"size":5790,"mtime":1617806107388,"results":"91","hashOfConfig":"68"},{"size":16126,"mtime":1617806107404,"results":"92","hashOfConfig":"68"},{"size":2146,"mtime":1617806107460,"results":"93","hashOfConfig":"68"},{"size":1010,"mtime":1617806107451,"results":"94","hashOfConfig":"68"},{"size":391433,"mtime":1617806107451,"results":"95","hashOfConfig":"68"},{"size":4632,"mtime":1617806107462,"results":"96","hashOfConfig":"68"},{"size":13862,"mtime":1618139771203,"results":"97","hashOfConfig":"68"},{"size":4508,"mtime":1620805678766,"results":"98","hashOfConfig":"68"},{"size":10827,"mtime":1618144289389,"results":"99","hashOfConfig":"68"},{"size":34184,"mtime":1620985516773,"results":"100","hashOfConfig":"68"},{"size":46233,"mtime":1620985485033,"results":"101","hashOfConfig":"68"},{"size":15175,"mtime":1620337435750,"results":"102","hashOfConfig":"68"},{"size":4288,"mtime":1617806107435,"results":"103","hashOfConfig":"68"},{"size":3000,"mtime":1617806107435,"results":"104","hashOfConfig":"68"},{"size":1396,"mtime":1617806107388,"results":"105","hashOfConfig":"68"},{"size":1909,"mtime":1617806107388,"results":"106","hashOfConfig":"68"},{"size":1363,"mtime":1617806107263,"results":"107","hashOfConfig":"68"},{"size":902,"mtime":1617806107263,"results":"108","hashOfConfig":"68"},{"size":4160,"mtime":1617806107435,"results":"109","hashOfConfig":"68"},{"size":3604,"mtime":1617806107263,"results":"110","hashOfConfig":"68"},{"size":1323,"mtime":1617806107435,"results":"111","hashOfConfig":"68"},{"size":1943,"mtime":1617806107460,"results":"112","hashOfConfig":"68"},{"size":2534,"mtime":1619346943148,"results":"113","hashOfConfig":"68"},{"size":4043,"mtime":1617806107248,"results":"114","hashOfConfig":"68"},{"size":3413,"mtime":1617806107248,"results":"115","hashOfConfig":"68"},{"size":1943,"mtime":1617806107460,"results":"116","hashOfConfig":"68"},{"size":620,"mtime":1617806107263,"results":"117","hashOfConfig":"68"},{"size":2400,"mtime":1617904076902,"results":"118","hashOfConfig":"68"},{"size":1943,"mtime":1617806107460,"results":"119","hashOfConfig":"68"},{"size":389,"mtime":1617806107463,"results":"120","hashOfConfig":"68"},{"size":178,"mtime":1617806107451,"results":"121","hashOfConfig":"68"},{"size":812,"mtime":1617806107451,"results":"122","hashOfConfig":"68"},{"size":1341,"mtime":1617806107263,"results":"123","hashOfConfig":"68"},{"size":1075,"mtime":1617806107435,"results":"124","hashOfConfig":"68"},{"size":291,"mtime":1617806107263,"results":"125","hashOfConfig":"68"},{"size":1040,"mtime":1617806107263,"results":"126","hashOfConfig":"68"},{"size":9886,"mtime":1620249417192,"results":"127","hashOfConfig":"68"},{"size":1323,"mtime":1620249468905,"results":"128","hashOfConfig":"68"},{"size":1943,"mtime":1620204199925,"results":"129","hashOfConfig":"68"},{"size":1387,"mtime":1620337983480,"results":"130","hashOfConfig":"68"},{"size":9941,"mtime":1620807027363,"results":"131","hashOfConfig":"68"},{"size":1335,"mtime":1620807176772,"results":"132","hashOfConfig":"68"},{"size":1943,"mtime":1620806418137,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"1e7fq2r",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"136"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"136"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"136"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"136"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"136"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"136"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"136"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"136"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"136"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"136"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"E:\\work\\firebase\\ProRMS\\src\\index.js",[],["277","278"],"E:\\work\\firebase\\ProRMS\\src\\serviceWorker.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Firebase\\context.js",["279"],"\r\nimport React, { createContext } from 'react'\r\nimport app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/firestore';\r\nconst FirebaseContext = createContext(null)\r\nexport { FirebaseContext }\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  };\r\nexport default ({ children }) => {\r\n    if (!app.apps.length) {\r\n      app.initializeApp(config);\r\n    }\r\n    return (\r\n      <FirebaseContext.Provider value={ app }>\r\n        { children }\r\n      </FirebaseContext.Provider>\r\n    )\r\n  }\r\n","E:\\work\\firebase\\ProRMS\\src\\components\\App.js",[],"E:\\work\\firebase\\ProRMS\\src\\context\\UserContext.js",[],"E:\\work\\firebase\\ProRMS\\src\\context\\LayoutContext.js",[],"E:\\work\\firebase\\ProRMS\\src\\themes\\index.js",[],"E:\\work\\firebase\\ProRMS\\src\\themes\\default.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\error\\Error.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\login\\Login.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Layout\\Layout.js",["280","281","282","283","284","285"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\nimport Maps from \"../../pages/maps\";\r\nimport Tables from \"../../pages/tables\";\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\nimport Calculator from \"../../pages/calculator\";\r\nimport Adder from \"../../pages/adders\";\r\nimport Formulas from \"../../pages/formulas\";\r\nimport Users from \"../../pages/users\";\r\nimport Guide from \"../../pages/guide\";\r\nimport Fee from \"../../pages/fee\";\r\nimport Cash from \"../../pages/cash\";\r\n\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\n//jwt\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n              <Route path=\"/app/calculator\" component={Calculator} />\r\n              <Route path=\"/app/adders\" component={Adder} />\r\n              {/* <Route path=\"/app/typography\" component={Typography} /> */}\r\n              {/* <Route path=\"/app/tables\" component={Tables} /> */}\r\n              {/* <Route path=\"/app/notifications\" component={Notifications} /> */}\r\n              <PrivateRoute path=\"/app/dashboard\" component={Dashboard} />\r\n              <PrivateRoute path=\"/app/formulas\" component={Formulas} />\r\n              <PrivateRoute path=\"/app/users\" component={Users} />\r\n              <PrivateRoute path=\"/app/guide\" component={Guide} />\r\n              <PrivateRoute path=\"/app/fee\" component={Fee} />\r\n              <PrivateRoute path=\"/app/cash\" component={Cash} />\r\n              {/* <Route\r\n                exact\r\n                path=\"/app/ui\"\r\n                render={() => <Redirect to=\"/app/ui/icons\" />}\r\n              />\r\n              <Route path=\"/app/ui/maps\" component={Maps} />\r\n              <Route path=\"/app/ui/icons\" component={Icons} />\r\n              <Route path=\"/app/ui/charts\" component={Charts} /> */}\r\n            </Switch>\r\n            \r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route {...rest} render={(props) => \r\n    {\r\n      var decoded;\r\n      if(localStorage.getItem('token')){\r\n        decoded = jwt_decode(localStorage.getItem('token'))\r\n      }\r\n      return (\r\n        decoded.role === \"admin\"\r\n          ? <Component {...props} />\r\n          : <Redirect to={{\r\n              pathname: '/app/calculator',\r\n              state: { from: props.location }\r\n            }} />\r\n      )\r\n    }} />\r\n)\r\n\r\nexport default withRouter(Layout);\r\n","E:\\work\\firebase\\ProRMS\\src\\pages\\login\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\guide\\index.js",["286","287","288","289","290","291","292"],"import React ,{useContext} from \"react\";\r\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\r\nimport { Renderers } from './renderers.js';\r\nimport {\r\n    Paper,\r\n    Grid as MaterialGrid,\r\n  } from '@material-ui/core';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { useLoading, ThreeDots} from '@agney/react-loading';\r\nimport { FirebaseContext } from '../../components/Firebase/context';\r\n\r\nexport default function Guide(){\r\n    const { containerProps, indicatorEl } = useLoading({\r\n        loading: true,\r\n        indicator: <ThreeDots width=\"50\" />,\r\n      });\r\n    const [loading, setLoading] = React.useState(true);\r\n    const firebase = useContext(FirebaseContext);\r\n    const [data, setData] = React.useState([]);\r\n    const [editField, setEditField] = React.useState(undefined);\r\n    const [changes, setChanges] = React.useState(false);\r\n\r\n    const enterEdit = (dataItem, field) => {\r\n        const newdata = data.map(item => ({\r\n                ...item,\r\n                inEdit: item.id === dataItem.id ? field : undefined\r\n            })\r\n        );\r\n            setData(newdata);\r\n            setEditField(field);\r\n    }\r\n\r\n    const exitEdit = () => {\r\n        const newdata = data.map(item => (\r\n            { ...item, inEdit: undefined }\r\n            ));\r\n            setData(newdata);\r\n            setEditField(undefined);\r\n            firebase.firestore().collection(\"guide\")\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                var docs = querySnapshot.docs;\r\n                if(docs.length > 0) //update documentation\r\n                {\r\n                    var updateData = {};\r\n                    updateData.data = [];\r\n                    newdata.map((item) => {\r\n                        const {temp,inEdit,...ndata} = item;\r\n                        updateData.data.push(ndata);\r\n                    })\r\n                    firebase.firestore().collection(\"guide\").doc(docs[0].id).update(updateData).then(() => {\r\n                        console.log(\"guide Document successfully update!\");\r\n                    })\r\n                }else{\r\n                    var updateData = {};\r\n                    updateData.data = [];\r\n                    newdata.map((item) => {\r\n                        const {temp,inEdit,...ndata} = item;\r\n                        updateData.data.push(ndata);\r\n                    })\r\n                    firebase.firestore().collection(\"guide\").add(updateData).then(() => {\r\n                        console.log(\"guide Document successfully add!\");\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    const itemChange = (event) => {\r\n        event.dataItem[event.field] = event.value;\r\n        const newdata = data.map(item => {\r\n            var temp = {};\r\n            var key = event.dataItem[event.field];\r\n            temp[key] = event.value;\r\n            return {...item,temp};\r\n            }\r\n        );\r\n        setData(newdata);\r\n        setChanges(true);\r\n    }\r\n    const renderers =  new Renderers(enterEdit, exitEdit, 'inEdit');\r\n    React.useEffect(() => {\r\n        firebase.firestore().collection(\"guide\").get().then((query) => {\r\n            if(query.docs.length === 1){\r\n                query.forEach((doc) => {\r\n                    setData(doc.data().data)\r\n                    setLoading(false);\r\n                  })\r\n            }else{\r\n                let initialData = [];\r\n                let tempRowData = {};\r\n                let key;\r\n                for(var i = 0;i < 25; i++){\r\n                    tempRowData = {};\r\n                    tempRowData.id = i+1;\r\n                    tempRowData.A = \"\";\r\n                    tempRowData.A = \"\";\r\n                    initialData.push(tempRowData);\r\n                }\r\n                setData(initialData);\r\n                setLoading(false); \r\n            }\r\n          \r\n        })\r\n      }, [])\r\n      return(\r\n        <>\r\n            {loading ?    \r\n            <section {...containerProps} style={{textAlign:\"center\",marginTop:window.innerHeight/2 - 100}}>\r\n                {indicatorEl} {/* renders only while loading */}\r\n            </section> :\r\n            <MaterialGrid item xs={12}>\r\n                <Widget title=\"Guide\">\r\n                <Paper style={{}}>\r\n                    <Grid\r\n                        style={{ height: '900px' }}\r\n                        data={data}\r\n                        rowHeight={20}\r\n                        onItemChange={itemChange}\r\n\r\n                        cellRender={renderers.cellRender}\r\n                        rowRender={renderers.rowRender}\r\n                        navigatable={true}\r\n                        resizable={true}\r\n                        editField=\"inEdit\"\r\n                        >\r\n                        <Column field=\"id\" title=\"Id\" width=\"50px\" editable={false} auto locked={true}/>\r\n                        <Column title=\"A\" width=\"300px\" field=\"A\" />\r\n                        <Column title=\"B\" width=\"1200px\" editor=\"text\" field=\"B\" />\r\n                    </Grid>\r\n                </Paper>\r\n                </Widget>\r\n            </MaterialGrid>\r\n            }\r\n        </>\r\n      )\r\n}\r\n","E:\\work\\firebase\\ProRMS\\src\\pages\\users\\index.js",["293","294","295","296","297","298","299"],"\r\nimport React , { useEffect, useState,useContext }from \"react\";\r\nimport {\r\n  Grid,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { DragDropContext,Droppable,Draggable   } from 'react-beautiful-dnd';\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport \"../users/style.css\"\r\nimport UserCard from \"./components/userCard\";\r\nimport Modal from 'react-awesome-modal';\r\nimport { DatePicker } from '@progress/kendo-react-dateinputs';\r\nimport { FirebaseContext } from '../../components/Firebase/context';\r\nimport { useLoading, ThreeDots} from '@agney/react-loading';\r\n\r\n// data\r\n\r\n// const finalUsers = [\r\n//   {\r\n//     id: 'h',\r\n//     club:\"Bronze\",\r\n//     teamName:\"Arizona\",\r\n//     name: 'Jeff Stover',\r\n//     email: 'onethink016@gmail.com',\r\n//     systemNumber: 'AZ/TX',\r\n//     evaluationDate:\"12/31/20\",\r\n//     lastQtrlySales:6,\r\n//     nextEvaluationDate:\"3/31/21\",\r\n//     allow:true,\r\n//     other:\"\"\r\n//   },\r\n//   {\r\n//     id: 'b',\r\n//     club:\"Bronze\",\r\n//     teamName:\"Texas\",\r\n//     name: 'Eric Nazzal',\r\n//     email: 'onethink0162@gmail.com',\r\n//     systemNumber: 'TX',\r\n//     evaluationDate:\"12/31/20\",\r\n//     lastQtrlySales:\"Door Knocker\",\r\n//     nextEvaluationDate:\"3/31/21\",\r\n//     allow:true,\r\n//     other:\"Door Knocker\"\r\n//   },\r\n//   {\r\n//     id: 'c',\r\n//     club:\"Silver\",\r\n//     teamName:\"Texas\",\r\n//     name: 'Chandler Brooks',\r\n//     email: 'odnethink016@gmail.com',\r\n//     systemNumber: 'TX',\r\n//     evaluationDate:\"12/31/20\",\r\n//     lastQtrlySales:6,\r\n//     nextEvaluationDate:\"3/31/21\",\r\n//     allow:true,\r\n//     other:\"\"\r\n//   },\r\n//   {\r\n//     id: 'a',\r\n//     club:\"Silver\",\r\n//     teamName:\"Texas\",\r\n//     name: 'Peter Kim',\r\n//     email: 'onethink0146@gmail.com',\r\n//     systemNumber: 'TX',\r\n//     evaluationDate:\"12/31/20\",\r\n//     lastQtrlySales:6,\r\n//     nextEvaluationDate:\"3/31/21\",\r\n//     allow:true,\r\n//     other:\"\"\r\n//   },\r\n//   {\r\n//     id: 'f',\r\n//     club:\"Chairman\",\r\n//     teamName:\"Texas\",\r\n//     name: 'Tim Chung',\r\n//     email: 'onethink0616@gmail.com',\r\n//     systemNumber: 'AZ/TX - remote',\r\n//     evaluationDate:\"12/31/20\",\r\n//     lastQtrlySales:\"CC 8-12/mo\",\r\n//     nextEvaluationDate:\"3/31/21\",\r\n//     allow:true,\r\n//     other:\"\"\r\n//   },\r\n//   {\r\n//     id: 'd',\r\n//     club:\"Pending\",\r\n//     teamName:\"Pending\",\r\n//     name: 'secret',\r\n//     email: 'onethink01609@gmail.com',\r\n//     systemNumber: '',\r\n//     evaluationDate:\"12/31/20\",\r\n//     lastQtrlySales:\"\",\r\n//     nextEvaluationDate:\"12/31/20\",\r\n//     allow:false,\r\n//     other:\"\"\r\n//   },\r\n// ]\r\n\r\nlet selectedUserEmail;\r\nexport default function Users() {\r\n  const { containerProps, indicatorEl } = useLoading({\r\n    loading: true,\r\n    indicator: <ThreeDots width=\"50\" />,\r\n  });\r\n  const firebase = useContext(FirebaseContext);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [characters, updateCharacters] = useState([]);\r\n  const [team, setTeam] = React.useState('Arizona');\r\n  const [updateFlag, setUpdateFlag] = React.useState(false);\r\n  const [visible,setModal] = useState(false);\r\n  const [name,setName] = useState(\"\");\r\n  const [systemNumber,setSystemNumber] = useState('TX');\r\n  const [evaluationDate,setEvaluationDate] = useState(\"\");\r\n  const [lastQtrlySales,setLastQtrlySales] = useState(\"\");\r\n  const [nextEvaluationDate,setNextEvaluationDate] = useState(\"\");\r\n  const [other,setOther] = useState(\"\");\r\n  const [dropInfo,setDropInfo] = useState({});\r\n  const openModal = () => {\r\n    console.log(\"ss\",systemNumber)\r\n   setModal(true);\r\n  }\r\n\r\n  const cancelModal = (e) => {\r\n    const items = Array.from(characters);\r\n    if(updateFlag){\r\n\r\n    }\r\n    else\r\n    {\r\n      const [reorderedItem] = items.splice(dropInfo.source.index, 1);\r\n      reorderedItem.club = dropInfo.source.droppableId;\r\n      if(dropInfo.source.droppableId === \"Pending\") reorderedItem.allow = false;\r\n      items.splice(dropInfo.destination.index, 0, reorderedItem);\r\n    }\r\n    setUpdateFlag(false);\r\n    setModal(false);\r\n    updateCharacters(items);\r\n  }\r\n  const okModal = (e) => {\r\n    console.log(\"s\",systemNumber)\r\n\r\n    const items = Array.from(characters);\r\n    if(updateFlag){\r\n      console.log(\"f\",selectedUserEmail)\r\n      characters.map((item) => {\r\n        if(item.email === selectedUserEmail){\r\n          item.teamName = team;\r\n          item.systemNumber = systemNumber;\r\n          if(typeof evaluationDate === \"object\"){\r\n            item.evaluationDate = evaluationDate.toLocaleDateString();\r\n          }\r\n          else item.evaluationDate = evaluationDate;\r\n          item.lastQtrlySales = lastQtrlySales;\r\n          if(typeof nextEvaluationDate === \"object\")\r\n          item.nextEvaluationDate = nextEvaluationDate.toLocaleDateString();\r\n          else item.nextEvaluationDate = nextEvaluationDate;\r\n          item.other = other;\r\n          \r\n          save(item);\r\n        }\r\n      })\r\n      setUpdateFlag(false);\r\n    }\r\n    else\r\n    {\r\n      const [reorderedItem] = items.splice(dropInfo.source.index, 1);\r\n      reorderedItem.club = dropInfo.destination.droppableId\r\n      reorderedItem.teamName = team;\r\n      reorderedItem.systemNumber = systemNumber;\r\n      if(typeof evaluationDate === \"object\"){\r\n        reorderedItem.evaluationDate = evaluationDate.toLocaleDateString();\r\n      }\r\n      else reorderedItem.evaluationDate = evaluationDate;\r\n      reorderedItem.lastQtrlySales = lastQtrlySales;\r\n      if(typeof nextEvaluationDate === \"object\")\r\n      reorderedItem.nextEvaluationDate = nextEvaluationDate.toLocaleDateString();\r\n      else reorderedItem.nextEvaluationDate = nextEvaluationDate;\r\n      reorderedItem.other = other;\r\n      items.splice(dropInfo.destination.index, 0, reorderedItem);\r\n      save(reorderedItem);\r\n    }\r\n    updateCharacters(items);\r\n    setModal(false);\r\n  }\r\n  const save = (data) => {\r\n    const {id,...saveData} = data;\r\n    firebase.firestore().collection(\"users\").where(\"email\",\"==\",saveData.email)\r\n    .get()\r\n    .then((querySnapshot) => {\r\n        var docs = querySnapshot.docs;\r\n        if(docs.length > 0) //update documentation\r\n        {\r\n            firebase.firestore().collection(\"users\").doc(docs[0].id).update(saveData).then(() => {\r\n                console.log(\"users Document successfully update!\");\r\n                firebase.firestore().collection(\"calculators\").where(\"email\",\"==\",saveData.email)\r\n                .get()\r\n                .then((querySnapshot) => {\r\n                    var docs1 = querySnapshot.docs;\r\n                    if(docs1.length > 0) //update documentation\r\n                    {\r\n                      var cData = {C3:saveData.systemNumber,C5:saveData.name,C6:saveData.club,allow:saveData.allow}\r\n                        firebase.firestore().collection(\"calculators\").doc(docs1[0].id).update(cData).then(() => {\r\n                            console.log(\"calculators Document successfully update!\");\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    })\r\n  }\r\n  const handleOnDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n    const items = Array.from(characters);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    if(result.destination.droppableId === \"Pending\"){\r\n      reorderedItem.allow = false;\r\n      reorderedItem.teamName = \"Pending\"\r\n      reorderedItem.systemNumber = \"\";\r\n      reorderedItem.club = result.destination.droppableId;\r\n      items.splice(result.destination.index, 0, reorderedItem);\r\n      updateCharacters(items);\r\n      save(reorderedItem);\r\n      console.log(\"p\",items);\r\n    }else{\r\n      reorderedItem.allow = true;\r\n      if(reorderedItem.teamName === \"Pending\") {setTeam(\"Arizona\");setSystemNumber(\"TX\")}\r\n      else {setTeam(reorderedItem.teamName);\r\n      setSystemNumber(reorderedItem.systemNumber)}\r\n      setName(reorderedItem.name)\r\n      setEvaluationDate(reorderedItem.evaluationDate)\r\n      setLastQtrlySales(reorderedItem.lastQtrlySales)\r\n\r\n      setNextEvaluationDate(reorderedItem.nextEvaluationDate)\r\n      setOther(reorderedItem.other);\r\n      setDropInfo(result);\r\n      openModal();\r\n    }\r\n  }\r\n  const systemChange = (event) => {\r\n    setSystemNumber(event.target.value);\r\n  }\r\n  const evaluationDateChange = (event) => {\r\n    setEvaluationDate(event.target.value)\r\n  }\r\n  const nextEvaluationDateChange = (event) => {\r\n    setNextEvaluationDate(event.target.value)\r\n  }\r\n  const teamChange = (event) => {\r\n    setTeam(event.target.value);\r\n  };\r\n  const salesChange = (event) => {\r\n    setLastQtrlySales(event.target.value);\r\n  };\r\n  const otherChange = (event) => {\r\n    setOther(event.target.value);\r\n  };\r\n  const update = (e) => {\r\n    console.log(\"update\")\r\n    setUpdateFlag(true);\r\n    let updateItem = {}; \r\n    characters.map((item) => {\r\n      if(item.id === e.target.id){\r\n        updateItem = item;\r\n      }\r\n    })\r\n    selectedUserEmail = updateItem.email;\r\n    if(updateItem.teamName === \"Pending\") setTeam(\"Pending\")\r\n    else setTeam(updateItem.teamName)\r\n    setName(updateItem.name)\r\n    setEvaluationDate(updateItem.evaluationDate)\r\n    setLastQtrlySales(updateItem.lastQtrlySales)\r\n    setSystemNumber(updateItem.systemNumber)\r\n    setNextEvaluationDate(updateItem.nextEvaluationDate)\r\n    setOther(updateItem.other);\r\n    // console.log(updateItem)\r\n    openModal();\r\n  }\r\n  useEffect(() => {\r\n    firebase.firestore().collection(\"users\").get().then((query) => {\r\n      var data = [];\r\n      var id = 0;\r\n      var temp = {};\r\n      query.forEach((doc) => {\r\n        // if(doc.data().role != \"admin\"){\r\n          temp = {};\r\n          id++;\r\n          temp =  doc.data();\r\n          temp.id = id.toString();\r\n          data.push(temp);\r\n        // }\r\n        \r\n      })\r\n      updateCharacters(data)\r\n      setLoading(false);\r\n    })\r\n  }, [])\r\n  return (\r\n    <>\r\n     {loading ?    \r\n            <section {...containerProps} style={{textAlign:\"center\",marginTop:window.innerHeight/2 - 100}}>\r\n                {indicatorEl} {/* renders only while loading */}\r\n            </section> :\r\n            <>\r\n            <PageTitle title=\"\" />\r\n            <Grid container spacing={4}>\r\n            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                <Droppable droppableId=\"Chairman\">\r\n                {(provided) => (\r\n                      <>\r\n                      <Grid item lg={3} md={6} sm={6} xs={12} {...provided.droppableProps} ref={provided.innerRef}>\r\n                        <Widget title=\"Chairman Club\">\r\n                        <ul  {...provided.droppableProps} ref={provided.innerRef} style={{listStyleType:\"none\",padding:\"1%\"}}>\r\n                          {characters.map((item, index) => {\r\n                            if(item.allow && item.club === \"Chairman\"){\r\n                                    return (\r\n                                      <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                        {(provided) => (\r\n                                          <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n                                            <UserCard info={item} update={update}/>\r\n                                          </li>\r\n                                        )}\r\n                                      </Draggable>\r\n                                    );\r\n                                  }\r\n                                })}\r\n                          </ul>\r\n                        </Widget>\r\n                        {provided.placeholder}\r\n                      </Grid>\r\n                      </>\r\n                    )}\r\n                </Droppable>\r\n                <Droppable droppableId=\"Silver\">\r\n                {(provided) => (\r\n                      <>\r\n                      <Grid item lg={3} md={6} sm={6} xs={12} {...provided.droppableProps} ref={provided.innerRef}>\r\n                        <Widget title=\"Silver Club\">\r\n                        <ul  {...provided.droppableProps} ref={provided.innerRef} style={{listStyleType:\"none\",padding:\"1%\"}}>\r\n                          {characters.map((item, index) => {\r\n                            if(item.allow && item.club === \"Silver\"){\r\n                                    return (\r\n                                      <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                        {(provided) => (\r\n                                          <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n                                            <UserCard info={item} update={update}/>\r\n                                          </li>\r\n                                        )}\r\n                                      </Draggable>\r\n                                    );\r\n                                  }\r\n                                })}\r\n                          </ul>\r\n                        </Widget>\r\n                        {provided.placeholder}\r\n                      </Grid>\r\n                      </>\r\n                    )}\r\n                </Droppable>\r\n                <Droppable droppableId=\"Bronze\">\r\n                {(provided) => (\r\n                      <>\r\n                      <Grid item lg={3} md={6} sm={6} xs={12} {...provided.droppableProps} ref={provided.innerRef}>\r\n                        <Widget title=\"Bronze Club\">\r\n                        <ul  {...provided.droppableProps} ref={provided.innerRef} style={{listStyleType:\"none\",padding:\"1%\"}}>\r\n                          {characters.map((item, index) => {\r\n                            if(item.allow && item.club === \"Bronze\"){\r\n                                    return (\r\n                                      <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                        {(provided) => (\r\n                                          <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n                                            <UserCard info={item} update={update}/>\r\n                                          </li>\r\n                                        )}\r\n                                      </Draggable>\r\n                                    );\r\n                                  }\r\n                                })}\r\n                          </ul>\r\n                        </Widget>\r\n                        {provided.placeholder}\r\n                      </Grid>\r\n                      </>\r\n                    )}\r\n                </Droppable>\r\n                <Droppable droppableId=\"Pending\">\r\n              {(provided) => (\r\n                      <>\r\n                      <Grid item lg={3} md={6} sm={6} xs={12}  {...provided.droppableProps} ref={provided.innerRef}>\r\n                        <Widget title=\"Pending\">\r\n                          <ul  {...provided.droppableProps} ref={provided.innerRef} style={{listStyleType:\"none\",padding:\"1%\"}}>\r\n                          {characters.map((item, index) => {\r\n                            if(!item.allow){\r\n                                    return (\r\n                                      <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                        {(provided) => (\r\n                                          <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n                                            <UserCard info={item} update={update}/>\r\n                                          </li>\r\n                                        )}\r\n                                      </Draggable>\r\n                                    );\r\n                                  }\r\n                                })}\r\n                          </ul>\r\n                        </Widget>\r\n                        {provided.placeholder}\r\n                      </Grid>\r\n                      </>\r\n                    )}\r\n                </Droppable>\r\n              </DragDropContext>\r\n            </Grid>\r\n            <Modal \r\n                visible={visible}\r\n                width=\"400\"\r\n                height=\"400\"\r\n                effect=\"fadeInUp\"\r\n                // onClickAway={() => closeModal()}\r\n            >\r\n                <div>\r\n                    <h1 className=\"center\" id=\"username\">{name}</h1>\r\n                    <div style={{display:\"flex\",marginTop:50}}>\r\n                      <Grid item xs={6} style={{textAlign: \"center\"}}>\r\n                        Select the team\r\n                      </Grid>\r\n                      <Grid item xs={6}  style={{textAlign: \"center\"}}>\r\n                      <select\r\n                          name=\"team\"\r\n                          value={team}\r\n                          onChange={teamChange}\r\n                          style={{textAlign: \"center\",}}\r\n                        >\r\n                          <option value={\"Arizona\"}>Arizona Team</option>\r\n                          <option value={\"Texas\"}>Texas Team</option>\r\n                        </select>\r\n                      </Grid>        \r\n                    </div>           \r\n                    <div style={{display:\"flex\",marginTop:15}}>\r\n                      <Grid item xs={6} style={{textAlign: \"center\"}}>\r\n                          System Number\r\n                      </Grid>\r\n                      <Grid item xs={6}  style={{textAlign: \"center\"}}>\r\n                        <select\r\n                          name=\"systemNumber\"\r\n                          value={systemNumber}\r\n                          onChange={systemChange}\r\n                          style={{textAlign: \"center\",}}\r\n                        >\r\n                          <option value={\"TX\"}>TX</option>\r\n                          <option value={\"AZ\"}>AZ</option>\r\n                          <option value={\"AZ/TX\"}>AZ/TX</option>\r\n                          <option value={\"AZ/TX - remote\"}>AZ/TX - remote</option>\r\n                          <option value={\"Remote (exiting)\"}>Remote (exiting)</option>\r\n                        </select>\r\n                      </Grid>        \r\n                    </div>\r\n                    \r\n                    <div style={{display:\"flex\",marginTop:15}}>\r\n                      <Grid item xs={6} style={{textAlign: \"center\"}}>\r\n                          Evaluation Date\r\n                      </Grid>\r\n                      <Grid item xs={6}  style={{textAlign: \"center\"}}>\r\n                        <DatePicker value={new Date(evaluationDate)} id=\"evaluationDate\" defaultShow={false} onChange={evaluationDateChange}/>\r\n                      </Grid>        \r\n                    </div>\r\n                    <div style={{display:\"flex\",marginTop:15}}>\r\n                      <Grid item xs={6} style={{textAlign: \"center\"}}>\r\n                        Last Qtrly Sales\r\n                      </Grid>\r\n                      <Grid item xs={6}  style={{textAlign: \"center\"}}>\r\n                        <input type=\"text\" defaultValue={lastQtrlySales} onChange={ salesChange}/>\r\n                      </Grid>        \r\n                    </div>\r\n                    <div style={{display:\"flex\",marginTop:15}}>\r\n                      <Grid item xs={6} style={{textAlign: \"center\"}}>\r\n                        Next Evaluation Date\r\n                      </Grid>\r\n                      <Grid item xs={6}  style={{textAlign: \"center\"}}>\r\n                        <DatePicker value={new Date(nextEvaluationDate)} defaultShow={false} onChange={nextEvaluationDateChange}/>\r\n                      </Grid>        \r\n                    </div>\r\n                    <div style={{display:\"flex\",marginTop:15}}>\r\n                      <Grid item xs={6} style={{textAlign: \"center\"}}>\r\n                        Other\r\n                      </Grid>\r\n                      <Grid item xs={6}  style={{textAlign: \"center\"}}>\r\n                        <input type=\"text\" defaultValue={other}  onChange={ otherChange}/>\r\n                      </Grid>        \r\n                    </div>\r\n                    <div style={{display:\"flex\",marginTop:15}}>\r\n                      <Grid item xs={6} style={{textAlign: \"center\"}}>\r\n                      <Button variant=\"outlined\" color=\"secondary\" onClick={cancelModal}>\r\n                        Cancel\r\n                      </Button>\r\n                      </Grid>\r\n                      <Grid item xs={6}  style={{textAlign: \"center\"}}>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={okModal}>\r\n                          Ok\r\n                        </Button>\r\n                      </Grid>        \r\n                    </div>\r\n                    \r\n\r\n                </div>\r\n            </Modal>\r\n      </>\r\n}\r\n\r\n    </>\r\n  );\r\n}\r\n","E:\\work\\firebase\\ProRMS\\src\\pages\\guide\\renderers.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\users\\components\\userCard.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Widget\\Widget.js",["300","301"],"import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\nexport default function Widget({\r\n  children,\r\n  title,\r\n  noBodyPadding,\r\n  bodyClass,\r\n  disableWidgetMenu,\r\n  header,\r\n  noHeaderPadding,\r\n  headerClass,\r\n  style,\r\n  noWidgetShadow,\r\n  ...props\r\n}) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [moreButtonRef, setMoreButtonRef] = useState(null);\r\n  var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.widgetWrapper} style={style && {...style}}>\r\n      <Paper className={classes.paper} classes={{ root: classnames(classes.widgetRoot, {\r\n        [classes.noWidgetShadow]: noWidgetShadow\r\n        }) }}>\r\n        <div className={classnames(classes.widgetHeader, {\r\n          [classes.noPadding]: noHeaderPadding,\r\n          [headerClass]: headerClass\r\n        })}>\r\n          {header ? (\r\n            header\r\n          ) : (\r\n            <React.Fragment>\r\n              <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\r\n                {title}\r\n              </Typography>\r\n              {!disableWidgetMenu && (\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  classes={{ root: classes.moreButton }}\r\n                  aria-owns=\"widget-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={() => setMoreMenuOpen(true)}\r\n                  buttonRef={setMoreButtonRef}\r\n                >\r\n                  <MoreIcon />\r\n                </IconButton>\r\n              )}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={classnames(classes.widgetBody, {\r\n            [classes.noPadding]: noBodyPadding,\r\n            [bodyClass]: bodyClass,\r\n          })}\r\n        >\r\n          {children}\r\n        </div>\r\n      </Paper>\r\n      {/* <Menu\r\n        id=\"widget-menu\"\r\n        open={isMoreMenuOpen}\r\n        anchorEl={moreButtonRef}\r\n        onClose={() => setMoreMenuOpen(false)}\r\n        disableAutoFocusItem\r\n      >\r\n        <MenuItem>\r\n          <Typography>Edit</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Copy</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Delete</Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography>Print</Typography>\r\n        </MenuItem>\r\n      </Menu> */}\r\n    </div>\r\n  );\r\n}\r\n","E:\\work\\firebase\\ProRMS\\src\\components\\PageTitle\\PageTitle.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Widget\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\PageTitle\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Wrappers\\Wrappers.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Layout\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\error\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\charts\\Charts.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\Dashboard.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\tables\\Tables.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\maps\\Maps.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\icons\\Icons.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\typography\\Typography.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\notifications\\Notifications.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\Sidebar.js",["302"],"import React, { useState, useEffect} from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  AttachMoney as AttachMoneyIcon,\r\n  PlaylistAdd as PlaylistAddIcon,\r\n  LibraryBooks as LibraryBooksIcon,\r\n  People as PeopleIcon,\r\n  MenuBook as MenuBookIcon,\r\n} from \"@material-ui/icons\";\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport LocalAtmSharpIcon from '@material-ui/icons/LocalAtmSharp';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n//firebase\r\n\r\n\r\nconst admin_structure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  { id: 1, label: \"Calculator\", link: \"/app/calculator\", icon: <AttachMoneyIcon /> },\r\n  { id: 2, label: \"Adders\", link: \"/app/adders\", icon: <PlaylistAddIcon /> },\r\n  { id: 3, type: \"divider\" },\r\n  { id: 7, label: \"Dealer Fee\", link: \"/app/fee\", icon: <ReceiptIcon /> },\r\n  { id: 8, label: \"Cash\", link: \"/app/cash\", icon: <LocalAtmSharpIcon /> },\r\n  { id: 4, label: \"Formulas\", link: \"/app/formulas\", icon: <LibraryBooksIcon /> },\r\n  { id: 5, label: \"Users\", link: \"/app/users\", icon: <PeopleIcon /> },\r\n  { id: 6, label: \"Guide\", link: \"/app/guide\", icon: <MenuBookIcon /> },\r\n];\r\nconst seller_structure = [\r\n  { id: 0, label: \"Calculator\", link: \"/app/calculator\", icon: <AttachMoneyIcon /> },\r\n  { id: 1, label: \"Adders\", link: \"/app/adders\", icon: <PlaylistAddIcon /> },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  //\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n  const [structure,setStructure] = useState(seller_structure);\r\n  useEffect(function() {\r\n    if(localStorage.getItem('token')){\r\n      const decoded = jwt_decode(localStorage.getItem('token'))\r\n      // console.log(decoded);\r\n      decoded.role === \"admin\"? setStructure(admin_structure) : setStructure(seller_structure);\r\n    }else{\r\n      setStructure(seller_structure)\r\n    }\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n      return (\r\n        <Drawer\r\n          variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n          className={classNames(classes.drawer, {\r\n            [classes.drawerOpen]: isSidebarOpened,\r\n            [classes.drawerClose]: !isSidebarOpened,\r\n          })}\r\n          classes={{\r\n            paper: classNames({\r\n              [classes.drawerOpen]: isSidebarOpened,\r\n              [classes.drawerClose]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          open={isSidebarOpened}\r\n        >\r\n          <div className={classes.toolbar} />\r\n          <div className={classes.mobileBackButton}>\r\n            <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n              <ArrowBackIcon\r\n                classes={{\r\n                  root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n                }}\r\n              />\r\n            </IconButton>\r\n          </div>\r\n          <List className={classes.sidebarList}>\r\n            {structure.map(link => (\r\n              <SidebarLink\r\n                key={link.id}\r\n                location={location}\r\n                isSidebarOpened={isSidebarOpened}\r\n                {...link}\r\n              />\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      );\r\n\r\n    // })\r\n  // })\r\n      // return null;\r\n      // ##################################################################\r\n      function handleWindowWidthChange() {\r\n        var windowWidth = window.innerWidth;\r\n        var breakpointWidth = theme.breakpoints.values.md;\r\n        var isSmallScreen = windowWidth < breakpointWidth;\r\n    \r\n        if (isSmallScreen && isPermanent) {\r\n          setPermanent(false);\r\n        } else if (!isSmallScreen && !isPermanent) {\r\n          setPermanent(true);\r\n        }\r\n      }\r\n  \r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","E:\\work\\firebase\\ProRMS\\src\\components\\Header\\Header.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\formulas\\index.js",["303","304","305","306","307","308","309","310","311"],"E:\\work\\firebase\\ProRMS\\src\\pages\\calculator\\index.js",["312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329"],"E:\\work\\firebase\\ProRMS\\src\\pages\\adders\\index.js",["330","331","332","333","334","335","336","337"],"import React ,{useContext} from \"react\";\r\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\r\nimport { Renderers } from './renderers.js';\r\nimport {\r\n    Paper,\r\n    Grid as MaterialGrid,\r\n  } from '@material-ui/core';\r\n  import Widget from \"../../components/Widget/Widget\";\r\n  import { useLoading, ThreeDots} from '@agney/react-loading';\r\n  \r\n  import { FirebaseContext } from '../../components/Firebase/context';\r\n\r\n  import Notification from \"../../components/Notification\";\r\n  import { ToastContainer, toast } from \"react-toastify\";\r\n  import { Close as CloseIcon } from \"@material-ui/icons\";\r\n    // styles\r\n    import \"react-toastify/dist/ReactToastify.css\";\r\n    import useStyles from \"./styles\";\r\n    import \"./style.css\"\r\n    import { DropDownList } from '@progress/kendo-react-dropdowns';\r\n    import { MyCustomCell } from './customCell';\r\n\r\n    function useAsyncState(initialValue) {\r\n      const [value, setValue] = React.useState(initialValue);\r\n      const setter = x =>\r\n        new Promise(resolve => {\r\n          setValue(x);\r\n          resolve(x);\r\n        });\r\n      return [value, setter];\r\n    }\r\nexport default function Adder(){\r\n    var classes = useStyles();\r\n    const { containerProps, indicatorEl } = useLoading({\r\n        loading: true,\r\n        indicator: <ThreeDots width=\"50\" />,\r\n      });\r\n    const [loading, setLoading] = React.useState(true);\r\n    const firebase = useContext(FirebaseContext);\r\n    const [data, setData] = useAsyncState([]);\r\n    const [systemSize, setSystemSize] = React.useState(0);\r\n    const [editField, setEditField] = React.useState(undefined);\r\n    const [changes, setChanges] = React.useState(false);\r\n    //#####################################toast########################################################\r\n    const sendNotification = (componentProps, options) => {\r\n        return toast(\r\n        <Notification\r\n            {...componentProps}\r\n            className={classes.notificationComponent}\r\n        />,\r\n        options,\r\n        );\r\n    }\r\n    const handleNotificationCall = () => {\r\n        var componentProps;\r\n    \r\n\r\n            componentProps = {\r\n              type: \"feedback\",\r\n              message: `You do not have permission to use it yet.\r\n                        Please contact your administrator`,\r\n              variant: \"contained\",\r\n              color: \"secondary\",\r\n            };\r\n            \r\n        var toastId = sendNotification(componentProps, {\r\n          type: \"error\",\r\n          position:  toast.POSITION.TOP_CENTER,\r\n          progressClassName: classes.progress,\r\n          className: classes.notification,\r\n        });\r\n    }\r\n          \r\n    //#####################################toast end########################################################\r\n    let CommandCell;\r\n    CommandCell = props => (\r\n      <MyCustomCell\r\n        {...props}\r\n        onchange={onchange}\r\n        editField={editField}\r\n        />\r\n    );\r\n    const getNum = (str) => {\r\n      if(typeof str === \"string\"){\r\n          var num;\r\n          if(str.indexOf(\",\") > -1){\r\n            var str_arr = str.split(\",\");\r\n            var tempStr = \"\";\r\n            str_arr.map((item) => {\r\n              tempStr += item;\r\n            })\r\n            num = parseFloat(tempStr)\r\n          }else{\r\n            num = parseFloat(str)\r\n          }\r\n          return num;\r\n      }else\r\n      {\r\n          return str;\r\n      }\r\n      \r\n    }\r\n    const enterEdit = (dataItem, field) => {\r\n        const newdata = data.map(item => ({\r\n                ...item,\r\n                inEdit: item.id === dataItem.id ? field : undefined\r\n            })\r\n        );\r\n            setData(newdata);\r\n            setEditField(field);\r\n    }\r\n    const onchange = (event) =>{\r\n      const idNumber = parseInt(event.target.props.id);\r\n      let changedValue;\r\n      if(typeof event.value === \"object\"){\r\n        changedValue = event.value.value;\r\n      }else{\r\n        changedValue = event.value;\r\n      }\r\n      const newData = data.map(item => (\r\n        item.id == idNumber ? { ...item, quantity: changedValue} : item\r\n      ))\r\n      asyncUpdate(newData);\r\n    }\r\n    async function asyncUpdate(nData) {\r\n      const resultData = await setData(nData)\r\n      core(resultData);\r\n    }\r\n    const core = (currentData) => {\r\n      const newdata = currentData.map(item => (\r\n        { ...item, inEdit: undefined }\r\n        ));\r\n        var sum = 0;\r\n        for(var i = 0;i < 21;i++)\r\n        {\r\n          newdata[i].sales_cash_price = parseFloat(newdata[i].sales_cash_price);\r\n          switch(newdata[i].scale){\r\n            case \"per watt add-on\":\r\n                if(newdata[i].quantity === \"Yes\") newdata[i].total =newdata[i].sales_cash_price * systemSize;\r\n                else newdata[i].total = 0;\r\n              break;\r\n            case \"Added price\":\r\n                if(newdata[i].quantity === \"Yes\") newdata[i].total =newdata[i].sales_cash_price;\r\n                else newdata[i].total = 0;\r\n              break;\r\n            case \"per foot\":\r\n                newdata[i].total = newdata[i].sales_cash_price * newdata[i].quantity;\r\n              break;\r\n            default:\r\n              newdata[i].total = newdata[i].sales_cash_price * newdata[i].quantity;\r\n              break;\r\n          }\r\n          sum += newdata[i].total;\r\n        }\r\n        newdata[22].total = sum;\r\n        setData(newdata);\r\n        // console.log(newdata)\r\n        setEditField(undefined);\r\n        firebase.firestore().collection(\"adders\").where(\"email\",\"==\",localStorage.getItem(\"email\"))\r\n        .get()\r\n        .then((querySnapshot) => {\r\n            var docs = querySnapshot.docs;\r\n            if(docs.length > 0) //update documentation\r\n            {\r\n                var updateData = {};\r\n                updateData.email = localStorage.getItem(\"email\");\r\n                updateData.data = [];\r\n                newdata.map((item) => {\r\n                    const {temp,inEdit,...ndata} = item;\r\n                    updateData.data.push(ndata);\r\n                })\r\n                firebase.firestore().collection(\"adders\").doc(docs[0].id).update(updateData).then(() => {\r\n                    console.log(\"adders Document successfully update!\");\r\n                    firebase.firestore().collection(\"calculators\").where(\"email\",\"==\",localStorage.getItem(\"email\"))\r\n                    .get()\r\n                    .then((querySnapshot) => {\r\n                        var docs = querySnapshot.docs;\r\n                        if(docs.length > 0) //update documentation\r\n                        {\r\n                            var newCalcData = {C18:sum.toString()};\r\n                            firebase.firestore().collection(\"calculators\").doc(docs[0].id).update(newCalcData).then(() => {\r\n                                console.log(\"calculators Document successfully update!\");\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    } \r\n    const exitEdit = () => {\r\n      core(data)\r\n    }\r\n\r\n    const itemChange = (event) => {\r\n      event.dataItem[event.field] = event.value;\r\n      // console.log(\"itemchange\",event)\r\n        const newdata = data.map(item => {\r\n            // var temp = {};\r\n            // var key = event.dataItem[event.field];\r\n            // temp[key] = event.value;\r\n            // return {...item,temp};\r\n            return {...item}\r\n            }\r\n        );\r\n        // console.log(newdata)\r\n        setData(newdata);\r\n        setChanges(true);\r\n    }\r\n    // const quantityChange = (qdata) => {\r\n    //   qdata.dataItem[qdata.field] = qdata.value;\r\n    // }\r\n    const renderers =  new Renderers(enterEdit, exitEdit, 'inEdit');\r\n    React.useEffect(() => {\r\n\r\n        firebase.firestore().collection(\"users\").where(\"email\",\"==\",localStorage.getItem(\"email\")).get().then((query) => {\r\n            query.forEach((doc) => {\r\n              if(doc.data().allow)\r\n              {\r\n                firebase.firestore().collection(\"adders\").where(\"email\",\"==\",localStorage.getItem(\"email\")).get().then((query) => {\r\n                  query.forEach((doc) => {\r\n                    //   console.log(doc.data().data[0]);\r\n                    // var em = [];\r\n                    // em.push(doc.data().data[0])\r\n                    // setData(em)\r\n                    firebase.firestore().collection(\"calculators\").where(\"email\",\"==\",localStorage.getItem(\"email\")).get().then((query) => {\r\n                      query.forEach((doc) => {\r\n                        setSystemSize(getNum(doc.data().C10))\r\n                      })\r\n                    })\r\n                    const newdata = doc.data().data.map(item => {\r\n                      if(item.scale === \"per watt add-on\" || item.scale === \"Added price\"){\r\n                        if(item.quantity === \"Yes\") return item;\r\n                        else return {...item,quantity:\"No\"};\r\n                      }else{\r\n                        return item;\r\n                      }\r\n                    })\r\n                    setData(newdata)\r\n                    setLoading(false);\r\n                  })\r\n                })\r\n              }else{\r\n                handleNotificationCall();\r\n              }\r\n            })\r\n          })\r\n        \r\n      }, [])\r\n\r\n      return(\r\n        <>\r\n            <ToastContainer \r\n                className={classes.toastsContainer}\r\n            />\r\n            {loading ?    \r\n            <section {...containerProps} style={{textAlign:\"center\",marginTop:window.innerHeight/2 - 100}}>\r\n                {indicatorEl} \r\n            </section> :\r\n            \r\n            <MaterialGrid item lg={12} md={12} sm={12} xs={12}>\r\n                <Widget title=\"ADDERS, BATTERIES AND INSURANCE PRICES\">\r\n                <Paper style={{}}>\r\n                    <Grid\r\n                        style={{ height: '900px' }}\r\n                        data={data}\r\n                        rowHeight={20}\r\n                        onItemChange={itemChange}\r\n\r\n                        cellRender={renderers.cellRender}\r\n                        rowRender={renderers.rowRender}\r\n                        navigatable={true}\r\n                        resizable={true}\r\n                        editField=\"inEdit\"\r\n                        >\r\n                        <Column field=\"id\" title=\"Id\" width=\"50px\" editable={false} auto locked={true} className=\"centerClass\"/>\r\n                        <Column title=\"Adders\"  field=\"adders\" width=\"250px\" className=\"centerClass\" />\r\n                        <Column title=\"Sales - Cash Price\"  field=\"sales_cash_price\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\" />\r\n                        <Column title=\"Scale\" editor=\"text\"  field=\"scale\" width=\"150px\" className=\"centerClass\" />\r\n                        {/* <Column title=\"Quantity\" field=\"quantity\" width=\"100px\" className=\"centerClass\" cell={(props) =><CustomCell {...props} quantityChange={quantityChange}/>}  /> */}\r\n                        <Column title=\"Quantity\" field=\"quantity\" width=\"100px\" className=\"centerClass\" cell={CommandCell}  />\r\n                        <Column title=\"Total\" field=\"total\" width=\"100px\" className=\"centerClass\" format=\"{0:c}\" />\r\n                        <Column title=\"\" editor=\"text\" field=\"F\" className=\"centerClass\" />\r\n                        <Column title=\"\" editor=\"text\" field=\"G\" width=\"100px\" className=\"centerClass\"/>\r\n                        <Column title=\"\" editor=\"text\" field=\"H\" width=\"100px\" className=\"centerClass\"/>\r\n                    </Grid>\r\n                </Paper>\r\n                </Widget>\r\n            </MaterialGrid>\r\n            }\r\n        </>\r\n      )\r\n}\r\n// class CustomCell extends React.Component {\r\n//     constructor(props){\r\n//       super(props);\r\n//       this.state = {data:this.props.dataItem[this.props.field]};\r\n//     }\r\n//     localizedData = [\r\n//       { text: 'Yes', value: \"Yes\" },\r\n//       { text: 'No', value: \"No\" }\r\n//     ];\r\n//     handleChange(e) {\r\n//       if(e.target.value.value === undefined){\r\n//         this.setState({data:e.target.value})\r\n//         this.props.quantityChange(\r\n//           {\r\n//             dataItem: this.props.dataItem,\r\n//             field: this.props.field,\r\n//             syntheticEvent: e.syntheticEvent,\r\n//             value: e.target.value\r\n//           }\r\n//         );\r\n//       }else\r\n//       {\r\n//         this.setState({data:e.target.value.value})\r\n//         this.props.quantityChange(\r\n//           {\r\n//             dataItem: this.props.dataItem,\r\n//             field: this.props.field,\r\n//             syntheticEvent: e.syntheticEvent,\r\n//             value: e.target.value.value\r\n//           }\r\n//         );\r\n//       }\r\n//     }\r\n  \r\n//     render() {\r\n//       const dataValue = this.props.dataItem[this.props.field];\r\n//     //   console.log(\"dataValue\",dataValue,this.props.dataItem,this.props.field)\r\n  \r\n//       let defaultRendering = null;\r\n  \r\n//       if (!this.props.dataItem.inEdit || this.props.dataItem.inEdit !== this.props.field) {\r\n//         defaultRendering = (\r\n//           <td className=\"centerClass\">\r\n//             {!dataValue || dataValue === null ? '' : dataValue.toString()}\r\n//           </td>\r\n//         );\r\n//       } else {\r\n//         switch(this.props.dataItem.scale){\r\n//             case \"per watt add-on\":\r\n//                 defaultRendering = (\r\n//                     <td>\r\n//                         <DropDownList\r\n//                           style={{ width: \"100px\" }}\r\n//                           onChange={this.handleChange.bind(this)}\r\n//                           value={this.localizedData.find(c => c.value === dataValue)}\r\n//                           data={this.localizedData}\r\n//                           textField=\"text\"\r\n//                               />\r\n//                     </td>\r\n//                 );\r\n//              break;\r\n//             case \"Added price\":\r\n//                 defaultRendering = (\r\n//                   <td>\r\n//                     <DropDownList\r\n//                       style={{ width: \"100px\" }}\r\n//                       onChange={this.handleChange.bind(this)}\r\n//                       value={this.localizedData.find(c => c.value === dataValue)}\r\n//                       data={this.localizedData}\r\n//                       textField=\"text\"\r\n//                           />\r\n//                 </td>\r\n//                 );\r\n//              break;\r\n//             case \"per foot\":\r\n//                 defaultRendering = (\r\n//                     <td><input className=\"k-textbox\" defaultValue={dataValue} style={{width:'100%'}} onChange={this.handleChange.bind(this)}></input></td>\r\n//                 );\r\n//              break;\r\n//             default:\r\n//                 defaultRendering = (\r\n//                     <td><input className=\"k-textbox\" defaultValue={dataValue} style={{width:'100%'}} onChange={this.handleChange.bind(this)}></input></td>\r\n//                 );\r\n//              break;\r\n//         }\r\n        \r\n//       }\r\n  \r\n//       return this.props.render ?\r\n//         this.props.render.call(undefined, defaultRendering, this.props) :\r\n//         defaultRendering;\r\n//     }\r\n//   }","E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\mock.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\charts\\components\\ApexLineChart.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\components\\Dot.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\notifications\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\adders\\renderers.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Header\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Notification\\Notification.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\adders\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\UserAvatar\\UserAvatar.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\formulas\\renderers.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\calculator\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\typography\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\maps\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\icons\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\UserAvatar\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\components\\Notification\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\fee\\index.js",["338","339","340","341"],"import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Grid, GridColumn as Column, GridToolbar } from '@progress/kendo-react-grid';\r\nimport { FirebaseContext } from '../../components/Firebase/context';\r\nimport { MyCommandCell } from './myCommandCell';\r\nimport { useLoading, ThreeDots} from '@agney/react-loading';\r\nimport Notification from \"../../components/Notification\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\nimport \"./style.css\"\r\nimport {\r\n    Paper,\r\n    Grid as MaterialGrid,\r\n  } from '@material-ui/core';\r\n  import Widget from \"../../components/Widget/Widget\";\r\n\r\nexport default function Fee() {\r\n    var classes = useStyles();\r\n    const { containerProps, indicatorEl } = useLoading({\r\n        loading: true,\r\n        indicator: <ThreeDots width=\"50\" />,\r\n      });\r\n    const [loading, setLoading] = React.useState(true);\r\n    const firebase = React.useContext(FirebaseContext);\r\n    const [editField, setEditField] = React.useState(\"inEdit\");\r\n    const [data, setData] = React.useState([]);\r\n    //#####################################toast########################################################\r\n    const sendNotification = (componentProps, options) => {\r\n        return toast(\r\n        <Notification\r\n            {...componentProps}\r\n            className={classes.notificationComponent}\r\n        />,\r\n        options,\r\n        );\r\n    }\r\n    const handleNotificationCall = () => {\r\n        var componentProps;\r\n    \r\n\r\n            componentProps = {\r\n              type: \"feedback\",\r\n              message: `Successfully saved`,\r\n              variant: \"contained\",\r\n              color: \"primary\",\r\n            };\r\n            \r\n        var toastId = sendNotification(componentProps, {\r\n          type: \"error\",\r\n          position:  toast.POSITION.TOP_CENTER,\r\n          progressClassName: classes.progress,\r\n          className: classes.notification,\r\n        });\r\n    }\r\n    //#####################################toast end########################################################\r\n    let CommandCell;\r\n\r\n    CommandCell = props => (\r\n      <MyCommandCell\r\n        {...props}\r\n        edit={enterEdit}\r\n        remove={remove}\r\n        add={add}\r\n        discard={discard}\r\n        update={update}\r\n        cancel={cancel}\r\n        editField={editField}\r\n        />\r\n    );\r\n\r\n    const enterEdit = (dataItem) => {\r\n        const newData = data.map(item =>\r\n                    item.ID === dataItem.ID ?\r\n                    { ...item, inEdit: true } : item\r\n                )\r\n        setData(newData)\r\n    }\r\n\r\n    const add = (dataItem) => {\r\n        dataItem.inEdit = undefined;\r\n        dataItem.ID = data.length;\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            return nitem;\r\n        })\r\n        let saveData = {data:newSaveData};\r\n        if(data.length === 1){\r\n            firebase.firestore().collection(\"fee\").add(saveData).then(() => {\r\n                setData([...data]);\r\n                handleNotificationCall();\r\n                console.log(\"fee Document successfully add!\");\r\n            })\r\n        }else\r\n        {\r\n            firebase.firestore().collection(\"fee\")\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                var docs = querySnapshot.docs;\r\n                if(docs.length > 0) //update documentation\r\n                {\r\n                    firebase.firestore().collection(\"fee\").doc(docs[0].id).update(saveData).then(() => {\r\n                        data.sort(function(a, b){return a.Fee - b.Fee});\r\n                        setData([...data]);\r\n                        handleNotificationCall();\r\n                        console.log(\"fee Document successfully update!\");\r\n                    })\r\n                }\r\n            })\r\n            \r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    const update = (dataItem) => {\r\n        const updatedItem = { ...dataItem, inEdit: undefined };\r\n        updateItem(data, updatedItem);\r\n        \r\n    }\r\n\r\n    const updateItem = (data, item) => {\r\n        let index = data.findIndex(p => p === item || (item.ID && p.ID === item.ID));\r\n        if (index >= 0) {\r\n            data[index] = { ...item };\r\n        }\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            return nitem;\r\n        })\r\n        let saveData = {data:newSaveData};\r\n        firebase.firestore().collection(\"fee\")\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                var docs = querySnapshot.docs;\r\n                if(docs.length > 0) //update documentation\r\n                {\r\n                    firebase.firestore().collection(\"fee\").doc(docs[0].id).update(saveData).then(() => {\r\n                        data.sort(function(a, b){return a.Fee - b.Fee});\r\n                        setData([...data]);\r\n                        handleNotificationCall();\r\n                        console.log(\"fee Document successfully update!\");\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    const cancel = (dataItem) => {\r\n    }\r\n\r\n    const discard = (dataItem) => {\r\n        cancelCurrentChanges()\r\n    }\r\n\r\n    const remove = (dataItem) => {\r\n        removeItem(data, dataItem);\r\n        let id = 0;\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            id++;\r\n            nitem.ID = id;\r\n            return nitem;\r\n        })\r\n        let saveData = {data:newSaveData};\r\n        firebase.firestore().collection(\"fee\")\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                var docs = querySnapshot.docs;\r\n                if(docs.length > 0) //update documentation\r\n                {\r\n                    firebase.firestore().collection(\"fee\").doc(docs[0].id).update(saveData).then(() => {\r\n                        data.sort(function(a, b){return a.Fee - b.Fee});\r\n                        setData([...newSaveData]);\r\n                        handleNotificationCall();\r\n                        console.log(\"fee Document successfully delete update!\");\r\n                    })\r\n                }\r\n            })\r\n        \r\n    }\r\n    const removeItem = (data, item) => {\r\n        let index = data.findIndex(p => p === item || (item.ID && p.ID === item.ID));\r\n        if (index >= 0) {\r\n            data.splice(index, 1);\r\n        }\r\n    }\r\n    const itemChange = (event) => {\r\n        const newData = data.map(item =>\r\n                    item.ID ===  event.dataItem.ID ?\r\n                    { ...item, [event.field]: event.value } : item\r\n                )\r\n        setData(newData)\r\n    }\r\n\r\n    const addNew = () => {\r\n        const newDataItem = { inEdit: true};\r\n        setData([ newDataItem, ...data ])\r\n    }\r\n\r\n    const cancelCurrentChanges = () => {\r\n        firebase.firestore().collection(\"fee\").get().then((query) => {\r\n            var docs = query.docs;\r\n            if(docs.length > 0){\r\n                const dbdata = docs[0].data().data;\r\n                dbdata.sort(function(a, b){return a.Fee - b.Fee});\r\n                setData(dbdata)\r\n            }else{\r\n                setData([]);\r\n            }\r\n          })\r\n    }\r\n    const hasEditedItem = data.some(p => p.inEdit);\r\n    React.useEffect(() => {\r\n        firebase.firestore().collection(\"fee\").get().then((query) => {\r\n            var docs = query.docs;\r\n            if(docs.length > 0){\r\n                const dbdata = docs[0].data().data;\r\n                dbdata.sort(function(a, b){return a.Fee - b.Fee});\r\n                setData(dbdata)\r\n            }else{\r\n                setData([]);\r\n            }\r\n            setLoading(false);\r\n          })\r\n        \r\n      }, [])\r\n    return (\r\n        <>\r\n            <ToastContainer \r\n                className={classes.toastsContainer}\r\n            />\r\n            {loading ?    \r\n            <section {...containerProps} style={{textAlign:\"center\",marginTop:window.innerHeight/2 - 100}}>\r\n                {indicatorEl} \r\n            </section> :\r\n            <MaterialGrid item lg={12} md={12} sm={12} xs={12}>\r\n                <Widget title=\"Dealer Fee\">\r\n                    <Paper style={{}}>\r\n                        <Grid\r\n                            data={data}\r\n                            onItemChange={itemChange}\r\n                            editField={editField}\r\n                            >\r\n                            <GridToolbar>\r\n                                <button\r\n                                title=\"Add new\"\r\n                                className=\"k-button k-secondary\"\r\n                                onClick={addNew}\r\n                                    >\r\n                                Add new fee\r\n                                </button>\r\n                                {hasEditedItem && (\r\n                                <button\r\n                                    title=\"Cancel current changes\"\r\n                                    className=\"k-button k-fiveth\"\r\n                                    onClick={cancelCurrentChanges}\r\n                                        >\r\n                                    Cancel current changes\r\n                                </button>\r\n                                    )}\r\n                            </GridToolbar>\r\n                            {/* <Column field=\"ID\" title=\"Id\" width=\"50px\" editable={false}  className=\"centerClass\"/> */}\r\n                            <Column field=\"Fee\" title=\"Fee (%)\"  className=\"centerClass\"/>\r\n                            <Column title=\"Action\" cell={CommandCell} width=\"300px\"  className=\"centerClass\"/>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Widget>\r\n            </MaterialGrid>\r\n            \r\n            }\r\n        </>\r\n        \r\n    );\r\n\r\n    \r\n}","E:\\work\\firebase\\ProRMS\\src\\pages\\fee\\myCommandCell.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\fee\\styles.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\adders\\customCell.js",["342"],"import React from \"react\";\r\nimport { DropDownList } from '@progress/kendo-react-dropdowns';\r\nimport { Input } from '@progress/kendo-react-inputs';\r\nexport const MyCustomCell = props => {\r\n  const { dataItem } = props;\r\n  const inEdit = dataItem[props.editField];\r\n  const localizedData = [\r\n    { text: 'Yes', value: \"Yes\" },\r\n    { text: 'No', value: \"No\" }\r\n  ];\r\n  const dataValue = dataItem[props.field];\r\n  // console.log(props)\r\n  if(dataItem.id === 22 || dataItem.id === 23){\r\n    return  (\r\n      <td className=\"k-command-cell\" style={{textAlign: \"center\"}}>\r\n        {dataItem.quantity}\r\n      </td>\r\n      )\r\n  }else{\r\n    return dataItem.scale === \"per watt add-on\" || dataItem.scale === \"Added price\"? (\r\n      <td className=\"k-command-cell\" style={{textAlign: \"center\",backgroundColor:\"#f4ff81\"}}>\r\n        <DropDownList\r\n            style={{ width: \"60px\" }}\r\n            id={dataItem.id.toString()}\r\n            onChange={props.onchange}\r\n            value={localizedData.find(c => c.value === dataValue)}\r\n            data={localizedData}\r\n            textField=\"text\"\r\n                />\r\n        \r\n      </td>\r\n    ) : (\r\n      <td className=\"k-command-cell\" style={{textAlign: \"center\",backgroundColor:\"#f4ff81\"}}>\r\n        <Input id={dataItem.id.toString()} defaultValue={dataItem.quantity} onChange={props.onchange} style={{width:60}}/>\r\n      </td>\r\n    );\r\n  }\r\n};","E:\\work\\firebase\\ProRMS\\src\\pages\\cash\\index.js",["343","344","345","346"],"import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Grid, GridColumn as Column, GridToolbar } from '@progress/kendo-react-grid';\r\nimport { FirebaseContext } from '../../components/Firebase/context';\r\nimport { MyCommandCell } from './myCommandCell';\r\nimport { useLoading, ThreeDots} from '@agney/react-loading';\r\nimport Notification from \"../../components/Notification\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\nimport \"./style.css\"\r\nimport {\r\n    Paper,\r\n    Grid as MaterialGrid,\r\n  } from '@material-ui/core';\r\n  import Widget from \"../../components/Widget/Widget\";\r\n\r\nexport default function Cash() {\r\n    var classes = useStyles();\r\n    const { containerProps, indicatorEl } = useLoading({\r\n        loading: true,\r\n        indicator: <ThreeDots width=\"50\" />,\r\n      });\r\n    const [loading, setLoading] = React.useState(true);\r\n    const firebase = React.useContext(FirebaseContext);\r\n    const [editField, setEditField] = React.useState(\"inEdit\");\r\n    const [data, setData] = React.useState([]);\r\n    //#####################################toast########################################################\r\n    const sendNotification = (componentProps, options) => {\r\n        return toast(\r\n        <Notification\r\n            {...componentProps}\r\n            className={classes.notificationComponent}\r\n        />,\r\n        options,\r\n        );\r\n    }\r\n    const handleNotificationCall = () => {\r\n        var componentProps;\r\n    \r\n\r\n            componentProps = {\r\n              type: \"feedback\",\r\n              message: `Successfully saved`,\r\n              variant: \"contained\",\r\n              color: \"primary\",\r\n            };\r\n            \r\n        var toastId = sendNotification(componentProps, {\r\n          type: \"error\",\r\n          position:  toast.POSITION.TOP_CENTER,\r\n          progressClassName: classes.progress,\r\n          className: classes.notification,\r\n        });\r\n    }\r\n    //#####################################toast end########################################################\r\n    let CommandCell;\r\n\r\n    CommandCell = props => (\r\n      <MyCommandCell\r\n        {...props}\r\n        edit={enterEdit}\r\n        remove={remove}\r\n        add={add}\r\n        discard={discard}\r\n        update={update}\r\n        cancel={cancel}\r\n        editField={editField}\r\n        />\r\n    );\r\n\r\n    const enterEdit = (dataItem) => {\r\n        const newData = data.map(item =>\r\n                    item.ID === dataItem.ID ?\r\n                    { ...item, inEdit: true } : item\r\n                )\r\n        setData(newData)\r\n    }\r\n\r\n    const add = (dataItem) => {\r\n        dataItem.inEdit = undefined;\r\n        dataItem.ID = data.length;\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            return nitem;\r\n        })\r\n        let saveData = {data:newSaveData};\r\n        if(data.length === 1){\r\n            firebase.firestore().collection(\"cash\").add(saveData).then(() => {\r\n                setData([...data]);\r\n                handleNotificationCall();\r\n                console.log(\"cash Document successfully add!\");\r\n            })\r\n        }else\r\n        {\r\n            firebase.firestore().collection(\"cash\")\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                var docs = querySnapshot.docs;\r\n                if(docs.length > 0) //update documentation\r\n                {\r\n                    firebase.firestore().collection(\"cash\").doc(docs[0].id).update(saveData).then(() => {\r\n                        data.sort(function(a, b){return a.cash - b.cash});\r\n                        setData([...data]);\r\n                        handleNotificationCall();\r\n                        console.log(\"cash Document successfully update!\");\r\n                    })\r\n                }\r\n            })\r\n            \r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    const update = (dataItem) => {\r\n        const updatedItem = { ...dataItem, inEdit: undefined };\r\n        updateItem(data, updatedItem);\r\n        \r\n    }\r\n\r\n    const updateItem = (data, item) => {\r\n        let index = data.findIndex(p => p === item || (item.ID && p.ID === item.ID));\r\n        if (index >= 0) {\r\n            data[index] = { ...item };\r\n        }\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            return nitem;\r\n        })\r\n        let saveData = {data:newSaveData};\r\n        firebase.firestore().collection(\"cash\")\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                var docs = querySnapshot.docs;\r\n                if(docs.length > 0) //update documentation\r\n                {\r\n                    firebase.firestore().collection(\"cash\").doc(docs[0].id).update(saveData).then(() => {\r\n                        data.sort(function(a, b){return a.cash - b.cash});\r\n                        setData([...data]);\r\n                        handleNotificationCall();\r\n                        console.log(\"cash Document successfully update!\");\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    const cancel = (dataItem) => {\r\n    }\r\n\r\n    const discard = (dataItem) => {\r\n        cancelCurrentChanges()\r\n    }\r\n\r\n    const remove = (dataItem) => {\r\n        removeItem(data, dataItem);\r\n        let id = 0;\r\n        const newSaveData = data.map(item => {\r\n            const {inEdit,...nitem} = item;\r\n            id++;\r\n            nitem.ID = id;\r\n            return nitem;\r\n        })\r\n        let saveData = {data:newSaveData};\r\n        firebase.firestore().collection(\"cash\")\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                var docs = querySnapshot.docs;\r\n                if(docs.length > 0) //update documentation\r\n                {\r\n                    firebase.firestore().collection(\"cash\").doc(docs[0].id).update(saveData).then(() => {\r\n                        data.sort(function(a, b){return a.cash - b.cash});\r\n                        setData([...newSaveData]);\r\n                        handleNotificationCall();\r\n                        console.log(\"cash Document successfully delete update!\");\r\n                    })\r\n                }\r\n            })\r\n        \r\n    }\r\n    const removeItem = (data, item) => {\r\n        let index = data.findIndex(p => p === item || (item.ID && p.ID === item.ID));\r\n        if (index >= 0) {\r\n            data.splice(index, 1);\r\n        }\r\n    }\r\n    const itemChange = (event) => {\r\n        const newData = data.map(item =>\r\n                    item.ID ===  event.dataItem.ID ?\r\n                    { ...item, [event.field]: event.value } : item\r\n                )\r\n        setData(newData)\r\n    }\r\n\r\n    const addNew = () => {\r\n        const newDataItem = { inEdit: true};\r\n        setData([ newDataItem, ...data ])\r\n    }\r\n\r\n    const cancelCurrentChanges = () => {\r\n        firebase.firestore().collection(\"cash\").get().then((query) => {\r\n            var docs = query.docs;\r\n            if(docs.length > 0){\r\n                const dbdata = docs[0].data().data;\r\n                dbdata.sort(function(a, b){return a.cash - b.cash});\r\n                setData(dbdata)\r\n            }else{\r\n                setData([]);\r\n            }\r\n          })\r\n    }\r\n    const hasEditedItem = data.some(p => p.inEdit);\r\n    React.useEffect(() => {\r\n        firebase.firestore().collection(\"cash\").get().then((query) => {\r\n            var docs = query.docs;\r\n            if(docs.length > 0){\r\n                const dbdata = docs[0].data().data;\r\n                dbdata.sort(function(a, b){return a.cash - b.cash});\r\n                setData(dbdata)\r\n            }else{\r\n                setData([]);\r\n            }\r\n            setLoading(false);\r\n          })\r\n        \r\n      }, [])\r\n    return (\r\n        <>\r\n            <ToastContainer \r\n                className={classes.toastsContainer}\r\n            />\r\n            {loading ?    \r\n            <section {...containerProps} style={{textAlign:\"center\",marginTop:window.innerHeight/2 - 100}}>\r\n                {indicatorEl} \r\n            </section> :\r\n            <MaterialGrid item lg={12} md={12} sm={12} xs={12}>\r\n                <Widget title=\"Cash back to customer\">\r\n                    <Paper style={{}}>\r\n                        <Grid\r\n                            data={data}\r\n                            onItemChange={itemChange}\r\n                            editField={editField}\r\n                            >\r\n                            <GridToolbar>\r\n                                <button\r\n                                title=\"Add new\"\r\n                                className=\"k-button k-secondary\"\r\n                                onClick={addNew}\r\n                                    >\r\n                                Add new cash\r\n                                </button>\r\n                                {hasEditedItem && (\r\n                                <button\r\n                                    title=\"Cancel current changes\"\r\n                                    className=\"k-button k-fiveth\"\r\n                                    onClick={cancelCurrentChanges}\r\n                                        >\r\n                                    Cancel current changes\r\n                                </button>\r\n                                    )}\r\n                            </GridToolbar>\r\n                            {/* <Column field=\"ID\" title=\"Id\" width=\"50px\" editable={false}  className=\"centerClass\"/> */}\r\n                            <Column field=\"cash\" title=\"Cash back to customer ($)\"  className=\"centerClass\"/>\r\n                            <Column title=\"Action\" cell={CommandCell} width=\"300px\"  className=\"centerClass\"/>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Widget>\r\n            </MaterialGrid>\r\n            \r\n            }\r\n        </>\r\n        \r\n    );\r\n\r\n    \r\n}","E:\\work\\firebase\\ProRMS\\src\\pages\\cash\\myCommandCell.js",[],"E:\\work\\firebase\\ProRMS\\src\\pages\\cash\\styles.js",[],{"ruleId":"347","replacedBy":"348"},{"ruleId":"349","replacedBy":"350"},{"ruleId":"351","severity":1,"message":"352","line":17,"column":1,"nodeType":"353","endLine":26,"endColumn":4},{"ruleId":"354","severity":1,"message":"355","line":19,"column":8,"nodeType":"356","messageId":"357","endLine":19,"endColumn":18},{"ruleId":"354","severity":1,"message":"358","line":20,"column":8,"nodeType":"356","messageId":"357","endLine":20,"endColumn":21},{"ruleId":"354","severity":1,"message":"359","line":21,"column":8,"nodeType":"356","messageId":"357","endLine":21,"endColumn":12},{"ruleId":"354","severity":1,"message":"360","line":22,"column":8,"nodeType":"356","messageId":"357","endLine":22,"endColumn":14},{"ruleId":"354","severity":1,"message":"361","line":23,"column":8,"nodeType":"356","messageId":"357","endLine":23,"endColumn":13},{"ruleId":"354","severity":1,"message":"362","line":24,"column":8,"nodeType":"356","messageId":"357","endLine":24,"endColumn":14},{"ruleId":"354","severity":1,"message":"363","line":20,"column":12,"nodeType":"356","messageId":"357","endLine":20,"endColumn":21},{"ruleId":"354","severity":1,"message":"364","line":21,"column":12,"nodeType":"356","messageId":"357","endLine":21,"endColumn":19},{"ruleId":"365","severity":1,"message":"366","line":47,"column":40,"nodeType":"367","messageId":"368","endLine":47,"endColumn":42},{"ruleId":"369","severity":1,"message":"370","line":55,"column":25,"nodeType":"356","messageId":"371","endLine":55,"endColumn":35},{"ruleId":"365","severity":1,"message":"366","line":57,"column":40,"nodeType":"367","messageId":"368","endLine":57,"endColumn":42},{"ruleId":"354","severity":1,"message":"372","line":91,"column":21,"nodeType":"356","messageId":"357","endLine":91,"endColumn":24},{"ruleId":"373","severity":1,"message":"374","line":104,"column":10,"nodeType":"375","endLine":104,"endColumn":12,"suggestions":"376"},{"ruleId":"365","severity":1,"message":"366","line":147,"column":29,"nodeType":"367","messageId":"368","endLine":147,"endColumn":31},{"ruleId":"365","severity":1,"message":"366","line":263,"column":27,"nodeType":"367","messageId":"368","endLine":263,"endColumn":29},{"ruleId":"373","severity":1,"message":"377","line":298,"column":6,"nodeType":"375","endLine":298,"endColumn":8,"suggestions":"378"},{"ruleId":"365","severity":1,"message":"379","line":315,"column":57,"nodeType":"367","messageId":"380","endLine":315,"endColumn":59},{"ruleId":"365","severity":1,"message":"379","line":341,"column":57,"nodeType":"367","messageId":"380","endLine":341,"endColumn":59},{"ruleId":"365","severity":1,"message":"379","line":367,"column":57,"nodeType":"367","messageId":"380","endLine":367,"endColumn":59},{"ruleId":"365","severity":1,"message":"379","line":393,"column":57,"nodeType":"367","messageId":"380","endLine":393,"endColumn":59},{"ruleId":"354","severity":1,"message":"381","line":29,"column":8,"nodeType":"356","messageId":"357","endLine":29,"endColumn":21},{"ruleId":"354","severity":1,"message":"382","line":30,"column":8,"nodeType":"356","messageId":"357","endLine":30,"endColumn":22},{"ruleId":"373","severity":1,"message":"383","line":64,"column":3,"nodeType":"356","endLine":64,"endColumn":12,"suggestions":"384"},{"ruleId":"354","severity":1,"message":"363","line":22,"column":12,"nodeType":"356","messageId":"357","endLine":22,"endColumn":21},{"ruleId":"354","severity":1,"message":"364","line":23,"column":12,"nodeType":"356","messageId":"357","endLine":23,"endColumn":19},{"ruleId":"365","severity":1,"message":"366","line":30,"column":34,"nodeType":"367","messageId":"368","endLine":30,"endColumn":36},{"ruleId":"365","severity":1,"message":"366","line":249,"column":40,"nodeType":"367","messageId":"368","endLine":249,"endColumn":42},{"ruleId":"369","severity":1,"message":"370","line":273,"column":25,"nodeType":"356","messageId":"371","endLine":273,"endColumn":35},{"ruleId":"365","severity":1,"message":"366","line":275,"column":40,"nodeType":"367","messageId":"368","endLine":275,"endColumn":42},{"ruleId":"369","severity":1,"message":"385","line":279,"column":25,"nodeType":"356","messageId":"371","endLine":279,"endColumn":36},{"ruleId":"369","severity":1,"message":"386","line":280,"column":25,"nodeType":"356","messageId":"371","endLine":280,"endColumn":28},{"ruleId":"373","severity":1,"message":"374","line":514,"column":10,"nodeType":"375","endLine":514,"endColumn":12,"suggestions":"387"},{"ruleId":"354","severity":1,"message":"388","line":15,"column":8,"nodeType":"356","messageId":"357","endLine":15,"endColumn":22},{"ruleId":"354","severity":1,"message":"389","line":41,"column":9,"nodeType":"356","messageId":"357","endLine":41,"endColumn":16},{"ruleId":"354","severity":1,"message":"390","line":94,"column":13,"nodeType":"356","messageId":"357","endLine":94,"endColumn":20},{"ruleId":"354","severity":1,"message":"391","line":101,"column":11,"nodeType":"356","messageId":"357","endLine":101,"endColumn":22},{"ruleId":"392","severity":1,"message":"393","line":154,"column":5,"nodeType":"394","messageId":"395","endLine":204,"endColumn":6},{"ruleId":"365","severity":1,"message":"366","line":212,"column":30,"nodeType":"367","messageId":"368","endLine":212,"endColumn":32},{"ruleId":"373","severity":1,"message":"374","line":319,"column":6,"nodeType":"375","endLine":319,"endColumn":8,"suggestions":"396"},{"ruleId":"354","severity":1,"message":"397","line":420,"column":22,"nodeType":"356","messageId":"357","endLine":420,"endColumn":25},{"ruleId":"354","severity":1,"message":"398","line":422,"column":22,"nodeType":"356","messageId":"357","endLine":422,"endColumn":25},{"ruleId":"354","severity":1,"message":"399","line":426,"column":22,"nodeType":"356","messageId":"357","endLine":426,"endColumn":25},{"ruleId":"354","severity":1,"message":"400","line":429,"column":22,"nodeType":"356","messageId":"357","endLine":429,"endColumn":25},{"ruleId":"354","severity":1,"message":"401","line":445,"column":22,"nodeType":"356","messageId":"357","endLine":445,"endColumn":25},{"ruleId":"354","severity":1,"message":"402","line":447,"column":22,"nodeType":"356","messageId":"357","endLine":447,"endColumn":25},{"ruleId":"354","severity":1,"message":"403","line":453,"column":22,"nodeType":"356","messageId":"357","endLine":453,"endColumn":25},{"ruleId":"354","severity":1,"message":"404","line":457,"column":22,"nodeType":"356","messageId":"357","endLine":457,"endColumn":25},{"ruleId":"354","severity":1,"message":"405","line":579,"column":23,"nodeType":"356","messageId":"357","endLine":579,"endColumn":27},{"ruleId":"354","severity":1,"message":"406","line":582,"column":23,"nodeType":"356","messageId":"357","endLine":582,"endColumn":27},{"ruleId":"373","severity":1,"message":"407","line":679,"column":4,"nodeType":"375","endLine":679,"endColumn":40,"suggestions":"408"},{"ruleId":"354","severity":1,"message":"409","line":15,"column":21,"nodeType":"356","messageId":"357","endLine":15,"endColumn":30},{"ruleId":"354","severity":1,"message":"410","line":20,"column":14,"nodeType":"356","messageId":"357","endLine":20,"endColumn":26},{"ruleId":"354","severity":1,"message":"364","line":43,"column":12,"nodeType":"356","messageId":"357","endLine":43,"endColumn":19},{"ruleId":"354","severity":1,"message":"390","line":66,"column":13,"nodeType":"356","messageId":"357","endLine":66,"endColumn":20},{"ruleId":"365","severity":1,"message":"366","line":89,"column":32,"nodeType":"367","messageId":"368","endLine":89,"endColumn":34},{"ruleId":"411","severity":1,"message":"412","line":121,"column":17,"nodeType":"413","messageId":"414","endLine":121,"endColumn":19},{"ruleId":"365","severity":1,"message":"366","line":168,"column":36,"nodeType":"367","messageId":"368","endLine":168,"endColumn":38},{"ruleId":"373","severity":1,"message":"415","line":248,"column":10,"nodeType":"375","endLine":248,"endColumn":12,"suggestions":"416"},{"ruleId":"354","severity":1,"message":"417","line":2,"column":13,"nodeType":"356","messageId":"357","endLine":2,"endColumn":21},{"ruleId":"354","severity":1,"message":"418","line":26,"column":23,"nodeType":"356","messageId":"357","endLine":26,"endColumn":35},{"ruleId":"354","severity":1,"message":"390","line":49,"column":13,"nodeType":"356","messageId":"357","endLine":49,"endColumn":20},{"ruleId":"373","severity":1,"message":"374","line":226,"column":10,"nodeType":"375","endLine":226,"endColumn":12,"suggestions":"419"},{"ruleId":"354","severity":1,"message":"420","line":6,"column":9,"nodeType":"356","messageId":"357","endLine":6,"endColumn":15},{"ruleId":"354","severity":1,"message":"417","line":2,"column":13,"nodeType":"356","messageId":"357","endLine":2,"endColumn":21},{"ruleId":"354","severity":1,"message":"418","line":26,"column":23,"nodeType":"356","messageId":"357","endLine":26,"endColumn":35},{"ruleId":"354","severity":1,"message":"390","line":49,"column":13,"nodeType":"356","messageId":"357","endLine":49,"endColumn":20},{"ruleId":"373","severity":1,"message":"374","line":226,"column":10,"nodeType":"375","endLine":226,"endColumn":12,"suggestions":"421"},"no-native-reassign",["422"],"no-negated-in-lhs",["423"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Notifications' is defined but never used.","'Maps' is defined but never used.","'Tables' is defined but never used.","'Icons' is defined but never used.","'Charts' is defined but never used.","'editField' is assigned a value but never used.","'changes' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-redeclare","'updateData' is already defined.","redeclared","'key' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'firebase'. Either include it or remove the dependency array.","ArrayExpression",["424"],"React Hook useEffect has a missing dependency: 'firebase'. Either include it or remove the dependency array.",["425"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'moreButtonRef' is assigned a value but never used.","'isMoreMenuOpen' is assigned a value but never used.","React Hook useEffect contains a call to 'setStructure'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [handleWindowWidthChange] as a second argument to the useEffect Hook.",["426"],"'formulasRef' is already defined.","'obj' is already defined.",["427"],"'NavigationIcon' is defined but never used.","'classes' is assigned a value but never used.","'toastId' is assigned a value but never used.","'CloseButton' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["428"],"'fC4' is assigned a value but never used.","'fC5' is assigned a value but never used.","'fE4' is assigned a value but never used.","'fE5' is assigned a value but never used.","'fI6' is assigned a value but never used.","'fI7' is assigned a value but never used.","'fK4' is assigned a value but never used.","'fK5' is assigned a value but never used.","'fAA4' is assigned a value but never used.","'fAA5' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'C5', 'C6', 'firebase', and 'handleNotificationCall'. Either include them or remove the dependency array.",["429"],"'CloseIcon' is defined but never used.","'DropDownList' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook React.useEffect has missing dependencies: 'firebase', 'handleNotificationCall', and 'setData'. Either include them or remove the dependency array.",["430"],"'ReactDOM' is defined but never used.","'setEditField' is assigned a value but never used.",["431"],"'inEdit' is assigned a value but never used.",["432"],"no-global-assign","no-unsafe-negation",{"desc":"433","fix":"434"},{"desc":"433","fix":"435"},{"desc":"436","fix":"437"},{"desc":"433","fix":"438"},{"desc":"433","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"433","fix":"444"},{"desc":"433","fix":"445"},"Update the dependencies array to be: [firebase]",{"range":"446","text":"447"},{"range":"448","text":"447"},"Add dependencies array: [handleWindowWidthChange]",{"range":"449","text":"450"},{"range":"451","text":"447"},{"range":"452","text":"447"},"Update the dependencies array to be: [C3, C4, C7, C8, C9, C10, C11, C12, C14, C18, C5, C6, firebase, handleNotificationCall]",{"range":"453","text":"454"},"Update the dependencies array to be: [firebase, handleNotificationCall, setData]",{"range":"455","text":"456"},{"range":"457","text":"447"},{"range":"458","text":"447"},[3894,3896],"[firebase]",[9853,9855],[2687,2687],", [handleWindowWidthChange]",[30053,30055],[10936,10938],[24108,24144],"[C3, C4, C7, C8, C9, C10, C11, C12, C14, C18, C5, C6, firebase, handleNotificationCall]",[9275,9277],"[firebase, handleNotificationCall, setData]",[7783,7785],[7807,7809]]